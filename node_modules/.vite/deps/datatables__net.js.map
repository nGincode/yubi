{
  "version": 3,
  "sources": ["../../datatables.net/js/jquery.dataTables.mjs"],
  "sourcesContent": ["/*! DataTables 1.13.4\r\n * \u00A92008-2023 SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\nimport jQuery from 'jquery';\r\n\r\n// DataTables code uses $ internally, but we want to be able to\r\n// reassign $ with the `use` method, so it is a regular var.\r\nlet $ = jQuery;\r\n\r\n\r\nvar DataTable = function ( selector, options )\r\n{\r\n\t// Check if called with a window or jQuery object for DOM less applications\r\n\t// This is for backwards compatibility\r\n\tif (DataTable.factory(selector, options)) {\r\n\t\treturn DataTable;\r\n\t}\r\n\r\n\t// When creating with `new`, create a new DataTable, returning the API instance\r\n\tif (this instanceof DataTable) {\r\n\t\treturn $(selector).DataTable(options);\r\n\t}\r\n\telse {\r\n\t\t// Argument switching\r\n\t\toptions = selector;\r\n\t}\r\n\r\n\t/**\r\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\r\n\t * return the resulting jQuery object.\r\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\r\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\r\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\r\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\r\n\t *    'original' whereby the original order the data was read into the table is used.\r\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\r\n\t *  @returns {object} jQuery object, filtered by the given selector.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Highlight every second row\r\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\r\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\r\n\t *      oTable.fnFilter('Webkit');\r\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\r\n\t *      oTable.fnFilter('');\r\n\t *    } );\r\n\t */\r\n\tthis.$ = function ( sSelector, oOpts )\r\n\t{\r\n\t\treturn this.api(true).$( sSelector, oOpts );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\r\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\r\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\r\n\t * rows are found, the data returned is the original data array/object that was used to\r\n\t * create the row (or a generated array if from a DOM source).\r\n\t *\r\n\t * This method is often useful in-combination with $ where both functions are given the\r\n\t * same parameters and the array indexes will match identically.\r\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\r\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\r\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\r\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\r\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\r\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\r\n\t *    'original' whereby the original order the data was read into the table is used.\r\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\r\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\r\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\r\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\r\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\r\n\t *    entry in the array.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Get the data from the first row in the table\r\n\t *      var data = oTable._('tr:first');\r\n\t *\r\n\t *      // Do something useful with the data\r\n\t *      alert( \"First cell is: \"+data[0] );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Filter to 'Webkit' and get all data for\r\n\t *      oTable.fnFilter('Webkit');\r\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\r\n\t *\r\n\t *      // Do something with the data\r\n\t *      alert( data.length+\" rows matched the search\" );\r\n\t *    } );\r\n\t */\r\n\tthis._ = function ( sSelector, oOpts )\r\n\t{\r\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Create a DataTables Api instance, with the currently selected tables for\r\n\t * the Api's context.\r\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\r\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\r\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\r\n\t *   or if all tables captured in the jQuery object should be used.\r\n\t * @return {DataTables.Api}\r\n\t */\r\n\tthis.api = function ( traditional )\r\n\t{\r\n\t\treturn traditional ?\r\n\t\t\tnew _Api(\r\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\r\n\t\t\t) :\r\n\t\t\tnew _Api( this );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Add a single new row or multiple rows of data to the table. Please note\r\n\t * that this is suitable for client-side processing only - if you are using\r\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\r\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\r\n\t *  @param {array|object} data The data to be added to the table. This can be:\r\n\t *    <ul>\r\n\t *      <li>1D array of data - add a single row with the data provided</li>\r\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\r\n\t *      <li>object - data object when using <i>mData</i></li>\r\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\r\n\t *    </ul>\r\n\t *  @param {bool} [redraw=true] redraw the table or not\r\n\t *  @returns {array} An array of integers, representing the list of indexes in\r\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\r\n\t *    the table.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    // Global var for counter\r\n\t *    var giCount = 2;\r\n\t *\r\n\t *    $(document).ready(function() {\r\n\t *      $('#example').dataTable();\r\n\t *    } );\r\n\t *\r\n\t *    function fnClickAddRow() {\r\n\t *      $('#example').dataTable().fnAddData( [\r\n\t *        giCount+\".1\",\r\n\t *        giCount+\".2\",\r\n\t *        giCount+\".3\",\r\n\t *        giCount+\".4\" ]\r\n\t *      );\r\n\t *\r\n\t *      giCount++;\r\n\t *    }\r\n\t */\r\n\tthis.fnAddData = function( data, redraw )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\t/* Check if we want to add multiple rows or not */\r\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\r\n\t\t\tapi.rows.add( data ) :\r\n\t\t\tapi.row.add( data );\r\n\t\r\n\t\tif ( redraw === undefined || redraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\r\n\t\treturn rows.flatten().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This function will make DataTables recalculate the column sizes, based on the data\r\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\r\n\t * through the sWidth parameter). This can be useful when the width of the table's\r\n\t * parent element changes (for example a window resize).\r\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable( {\r\n\t *        \"sScrollY\": \"200px\",\r\n\t *        \"bPaginate\": false\r\n\t *      } );\r\n\t *\r\n\t *      $(window).on('resize', function () {\r\n\t *        oTable.fnAdjustColumnSizing();\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).columns.adjust();\r\n\t\tvar settings = api.settings()[0];\r\n\t\tvar scroll = settings.oScroll;\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw( false );\r\n\t\t}\r\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\r\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\r\n\t\t\t_fnScrollDraw( settings );\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Quickly and simply clear a table\r\n\t *  @param {bool} [bRedraw=true] redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\r\n\t *      oTable.fnClearTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnClearTable = function( bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).clear();\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * The exact opposite of 'opening' a row, this function will close any rows which\r\n\t * are currently 'open'.\r\n\t *  @param {node} nTr the table row to 'close'\r\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnClose = function( nTr )\r\n\t{\r\n\t\tthis.api( true ).row( nTr ).child.hide();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove a row for the table\r\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\r\n\t *    the TR element you want to delete\r\n\t *  @param {function|null} [callBack] Callback function\r\n\t *  @param {bool} [redraw=true] Redraw the table or not\r\n\t *  @returns {array} The row that was deleted\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Immediately remove the first row\r\n\t *      oTable.fnDeleteRow( 0 );\r\n\t *    } );\r\n\t */\r\n\tthis.fnDeleteRow = function( target, callback, redraw )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\tvar rows = api.rows( target );\r\n\t\tvar settings = rows.settings()[0];\r\n\t\tvar data = settings.aoData[ rows[0][0] ];\r\n\t\r\n\t\trows.remove();\r\n\t\r\n\t\tif ( callback ) {\r\n\t\t\tcallback.call( this, settings, data );\r\n\t\t}\r\n\t\r\n\t\tif ( redraw === undefined || redraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\r\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\r\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnDestroy();\r\n\t *    } );\r\n\t */\r\n\tthis.fnDestroy = function ( remove )\r\n\t{\r\n\t\tthis.api( true ).destroy( remove );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Redraw the table\r\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\r\n\t *      oTable.fnDraw();\r\n\t *    } );\r\n\t */\r\n\tthis.fnDraw = function( complete )\r\n\t{\r\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\r\n\t\t// into account the new data, but can hold position.\r\n\t\tthis.api( true ).draw( complete );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Filter the input based on data\r\n\t *  @param {string} sInput String to filter the table on\r\n\t *  @param {int|null} [iColumn] Column to limit filtering to\r\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\r\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\r\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\r\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sometime later - filter...\r\n\t *      oTable.fnFilter( 'test string' );\r\n\t *    } );\r\n\t */\r\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( iColumn === null || iColumn === undefined ) {\r\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\r\n\t\t}\r\n\t\r\n\t\tapi.draw();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the data for the whole table, an individual row or an individual cell based on the\r\n\t * provided parameters.\r\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\r\n\t *    a TR node then the data source for the whole row will be returned. If given as a\r\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\r\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\r\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\r\n\t *  @param {int} [col] Optional column index that you want the data of.\r\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\r\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\r\n\t *    defined, only data for the designated cell is returned.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    // Row data\r\n\t *    $(document).ready(function() {\r\n\t *      oTable = $('#example').dataTable();\r\n\t *\r\n\t *      oTable.$('tr').click( function () {\r\n\t *        var data = oTable.fnGetData( this );\r\n\t *        // ... do something with the array / object of data for the row\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Individual cell data\r\n\t *    $(document).ready(function() {\r\n\t *      oTable = $('#example').dataTable();\r\n\t *\r\n\t *      oTable.$('td').click( function () {\r\n\t *        var sData = oTable.fnGetData( this );\r\n\t *        alert( 'The cell clicked on had the value of '+sData );\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetData = function( src, col )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( src !== undefined ) {\r\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\r\n\t\r\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\r\n\t\t\t\tapi.cell( src, col ).data() :\r\n\t\t\t\tapi.row( src ).data() || null;\r\n\t\t}\r\n\t\r\n\t\treturn api.data().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\r\n\t * typically want to use the '$' API method in preference to this as it is more\r\n\t * flexible.\r\n\t *  @param {int} [iRow] Optional row index for the TR element you want\r\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\r\n\t *    in the table's body, or iRow is defined, just the TR element requested.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Get the nodes from the table\r\n\t *      var nNodes = oTable.fnGetNodes( );\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetNodes = function( iRow )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\treturn iRow !== undefined ?\r\n\t\t\tapi.row( iRow ).node() :\r\n\t\t\tapi.rows().nodes().flatten().toArray();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the array indexes of a particular cell from it's DOM element\r\n\t * and column index including hidden columns\r\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\r\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\r\n\t *    if given as a cell, an array of [row index, column index (visible),\r\n\t *    column index (all)] is given.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      $('#example tbody td').click( function () {\r\n\t *        // Get the position of the current data from the node\r\n\t *        var aPos = oTable.fnGetPosition( this );\r\n\t *\r\n\t *        // Get the data array for this row\r\n\t *        var aData = oTable.fnGetData( aPos[0] );\r\n\t *\r\n\t *        // Update the data array and return the value\r\n\t *        aData[ aPos[1] ] = 'clicked';\r\n\t *        this.innerHTML = 'clicked';\r\n\t *      } );\r\n\t *\r\n\t *      // Init DataTables\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnGetPosition = function( node )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\tvar nodeName = node.nodeName.toUpperCase();\r\n\t\r\n\t\tif ( nodeName == 'TR' ) {\r\n\t\t\treturn api.row( node ).index();\r\n\t\t}\r\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\r\n\t\t\tvar cell = api.cell( node ).index();\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tcell.row,\r\n\t\t\t\tcell.columnVisible,\r\n\t\t\t\tcell.column\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Check to see if a row is 'open' or not.\r\n\t *  @param {node} nTr the table row to check\r\n\t *  @returns {boolean} true if the row is currently open, false otherwise\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnIsOpen = function( nTr )\r\n\t{\r\n\t\treturn this.api( true ).row( nTr ).child.isShown();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This function will place a new row directly after a row which is currently\r\n\t * on display on the page, with the HTML contents that is passed into the\r\n\t * function. This can be used, for example, to ask for confirmation that a\r\n\t * particular record should be deleted.\r\n\t *  @param {node} nTr The table row to 'open'\r\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\r\n\t *  @param {string} sClass Class to give the new TD cell\r\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\r\n\t *    first parameter, is not found in the table, this method will silently\r\n\t *    return.\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable;\r\n\t *\r\n\t *      // 'open' an information row when a row is clicked on\r\n\t *      $('#example tbody tr').click( function () {\r\n\t *        if ( oTable.fnIsOpen(this) ) {\r\n\t *          oTable.fnClose( this );\r\n\t *        } else {\r\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\r\n\t *        }\r\n\t *      } );\r\n\t *\r\n\t *      oTable = $('#example').dataTable();\r\n\t *    } );\r\n\t */\r\n\tthis.fnOpen = function( nTr, mHtml, sClass )\r\n\t{\r\n\t\treturn this.api( true )\r\n\t\t\t.row( nTr )\r\n\t\t\t.child( mHtml, sClass )\r\n\t\t\t.show()\r\n\t\t\t.child()[0];\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Change the pagination - provides the internal logic for pagination in a simple API\r\n\t * function. With this function you can have a DataTables table go to the next,\r\n\t * previous, first or last pages.\r\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\r\n\t *    or page number to jump to (integer), note that page 0 is the first page.\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnPageChange( 'next' );\r\n\t *    } );\r\n\t */\r\n\tthis.fnPageChange = function ( mAction, bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).page( mAction );\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw(false);\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Show a particular column\r\n\t *  @param {int} iCol The column whose display should be changed\r\n\t *  @param {bool} bShow Show (true) or hide (false) the column\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Hide the second column after initialisation\r\n\t *      oTable.fnSetColumnVis( 1, false );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\r\n\t{\r\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.columns.adjust().draw();\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Get the settings for a particular table for external manipulation\r\n\t *  @returns {object} DataTables settings object. See\r\n\t *    {@link DataTable.models.oSettings}\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      var oSettings = oTable.fnSettings();\r\n\t *\r\n\t *      // Show an example parameter from the settings\r\n\t *      alert( oSettings._iDisplayStart );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSettings = function()\r\n\t{\r\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sort the table by a particular column\r\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\r\n\t *    'display index' if you have hidden data entries\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sort immediately with columns 0 and 1\r\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSort = function( aaSort )\r\n\t{\r\n\t\tthis.api( true ).order( aaSort ).draw();\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Attach a sort listener to an element for a given column\r\n\t *  @param {node} nNode the element to attach the sort listener to\r\n\t *  @param {int} iColumn the column that a click on this node will sort on\r\n\t *  @param {function} [fnCallback] callback function when sort is run\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *\r\n\t *      // Sort on column 1, when 'sorter' is clicked on\r\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\r\n\t *    } );\r\n\t */\r\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\r\n\t{\r\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Update a table cell or row - this method will accept either a single value to\r\n\t * update the cell with, an array of values with one element for each column or\r\n\t * an object in the same format as the original data source. The function is\r\n\t * self-referencing in order to make the multi column updates easier.\r\n\t *  @param {object|array|string} mData Data to update the cell/row with\r\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\r\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\r\n\t *    update a whole row.\r\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\r\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\r\n\t *  @returns {int} 0 on success, 1 on error\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\r\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\r\n\t *    } );\r\n\t */\r\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\r\n\t{\r\n\t\tvar api = this.api( true );\r\n\t\r\n\t\tif ( iColumn === undefined || iColumn === null ) {\r\n\t\t\tapi.row( mRow ).data( mData );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\r\n\t\t}\r\n\t\r\n\t\tif ( bAction === undefined || bAction ) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t\r\n\t\tif ( bRedraw === undefined || bRedraw ) {\r\n\t\t\tapi.draw();\r\n\t\t}\r\n\t\treturn 0;\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\r\n\t * to ensure compatibility.\r\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\r\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\r\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\r\n\t *    version, or false if this version of DataTales is not suitable\r\n\t *  @method\r\n\t *  @dtopt API\r\n\t *  @deprecated Since v1.10\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready(function() {\r\n\t *      var oTable = $('#example').dataTable();\r\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\r\n\t *    } );\r\n\t */\r\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\r\n\t\r\n\r\n\tvar _that = this;\r\n\tvar emptyInit = options === undefined;\r\n\tvar len = this.length;\r\n\r\n\tif ( emptyInit ) {\r\n\t\toptions = {};\r\n\t}\r\n\r\n\tthis.oApi = this.internal = _ext.internal;\r\n\r\n\t// Extend with old style plug-in API methods\r\n\tfor ( var fn in DataTable.ext.internal ) {\r\n\t\tif ( fn ) {\r\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.each(function() {\r\n\t\t// For each initialisation we want to give it a clean initialisation\r\n\t\t// object that can be bashed around\r\n\t\tvar o = {};\r\n\t\tvar oInit = len > 1 ? // optimisation for single table case\r\n\t\t\t_fnExtend( o, options, true ) :\r\n\t\t\toptions;\r\n\r\n\t\t/*global oInit,_that,emptyInit*/\r\n\t\tvar i=0, iLen, j, jLen, k, kLen;\r\n\t\tvar sId = this.getAttribute( 'id' );\r\n\t\tvar bInitHandedOff = false;\r\n\t\tvar defaults = DataTable.defaults;\r\n\t\tvar $this = $(this);\r\n\t\t\r\n\t\t\r\n\t\t/* Sanity check */\r\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\r\n\t\t{\r\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t/* Backwards compatibility for the defaults */\r\n\t\t_fnCompatOpts( defaults );\r\n\t\t_fnCompatCols( defaults.column );\r\n\t\t\r\n\t\t/* Convert the camel-case defaults to Hungarian */\r\n\t\t_fnCamelToHungarian( defaults, defaults, true );\r\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\r\n\t\t\r\n\t\t/* Setting up the initialisation object */\r\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/* Check to see if we are re-initialising a table */\r\n\t\tvar allSettings = DataTable.settings;\r\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tvar s = allSettings[i];\r\n\t\t\r\n\t\t\t/* Base check on table node */\r\n\t\t\tif (\r\n\t\t\t\ts.nTable == this ||\r\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\r\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\r\n\t\t\t) {\r\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\r\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\r\n\t\t\r\n\t\t\t\tif ( emptyInit || bRetrieve )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn s.oInstance;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( bDestroy )\r\n\t\t\t\t{\r\n\t\t\t\t\ts.oInstance.fnDestroy();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\r\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\r\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\r\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\r\n\t\t\t */\r\n\t\t\tif ( s.sTableId == this.id )\r\n\t\t\t{\r\n\t\t\t\tallSettings.splice( i, 1 );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t/* Ensure the table has an ID - required for accessibility */\r\n\t\tif ( sId === null || sId === \"\" )\r\n\t\t{\r\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\r\n\t\t\tthis.id = sId;\r\n\t\t}\r\n\t\t\r\n\t\t/* Create the settings object for this table and set some of the default parameters */\r\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\r\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\r\n\t\t\t\"sInstance\":     sId,\r\n\t\t\t\"sTableId\":      sId\r\n\t\t} );\r\n\t\toSettings.nTable = this;\r\n\t\toSettings.oApi   = _that.internal;\r\n\t\toSettings.oInit  = oInit;\r\n\t\t\r\n\t\tallSettings.push( oSettings );\r\n\t\t\r\n\t\t// Need to add the instance after the instance after the settings object has been added\r\n\t\t// to the settings array, so we can self reference the table instance if more than one\r\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\r\n\t\t\r\n\t\t// Backwards compatibility, before we apply all the defaults\r\n\t\t_fnCompatOpts( oInit );\r\n\t\t_fnLanguageCompat( oInit.oLanguage );\r\n\t\t\r\n\t\t// If the length menu is given, but the init display length is not, use the length menu\r\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\r\n\t\t{\r\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\r\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\r\n\t\t}\r\n\t\t\r\n\t\t// Apply the defaults and init options to make a single init object will all\r\n\t\t// options defined from defaults and instance options.\r\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\r\n\t\t\r\n\t\t\r\n\t\t// Map the initialisation options onto the settings object\r\n\t\t_fnMap( oSettings.oFeatures, oInit, [\r\n\t\t\t\"bPaginate\",\r\n\t\t\t\"bLengthChange\",\r\n\t\t\t\"bFilter\",\r\n\t\t\t\"bSort\",\r\n\t\t\t\"bSortMulti\",\r\n\t\t\t\"bInfo\",\r\n\t\t\t\"bProcessing\",\r\n\t\t\t\"bAutoWidth\",\r\n\t\t\t\"bSortClasses\",\r\n\t\t\t\"bServerSide\",\r\n\t\t\t\"bDeferRender\"\r\n\t\t] );\r\n\t\t_fnMap( oSettings, oInit, [\r\n\t\t\t\"asStripeClasses\",\r\n\t\t\t\"ajax\",\r\n\t\t\t\"fnServerData\",\r\n\t\t\t\"fnFormatNumber\",\r\n\t\t\t\"sServerMethod\",\r\n\t\t\t\"aaSorting\",\r\n\t\t\t\"aaSortingFixed\",\r\n\t\t\t\"aLengthMenu\",\r\n\t\t\t\"sPaginationType\",\r\n\t\t\t\"sAjaxSource\",\r\n\t\t\t\"sAjaxDataProp\",\r\n\t\t\t\"iStateDuration\",\r\n\t\t\t\"sDom\",\r\n\t\t\t\"bSortCellsTop\",\r\n\t\t\t\"iTabIndex\",\r\n\t\t\t\"fnStateLoadCallback\",\r\n\t\t\t\"fnStateSaveCallback\",\r\n\t\t\t\"renderer\",\r\n\t\t\t\"searchDelay\",\r\n\t\t\t\"rowId\",\r\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\r\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\r\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\r\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oScroll, oInit, [\r\n\t\t\t[ \"sScrollX\", \"sX\" ],\r\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\r\n\t\t\t[ \"sScrollY\", \"sY\" ],\r\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\r\n\t\t] );\r\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\r\n\t\t\r\n\t\t/* Callback functions which are array driven */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\r\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\r\n\t\t\r\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\r\n\t\t\r\n\t\t/* Browser support detection */\r\n\t\t_fnBrowserDetect( oSettings );\r\n\t\t\r\n\t\tvar oClasses = oSettings.oClasses;\r\n\t\t\r\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\r\n\t\t$this.addClass( oClasses.sTable );\r\n\t\t\r\n\t\t\r\n\t\tif ( oSettings.iInitDisplayStart === undefined )\r\n\t\t{\r\n\t\t\t/* Display start point, taking into account the save saving */\r\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\r\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\r\n\t\t}\r\n\t\t\r\n\t\tif ( oInit.iDeferLoading !== null )\r\n\t\t{\r\n\t\t\toSettings.bDeferLoading = true;\r\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\r\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\r\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\r\n\t\t}\r\n\t\t\r\n\t\t/* Language definitions */\r\n\t\tvar oLanguage = oSettings.oLanguage;\r\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\r\n\t\t\r\n\t\tif ( oLanguage.sUrl )\r\n\t\t{\r\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\r\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\r\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\r\n\t\t\t */\r\n\t\t\t$.ajax( {\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\turl: oLanguage.sUrl,\r\n\t\t\t\tsuccess: function ( json ) {\r\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\r\n\t\t\t\t\t_fnLanguageCompat( json );\r\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\r\n\t\t\r\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t},\r\n\t\t\t\terror: function () {\r\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\r\n\t\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tbInitHandedOff = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Stripes\r\n\t\t */\r\n\t\tif ( oInit.asStripeClasses === null )\r\n\t\t{\r\n\t\t\toSettings.asStripeClasses =[\r\n\t\t\t\toClasses.sStripeOdd,\r\n\t\t\t\toClasses.sStripeEven\r\n\t\t\t];\r\n\t\t}\r\n\t\t\r\n\t\t/* Remove row stripe classes if they are already on the table row */\r\n\t\tvar stripeClasses = oSettings.asStripeClasses;\r\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\r\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\r\n\t\t\treturn rowOne.hasClass(el);\r\n\t\t} ) ) !== -1 ) {\r\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\r\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\t * Columns\r\n\t\t * See if we should load columns automatically or use defined ones\r\n\t\t */\r\n\t\tvar anThs = [];\r\n\t\tvar aoColumnsInit;\r\n\t\tvar nThead = this.getElementsByTagName('thead');\r\n\t\tif ( nThead.length !== 0 )\r\n\t\t{\r\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\r\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\r\n\t\t}\r\n\t\t\r\n\t\t/* If not given a column array, generate one with nulls */\r\n\t\tif ( oInit.aoColumns === null )\r\n\t\t{\r\n\t\t\taoColumnsInit = [];\r\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\r\n\t\t\t{\r\n\t\t\t\taoColumnsInit.push( null );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\taoColumnsInit = oInit.aoColumns;\r\n\t\t}\r\n\t\t\r\n\t\t/* Add the columns */\r\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\r\n\t\t}\r\n\t\t\r\n\t\t/* Apply the column definitions */\r\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\r\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\r\n\t\t} );\r\n\t\t\r\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\r\n\t\t * attributes are found\r\n\t\t */\r\n\t\tif ( rowOne.length ) {\r\n\t\t\tvar a = function ( cell, name ) {\r\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\r\n\t\t\t};\r\n\t\t\r\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\r\n\t\t\t\tvar col = oSettings.aoColumns[i];\r\n\t\t\r\n\t\t\t\tif (! col) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tif ( col.mData === i ) {\r\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\r\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\r\n\t\t\r\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\r\n\t\t\t\t\t\tcol.mData = {\r\n\t\t\t\t\t\t\t_:      i+'.display',\r\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\r\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tcol._isArrayHost = true;\r\n\t\t\r\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\t\r\n\t\tvar features = oSettings.oFeatures;\r\n\t\tvar loadedInit = function () {\r\n\t\t\t/*\r\n\t\t\t * Sorting\r\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\r\n\t\t\t */\r\n\t\t\r\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\r\n\t\t\t// in case that has been altered, so the default sort reflects that option\r\n\t\t\tif ( oInit.aaSorting === undefined ) {\r\n\t\t\t\tvar sorting = oSettings.aaSorting;\r\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\r\n\t\t\t * account, and also will apply sorting disabled classes if disabled\r\n\t\t\t */\r\n\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\r\n\t\t\tif ( features.bSort ) {\r\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\t\t\tif ( oSettings.bSorted ) {\r\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\r\n\t\t\t\t\t\tvar sortedColumns = {};\r\n\t\t\r\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\r\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\r\n\t\t\t\t\t\t} );\r\n\t\t\r\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\r\n\t\t\t\t\t\t_fnSortAria( oSettings );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\r\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\r\n\t\t\t\t\t_fnSortingClasses( oSettings );\r\n\t\t\t\t}\r\n\t\t\t}, 'sc' );\r\n\t\t\r\n\t\t\r\n\t\t\t/*\r\n\t\t\t * Final init\r\n\t\t\t * Cache the header, body and footer as required, creating them if needed\r\n\t\t\t */\r\n\t\t\r\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\r\n\t\t\tvar captions = $this.children('caption').each( function () {\r\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\r\n\t\t\t} );\r\n\t\t\r\n\t\t\tvar thead = $this.children('thead');\r\n\t\t\tif ( thead.length === 0 ) {\r\n\t\t\t\tthead = $('<thead/>').appendTo($this);\r\n\t\t\t}\r\n\t\t\toSettings.nTHead = thead[0];\r\n\t\t\r\n\t\t\tvar tbody = $this.children('tbody');\r\n\t\t\tif ( tbody.length === 0 ) {\r\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\r\n\t\t\t}\r\n\t\t\toSettings.nTBody = tbody[0];\r\n\t\t\r\n\t\t\tvar tfoot = $this.children('tfoot');\r\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\r\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\r\n\t\t\t\t// a tfoot element for the caption element to be appended to\r\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\r\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\r\n\t\t\t}\r\n\t\t\telse if ( tfoot.length > 0 ) {\r\n\t\t\t\toSettings.nTFoot = tfoot[0];\r\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Check if there is data passing into the constructor */\r\n\t\t\tif ( oInit.aaData ) {\r\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\r\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\r\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\r\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\r\n\t\t\t\t * to replace it with Ajax data\r\n\t\t\t\t */\r\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/* Copy the data index array */\r\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\r\n\t\t\r\n\t\t\t/* Initialisation complete - table can be drawn */\r\n\t\t\toSettings.bInitialised = true;\r\n\t\t\r\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\r\n\t\t\t * language processor)\r\n\t\t\t */\r\n\t\t\tif ( bInitHandedOff === false ) {\r\n\t\t\t\t_fnInitialise( oSettings );\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/* Must be done after everything which can be overridden by the state saving! */\r\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\r\n\t\t\r\n\t\tif ( oInit.bStateSave )\r\n\t\t{\r\n\t\t\tfeatures.bStateSave = true;\r\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tloadedInit();\r\n\t\t}\r\n\t\t\r\n\t} );\r\n\t_that = null;\r\n\treturn this;\r\n};\r\n\r\n\r\n/*\r\n * It is useful to have variables which are scoped locally so only the\r\n * DataTables functions can access them and they don't leak into global space.\r\n * At the same time these functions are often useful over multiple files in the\r\n * core and API, so we list, or at least document, all variables which are used\r\n * by DataTables as private variables here. This also ensures that there is no\r\n * clashing of variable names and that they can easily referenced for reuse.\r\n */\r\n\r\n\r\n// Defined else where\r\n//  _selector_run\r\n//  _selector_opts\r\n//  _selector_first\r\n//  _selector_row_indexes\r\n\r\nvar _ext; // DataTable.ext\r\nvar _Api; // DataTable.Api\r\nvar _api_register; // DataTable.Api.register\r\nvar _api_registerPlural; // DataTable.Api.registerPlural\r\n\r\nvar _re_dic = {};\r\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\r\nvar _re_html = /<.*?>/g;\r\n\r\n// This is not strict ISO8601 - Date.parse() is quite lax, although\r\n// implementations differ between browsers.\r\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\r\n\r\n// Escape regular expression special characters\r\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\r\n\r\n// http://en.wikipedia.org/wiki/Foreign_exchange_market\r\n// - \\u20BD - Russian ruble.\r\n// - \\u20a9 - South Korean Won\r\n// - \\u20BA - Turkish Lira\r\n// - \\u20B9 - Indian Rupee\r\n// - R - Brazil (R$) and South Africa\r\n// - fr - Swiss Franc\r\n// - kr - Swedish krona, Norwegian krone and Danish krone\r\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\r\n// - \u0243 - Bitcoin\r\n// - \u039E - Ethereum\r\n//   standards as thousands separators.\r\nvar _re_formatted_numeric = /['\\u00A0,$\u00A3\u20AC\u00A5%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk\u0243\u039E]/gi;\r\n\r\n\r\nvar _empty = function ( d ) {\r\n\treturn !d || d === true || d === '-' ? true : false;\r\n};\r\n\r\n\r\nvar _intVal = function ( s ) {\r\n\tvar integer = parseInt( s, 10 );\r\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\r\n};\r\n\r\n// Convert from a formatted number with characters other than `.` as the\r\n// decimal place, to a Javascript number\r\nvar _numToDecimal = function ( num, decimalPoint ) {\r\n\t// Cache created regular expressions for speed as this function is called often\r\n\tif ( ! _re_dic[ decimalPoint ] ) {\r\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\r\n\t}\r\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\r\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\r\n\t\tnum;\r\n};\r\n\r\n\r\nvar _isNumber = function ( d, decimalPoint, formatted ) {\r\n\tlet type = typeof d;\r\n\tvar strType = type === 'string';\r\n\r\n\tif ( type === 'number' || type === 'bigint') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// If empty return immediately so there must be a number if it is a\r\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\r\n\t// as a formatted number for currency\r\n\tif ( _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( decimalPoint && strType ) {\r\n\t\td = _numToDecimal( d, decimalPoint );\r\n\t}\r\n\r\n\tif ( formatted && strType ) {\r\n\t\td = d.replace( _re_formatted_numeric, '' );\r\n\t}\r\n\r\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\r\n};\r\n\r\n\r\n// A string without HTML in it can be considered to be HTML still\r\nvar _isHtml = function ( d ) {\r\n\treturn _empty( d ) || typeof d === 'string';\r\n};\r\n\r\n\r\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\r\n\tif ( _empty( d ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar html = _isHtml( d );\r\n\treturn ! html ?\r\n\t\tnull :\r\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\r\n\t\t\ttrue :\r\n\t\t\tnull;\r\n};\r\n\r\n\r\nvar _pluck = function ( a, prop, prop2 ) {\r\n\tvar out = [];\r\n\tvar i=0, ien=a.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] && a[i][ prop ] ) {\r\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[i] ) {\r\n\t\t\t\tout.push( a[i][ prop ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\r\n// as the indexes to pick from `a`\r\nvar _pluck_order = function ( a, order, prop, prop2 )\r\n{\r\n\tvar out = [];\r\n\tvar i=0, ien=order.length;\r\n\r\n\t// Could have the test in the loop for slightly smaller code, but speed\r\n\t// is essential here\r\n\tif ( prop2 !== undefined ) {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tif ( a[ order[i] ][ prop ] ) {\r\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor ( ; i<ien ; i++ ) {\r\n\t\t\tout.push( a[ order[i] ][ prop ] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _range = function ( len, start )\r\n{\r\n\tvar out = [];\r\n\tvar end;\r\n\r\n\tif ( start === undefined ) {\r\n\t\tstart = 0;\r\n\t\tend = len;\r\n\t}\r\n\telse {\r\n\t\tend = start;\r\n\t\tstart = len;\r\n\t}\r\n\r\n\tfor ( var i=start ; i<end ; i++ ) {\r\n\t\tout.push( i );\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _removeEmpty = function ( a )\r\n{\r\n\tvar out = [];\r\n\r\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\r\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\r\n\t\t\tout.push( a[i] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n\r\nvar _stripHtml = function ( d ) {\r\n\treturn d.replace( _re_html, '' );\r\n};\r\n\r\n\r\n/**\r\n * Determine if all values in the array are unique. This means we can short\r\n * cut the _unique method at the cost of a single loop. A sorted array is used\r\n * to easily check the values.\r\n *\r\n * @param  {array} src Source array\r\n * @return {boolean} true if all unique, false otherwise\r\n * @ignore\r\n */\r\nvar _areAllUnique = function ( src ) {\r\n\tif ( src.length < 2 ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tvar sorted = src.slice().sort();\r\n\tvar last = sorted[0];\r\n\r\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\r\n\t\tif ( sorted[i] === last ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlast = sorted[i];\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Find the unique elements in a source array.\r\n *\r\n * @param  {array} src Source array\r\n * @return {array} Array of unique items\r\n * @ignore\r\n */\r\nvar _unique = function ( src )\r\n{\r\n\tif ( _areAllUnique( src ) ) {\r\n\t\treturn src.slice();\r\n\t}\r\n\r\n\t// A faster unique method is to use object keys to identify used values,\r\n\t// but this doesn't work with arrays or objects, which we must also\r\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\r\n\t// information.\r\n\tvar\r\n\t\tout = [],\r\n\t\tval,\r\n\t\ti, ien=src.length,\r\n\t\tj, k=0;\r\n\r\n\tagain: for ( i=0 ; i<ien ; i++ ) {\r\n\t\tval = src[i];\r\n\r\n\t\tfor ( j=0 ; j<k ; j++ ) {\r\n\t\t\tif ( out[j] === val ) {\r\n\t\t\t\tcontinue again;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tout.push( val );\r\n\t\tk++;\r\n\t}\r\n\r\n\treturn out;\r\n};\r\n\r\n// Surprisingly this is faster than [].concat.apply\r\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\r\nvar _flatten = function (out, val) {\r\n\tif (Array.isArray(val)) {\r\n\t\tfor (var i=0 ; i<val.length ; i++) {\r\n\t\t\t_flatten(out, val[i]);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tout.push(val);\r\n\t}\r\n  \r\n\treturn out;\r\n}\r\n\r\nvar _includes = function (search, start) {\r\n\tif (start === undefined) {\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\treturn this.indexOf(search, start) !== -1;\t\r\n};\r\n\r\n// Array.isArray polyfill.\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\r\nif (! Array.isArray) {\r\n    Array.isArray = function(arg) {\r\n        return Object.prototype.toString.call(arg) === '[object Array]';\r\n    };\r\n}\r\n\r\nif (! Array.prototype.includes) {\r\n\tArray.prototype.includes = _includes;\r\n}\r\n\r\n// .trim() polyfill\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\r\nif (!String.prototype.trim) {\r\n  String.prototype.trim = function () {\r\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n  };\r\n}\r\n\r\nif (! String.prototype.includes) {\r\n\tString.prototype.includes = _includes;\r\n}\r\n\r\n/**\r\n * DataTables utility methods\r\n * \r\n * This namespace provides helper methods that DataTables uses internally to\r\n * create a DataTable, but which are not exclusively used only for DataTables.\r\n * These methods can be used by extension authors to save the duplication of\r\n * code.\r\n *\r\n *  @namespace\r\n */\r\nDataTable.util = {\r\n\t/**\r\n\t * Throttle the calls to a function. Arguments and context are maintained\r\n\t * for the throttled function.\r\n\t *\r\n\t * @param {function} fn Function to be called\r\n\t * @param {integer} freq Call frequency in mS\r\n\t * @return {function} Wrapped function\r\n\t */\r\n\tthrottle: function ( fn, freq ) {\r\n\t\tvar\r\n\t\t\tfrequency = freq !== undefined ? freq : 200,\r\n\t\t\tlast,\r\n\t\t\ttimer;\r\n\r\n\t\treturn function () {\r\n\t\t\tvar\r\n\t\t\t\tthat = this,\r\n\t\t\t\tnow  = +new Date(),\r\n\t\t\t\targs = arguments;\r\n\r\n\t\t\tif ( last && now < last + frequency ) {\r\n\t\t\t\tclearTimeout( timer );\r\n\r\n\t\t\t\ttimer = setTimeout( function () {\r\n\t\t\t\t\tlast = undefined;\r\n\t\t\t\t\tfn.apply( that, args );\r\n\t\t\t\t}, frequency );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlast = now;\r\n\t\t\t\tfn.apply( that, args );\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Escape a string such that it can be used in a regular expression\r\n\t *\r\n\t *  @param {string} val string to escape\r\n\t *  @returns {string} escaped string\r\n\t */\r\n\tescapeRegex: function ( val ) {\r\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will write to a nested object or array\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Write function\r\n\t */\r\n\tset: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\r\n\t\t\t * setting data since we don't know the type here. This is why an object\r\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\r\n\t\t\t * for `mRender` which is read only.\r\n\t\t\t */\r\n\t\t\treturn DataTable.util.set( source._ );\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Nothing to do when the data source is null\r\n\t\t\treturn function () {};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, val, meta) {\r\n\t\t\t\tsource( data, 'set', val, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\r\n\t\t{\r\n\t\t\t// Like the get, we need to get data from a nested object\r\n\t\t\tvar setData = function (data, val, src) {\r\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\r\n\t\t\t\tvar aLast = a[a.length-1];\r\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\r\n\t\r\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\r\n\t\t\t\t\t// Protect against prototype pollution\r\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\r\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if we are dealing with an array notation request\r\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\t\t\t\t\tdata[ a[i] ] = [];\r\n\t\r\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\r\n\t\t\t\t\t\tb = a.slice();\r\n\t\t\t\t\t\tb.splice( 0, i+1 );\r\n\t\t\t\t\t\tinnerSrc = b.join('.');\r\n\t\r\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\r\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\to = {};\r\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\r\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\r\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\r\n\t\t\t\t\t\t\t// is to just save the value.\r\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\r\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\r\n\t\t\t\t\t// trying to set the value - create it\r\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\tdata[ a[i] ] = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Last item in the input - i.e, the actual set\r\n\t\t\t\tif ( aLast.match(__reFn ) ) {\r\n\t\t\t\t\t// Function call\r\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\r\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\r\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\treturn setData( data, val, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\r\n\t\t\t\tdata[source] = val;\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Create a function that will read nested objects from arrays, based on JSON notation\r\n\t * @param {*} source JSON notation string\r\n\t * @returns Value read\r\n\t */\r\n\tget: function ( source ) {\r\n\t\tif ( $.isPlainObject( source ) ) {\r\n\t\t\t// Build an object of get functions, and wrap them in a single call\r\n\t\t\tvar o = {};\r\n\t\t\t$.each( source, function (key, val) {\r\n\t\t\t\tif ( val ) {\r\n\t\t\t\t\to[key] = DataTable.util.get( val );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\tvar t = o[type] || o._;\r\n\t\t\t\treturn t !== undefined ?\r\n\t\t\t\t\tt(data, type, row, meta) :\r\n\t\t\t\t\tdata;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( source === null ) {\r\n\t\t\t// Give an empty string for rendering / sorting etc\r\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'function' ) {\r\n\t\t\treturn function (data, type, row, meta) {\r\n\t\t\t\treturn source( data, type, row, meta );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\r\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\r\n\t\t{\r\n\t\t\t/* If there is a . in the source string then the data source is in a\r\n\t\t\t * nested object so we loop over the data for each level to get the next\r\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\r\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\r\n\t\t\t * be used if defined, rather than throwing an error\r\n\t\t\t */\r\n\t\t\tvar fetchData = function (data, type, src) {\r\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\r\n\t\r\n\t\t\t\tif ( src !== \"\" ) {\r\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\r\n\t\r\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\r\n\t\t\t\t\t\t// Check if we are dealing with special notation\r\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\r\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\r\n\t\r\n\t\t\t\t\t\tif ( arrayNotation ) {\r\n\t\t\t\t\t\t\t// Array notation\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\r\n\t\r\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\r\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\r\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tout = [];\r\n\t\r\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\r\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\r\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\r\n\t\r\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\r\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\r\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\r\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\r\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\r\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\r\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\r\n\t\r\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\r\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ( funcNotation ) {\r\n\t\t\t\t\t\t\t// Function call\r\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\r\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined ) {\r\n\t\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata = data[ a[i] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn fetchData( data, type, source );\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Array or flat object mapping\r\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\r\n\t\t\t\treturn data[source];\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n\r\n/**\r\n * Create a mapping object that allows camel case parameters to be looked up\r\n * for their Hungarian counterparts. The mapping is stored in a private\r\n * parameter called `_hungarianMap` which can be accessed on the source object.\r\n *  @param {object} o\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnHungarianMap ( o )\r\n{\r\n\tvar\r\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\r\n\t\tmatch,\r\n\t\tnewKey,\r\n\t\tmap = {};\r\n\r\n\t$.each( o, function (key, val) {\r\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\r\n\r\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\r\n\t\t{\r\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\r\n\t\t\tmap[ newKey ] = key;\r\n\r\n\t\t\tif ( match[1] === 'o' )\r\n\t\t\t{\r\n\t\t\t\t_fnHungarianMap( o[key] );\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n\to._hungarianMap = map;\r\n}\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\r\n * created by _fnHungarianMap.\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCamelToHungarian ( src, user, force )\r\n{\r\n\tif ( ! src._hungarianMap ) {\r\n\t\t_fnHungarianMap( src );\r\n\t}\r\n\r\n\tvar hungarianKey;\r\n\r\n\t$.each( user, function (key, val) {\r\n\t\thungarianKey = src._hungarianMap[ key ];\r\n\r\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\r\n\t\t{\r\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\r\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\r\n\t\t\t{\r\n\t\t\t\t// Copy the camelCase options over to the hungarian\r\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\r\n\t\t\t\t\tuser[ hungarianKey ] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\r\n\r\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tuser[hungarianKey] = user[ key ];\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Language compatibility - when certain options are given, and others aren't, we\r\n * need to duplicate the values over, in order to provide backwards compatibility\r\n * with older language files.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLanguageCompat( lang )\r\n{\r\n\t// Note the use of the Hungarian notation for the parameters in this method as\r\n\t// this is called after the mapping of camelCase to Hungarian\r\n\tvar defaults = DataTable.defaults.oLanguage;\r\n\r\n\t// Default mapping\r\n\tvar defaultDecimal = defaults.sDecimal;\r\n\tif ( defaultDecimal ) {\r\n\t\t_addNumericSort( defaultDecimal );\r\n\t}\r\n\r\n\tif ( lang ) {\r\n\t\tvar zeroRecords = lang.sZeroRecords;\r\n\r\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\r\n\t\t// sZeroRecords - assuming that is given.\r\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\r\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\r\n\t\t{\r\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\r\n\t\t}\r\n\r\n\t\t// Likewise with loading records\r\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\r\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\r\n\t\t{\r\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\r\n\t\t}\r\n\r\n\t\t// Old parameter name of the thousands separator mapped onto the new\r\n\t\tif ( lang.sInfoThousands ) {\r\n\t\t\tlang.sThousands = lang.sInfoThousands;\r\n\t\t}\r\n\r\n\t\tvar decimal = lang.sDecimal;\r\n\t\tif ( decimal && defaultDecimal !== decimal ) {\r\n\t\t\t_addNumericSort( decimal );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Map one parameter onto another\r\n *  @param {object} o Object to map\r\n *  @param {*} knew The new parameter name\r\n *  @param {*} old The old parameter name\r\n */\r\nvar _fnCompatMap = function ( o, knew, old ) {\r\n\tif ( o[ knew ] !== undefined ) {\r\n\t\to[ old ] = o[ knew ];\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for the main DT options. Note that the new\r\n * options are mapped onto the old parameters, so this is an external interface\r\n * change only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatOpts ( init )\r\n{\r\n\t_fnCompatMap( init, 'ordering',      'bSort' );\r\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\r\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\r\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\r\n\t_fnCompatMap( init, 'order',         'aaSorting' );\r\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\r\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\r\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\r\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\r\n\t_fnCompatMap( init, 'searching',     'bFilter' );\r\n\r\n\t// Boolean initialisation of x-scrolling\r\n\tif ( typeof init.sScrollX === 'boolean' ) {\r\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\r\n\t}\r\n\tif ( typeof init.scrollX === 'boolean' ) {\r\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\r\n\t}\r\n\r\n\t// Column search objects are in an array, so it needs to be converted\r\n\t// element by element\r\n\tvar searchCols = init.aoSearchCols;\r\n\r\n\tif ( searchCols ) {\r\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\r\n\t\t\tif ( searchCols[i] ) {\r\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Provide backwards compatibility for column options. Note that the new options\r\n * are mapped onto the old parameters, so this is an external interface change\r\n * only.\r\n *  @param {object} init Object to map\r\n */\r\nfunction _fnCompatCols ( init )\r\n{\r\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\r\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\r\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\r\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\r\n\r\n\t// orderData can be given as an integer\r\n\tvar dataSort = init.aDataSort;\r\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\r\n\t\tinit.aDataSort = [ dataSort ];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Browser feature detection for capabilities, quirks\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBrowserDetect( settings )\r\n{\r\n\t// We don't need to do this every time DataTables is constructed, the values\r\n\t// calculated are specific to the browser and OS configuration which we\r\n\t// don't expect to change between initialisations\r\n\tif ( ! DataTable.__browser ) {\r\n\t\tvar browser = {};\r\n\t\tDataTable.__browser = browser;\r\n\r\n\t\t// Scrolling feature / quirks detection\r\n\t\tvar n = $('<div/>')\r\n\t\t\t.css( {\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\r\n\t\t\t\theight: 1,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\toverflow: 'hidden'\r\n\t\t\t} )\r\n\t\t\t.append(\r\n\t\t\t\t$('<div/>')\r\n\t\t\t\t\t.css( {\r\n\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\ttop: 1,\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\toverflow: 'scroll'\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.append(\r\n\t\t\t\t\t\t$('<div/>')\r\n\t\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\theight: 10\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.appendTo( 'body' );\r\n\r\n\t\tvar outer = n.children();\r\n\t\tvar inner = outer.children();\r\n\r\n\t\t// Numbers below, in order, are:\r\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\r\n\t\t//\r\n\t\t// IE6 XP:                           100 100 100  83\r\n\t\t// IE7 Vista:                        100 100 100  83\r\n\t\t// IE 8+ Windows:                     83  83 100  83\r\n\t\t// Evergreen Windows:                 83  83 100  83\r\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\r\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\r\n\r\n\t\t// Get scrollbar width\r\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\r\n\r\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\r\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\r\n\t\t// element is contained without forcing scrolling\r\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\r\n\r\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\r\n\t\t// scrollbar on the left, rather than the right.\r\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\r\n\r\n\t\t// IE8- don't provide height and width for getBoundingClientRect\r\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\r\n\r\n\t\tn.remove();\r\n\t}\r\n\r\n\t$.extend( settings.oBrowser, DataTable.__browser );\r\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\r\n}\r\n\r\n\r\n/**\r\n * Array.prototype reduce[Right] method, used for browsers which don't support\r\n * JS 1.6. Done this way to reduce code size, since we iterate either way\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReduce ( that, fn, init, start, end, inc )\r\n{\r\n\tvar\r\n\t\ti = start,\r\n\t\tvalue,\r\n\t\tisSet = false;\r\n\r\n\tif ( init !== undefined ) {\r\n\t\tvalue = init;\r\n\t\tisSet = true;\r\n\t}\r\n\r\n\twhile ( i !== end ) {\r\n\t\tif ( ! that.hasOwnProperty(i) ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalue = isSet ?\r\n\t\t\tfn( value, that[i], i, that ) :\r\n\t\t\tthat[i];\r\n\r\n\t\tisSet = true;\r\n\t\ti += inc;\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Add a column to the list used for the table with default values\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nTh The th element for this column\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddColumn( oSettings, nTh )\r\n{\r\n\t// Add column to aoColumns array\r\n\tvar oDefaults = DataTable.defaults.column;\r\n\tvar iCol = oSettings.aoColumns.length;\r\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\r\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\r\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\r\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\r\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\r\n\t\tidx: iCol\r\n\t} );\r\n\toSettings.aoColumns.push( oCol );\r\n\r\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\r\n\t// passed into extend can be undefined. This allows the user to give a default\r\n\t// with only some of the parameters defined, and also not give a default\r\n\tvar searchCols = oSettings.aoPreSearchCols;\r\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\r\n\r\n\t// Use the default column options function to initialise classes etc\r\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\r\n}\r\n\r\n\r\n/**\r\n * Apply options for a column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iCol column index to consider\r\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\r\n{\r\n\tvar oCol = oSettings.aoColumns[ iCol ];\r\n\tvar oClasses = oSettings.oClasses;\r\n\tvar th = $(oCol.nTh);\r\n\r\n\t// Try to get width information from the DOM. We can't get it from CSS\r\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\r\n\tif ( ! oCol.sWidthOrig ) {\r\n\t\t// Width attribute\r\n\t\toCol.sWidthOrig = th.attr('width') || null;\r\n\r\n\t\t// Style attribute\r\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\r\n\t\tif ( t ) {\r\n\t\t\toCol.sWidthOrig = t[1];\r\n\t\t}\r\n\t}\r\n\r\n\t/* User specified column options */\r\n\tif ( oOptions !== undefined && oOptions !== null )\r\n\t{\r\n\t\t// Backwards compatibility\r\n\t\t_fnCompatCols( oOptions );\r\n\r\n\t\t// Map camel case parameters to their Hungarian counterparts\r\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\r\n\r\n\t\t/* Backwards compatibility for mDataProp */\r\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\r\n\t\t{\r\n\t\t\toOptions.mData = oOptions.mDataProp;\r\n\t\t}\r\n\r\n\t\tif ( oOptions.sType )\r\n\t\t{\r\n\t\t\toCol._sManualType = oOptions.sType;\r\n\t\t}\r\n\r\n\t\t// `class` is a reserved word in Javascript, so we need to provide\r\n\t\t// the ability to use a valid name for the camel case input\r\n\t\tif ( oOptions.className && ! oOptions.sClass )\r\n\t\t{\r\n\t\t\toOptions.sClass = oOptions.className;\r\n\t\t}\r\n\t\tif ( oOptions.sClass ) {\r\n\t\t\tth.addClass( oOptions.sClass );\r\n\t\t}\r\n\r\n\t\tvar origClass = oCol.sClass;\r\n\r\n\t\t$.extend( oCol, oOptions );\r\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\r\n\r\n\t\t// Merge class from previously defined classes with this one, rather than just\r\n\t\t// overwriting it in the extend above\r\n\t\tif (origClass !== oCol.sClass) {\r\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\r\n\t\t}\r\n\r\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\r\n\t\t * priority if defined\r\n\t\t */\r\n\t\tif ( oOptions.iDataSort !== undefined )\r\n\t\t{\r\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\r\n\t\t}\r\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\r\n\t}\r\n\r\n\t/* Cache the data get and set functions for speed */\r\n\tvar mDataSrc = oCol.mData;\r\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\r\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\r\n\r\n\tvar attrTest = function( src ) {\r\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\r\n\t};\r\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\r\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\r\n\t);\r\n\toCol._setter = null;\r\n\r\n\toCol.fnGetData = function (rowData, type, meta) {\r\n\t\tvar innerData = mData( rowData, type, undefined, meta );\r\n\r\n\t\treturn mRender && type ?\r\n\t\t\tmRender( innerData, type, rowData, meta ) :\r\n\t\t\tinnerData;\r\n\t};\r\n\toCol.fnSetData = function ( rowData, val, meta ) {\r\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\r\n\t};\r\n\r\n\t// Indicate if DataTables should read DOM data as an object or array\r\n\t// Used in _fnGetRowElements\r\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\r\n\t\toSettings._rowReadObject = true;\r\n\t}\r\n\r\n\t/* Feature sorting overrides column specific when off */\r\n\tif ( !oSettings.oFeatures.bSort )\r\n\t{\r\n\t\toCol.bSortable = false;\r\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\r\n\t}\r\n\r\n\t/* Check that the class assignment is correct for sorting */\r\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\r\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\r\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableNone;\r\n\t\toCol.sSortingClassJUI = \"\";\r\n\t}\r\n\telse if ( bAsc && !bDesc )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\r\n\t}\r\n\telse if ( !bAsc && bDesc )\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\r\n\t}\r\n\telse\r\n\t{\r\n\t\toCol.sSortingClass = oClasses.sSortable;\r\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Adjust the table column widths for new data. Note: you would probably want to\r\n * do a redraw after calling this function!\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAdjustColumnSizing ( settings )\r\n{\r\n\t/* Not interested in doing column width calculation if auto-width is disabled */\r\n\tif ( settings.oFeatures.bAutoWidth !== false )\r\n\t{\r\n\t\tvar columns = settings.aoColumns;\r\n\r\n\t\t_fnCalculateColumnWidths( settings );\r\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tvar scroll = settings.oScroll;\r\n\tif ( scroll.sY !== '' || scroll.sX !== '')\r\n\t{\r\n\t\t_fnScrollDraw( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of a visible column to the index in the data array (take account\r\n * of hidden columns)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iMatch Visible column index to lookup\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\r\n\treturn typeof aiVis[iMatch] === 'number' ?\r\n\t\taiVis[iMatch] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Convert the index of an index in the data array and convert it to the visible\r\n *   column index (take account of hidden columns)\r\n *  @param {int} iMatch Column index to lookup\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the data index\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\r\n{\r\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\r\n\tvar iPos = $.inArray( iMatch, aiVis );\r\n\r\n\treturn iPos !== -1 ? iPos : null;\r\n}\r\n\r\n\r\n/**\r\n * Get the number of visible columns\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {int} i the number of visible columns\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnVisbleColumns( oSettings )\r\n{\r\n\tvar vis = 0;\r\n\r\n\t// No reduce in IE8, use a loop for now\r\n\t$.each( oSettings.aoColumns, function ( i, col ) {\r\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\r\n\t\t\tvis++;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn vis;\r\n}\r\n\r\n\r\n/**\r\n * Get an array of column indexes that match a given property\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sParam Parameter in aoColumns to look for - typically\r\n *    bVisible or bSearchable\r\n *  @returns {array} Array of indexes with matched properties\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetColumns( oSettings, sParam )\r\n{\r\n\tvar a = [];\r\n\r\n\t$.map( oSettings.aoColumns, function(val, i) {\r\n\t\tif ( val[sParam] ) {\r\n\t\t\ta.push( i );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn a;\r\n}\r\n\r\n\r\n/**\r\n * Calculate the 'type' of a column\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnColumnTypes ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar data = settings.aoData;\r\n\tvar types = DataTable.ext.type.detect;\r\n\tvar i, ien, j, jen, k, ken;\r\n\tvar col, cell, detectedType, cache;\r\n\r\n\t// For each column, spin over the \r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcol = columns[i];\r\n\t\tcache = [];\r\n\r\n\t\tif ( ! col.sType && col._sManualType ) {\r\n\t\t\tcol.sType = col._sManualType;\r\n\t\t}\r\n\t\telse if ( ! col.sType ) {\r\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\r\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\r\n\t\t\t\t\t// Use a cache array so we only need to get the type data\r\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\r\n\t\t\t\t\tif ( cache[k] === undefined ) {\r\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\r\n\r\n\t\t\t\t\t// If null, then this type can't apply to this column, so\r\n\t\t\t\t\t// rather than testing all cells, break out. There is an\r\n\t\t\t\t\t// exception for the last type which is `html`. We need to\r\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\r\n\t\t\t\t\t// types\r\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only a single match is needed for html type since it is\r\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\r\n\t\t\t\t\t// must not be empty\r\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Type is valid for all data points in the column - use this\r\n\t\t\t\t// type\r\n\t\t\t\tif ( detectedType ) {\r\n\t\t\t\t\tcol.sType = detectedType;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fall back - if no type was detected, always use string\r\n\t\t\tif ( ! col.sType ) {\r\n\t\t\t\tcol.sType = 'string';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Take the column definitions and static columns arrays and calculate how\r\n * they relate to column indexes. The callback function will then apply the\r\n * definition found for a column to a suitable configuration object.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\r\n *  @param {array} aoCols The aoColumns array that defines columns individually\r\n *  @param {function} fn Callback function - takes two parameters, the calculated\r\n *    column index and the definition for that column.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, def;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\t// Column definitions with aTargets\r\n\tif ( aoColDefs )\r\n\t{\r\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\r\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\r\n\t\t{\r\n\t\t\tdef = aoColDefs[i];\r\n\r\n\t\t\t/* Each definition can target multiple columns, as it is an array */\r\n\t\t\tvar aTargets = def.target !== undefined\r\n\t\t\t\t? def.target\r\n\t\t\t\t: def.targets !== undefined\r\n\t\t\t\t\t? def.targets\r\n\t\t\t\t\t: def.aTargets;\r\n\r\n\t\t\tif ( ! Array.isArray( aTargets ) )\r\n\t\t\t{\r\n\t\t\t\taTargets = [ aTargets ];\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Add columns that we don't yet know about */\r\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_fnAddColumn( oSettings );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* Integer, basic index */\r\n\t\t\t\t\tfn( aTargets[j], def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Negative integer, right to left column counting */\r\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Class name matching on TH element */\r\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\r\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfn( k, def );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Statically defined columns array\r\n\tif ( aoCols )\r\n\t{\r\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\tfn( i, aoCols[i] );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Add a data array to the table, creating DOM node etc. This is the parallel to\r\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\r\n * DOM source.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {array} aData data array to be added\r\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\r\n{\r\n\t/* Create the object for storing information about this new row */\r\n\tvar iRow = oSettings.aoData.length;\r\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\r\n\t\tsrc: nTr ? 'dom' : 'data',\r\n\t\tidx: iRow\r\n\t} );\r\n\r\n\toData._aData = aDataIn;\r\n\toSettings.aoData.push( oData );\r\n\r\n\t/* Create the cells */\r\n\tvar nTd, sThisType;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\t// Invalidate the column types as the new data needs to be revalidated\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tcolumns[i].sType = null;\r\n\t}\r\n\r\n\t/* Add to the display array */\r\n\toSettings.aiDisplayMaster.push( iRow );\r\n\r\n\tvar id = oSettings.rowIdFn( aDataIn );\r\n\tif ( id !== undefined ) {\r\n\t\toSettings.aIds[ id ] = oData;\r\n\t}\r\n\r\n\t/* Create the DOM information, or register it if already present */\r\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\r\n\t{\r\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\r\n\t}\r\n\r\n\treturn iRow;\r\n}\r\n\r\n\r\n/**\r\n * Add one or more TR elements to the table. Generally we'd expect to\r\n * use this for reading data from a DOM sourced table, but it could be\r\n * used for an TR element. Note that if a TR is given, it is used (i.e.\r\n * it is not cloned).\r\n *  @param {object} settings dataTables settings object\r\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\r\n *  @returns {array} Array of indexes for the added rows\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddTr( settings, trs )\r\n{\r\n\tvar row;\r\n\r\n\t// Allow an individual node to be passed in\r\n\tif ( ! (trs instanceof $) ) {\r\n\t\ttrs = $(trs);\r\n\t}\r\n\r\n\treturn trs.map( function (i, el) {\r\n\t\trow = _fnGetRowElements( settings, el );\r\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Take a TR element and convert it to an index in aoData\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} n the TR element to find\r\n *  @returns {int} index if the node is found, null if not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnNodeToDataIndex( oSettings, n )\r\n{\r\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\r\n}\r\n\r\n\r\n/**\r\n * Take a TD element and convert it into a column data index (not the visible index)\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow The row number the TD/TH can be found in\r\n *  @param {node} n The TD/TH element to find\r\n *  @returns {int} index if the node is found, -1 if not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\r\n{\r\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\r\n}\r\n\r\n\r\n/**\r\n * Get the data for a given cell from the internal cache, taking into account data mapping\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\r\n *  @returns {*} Cell data\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\r\n{\r\n\tif (type === 'search') {\r\n\t\ttype = 'filter';\r\n\t}\r\n\telse if (type === 'order') {\r\n\t\ttype = 'sort';\r\n\t}\r\n\r\n\tvar draw           = settings.iDraw;\r\n\tvar col            = settings.aoColumns[colIdx];\r\n\tvar rowData        = settings.aoData[rowIdx]._aData;\r\n\tvar defaultContent = col.sDefaultContent;\r\n\tvar cellData       = col.fnGetData( rowData, type, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t} );\r\n\r\n\tif ( cellData === undefined ) {\r\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\r\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\r\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\r\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\r\n\t\t\tsettings.iDrawError = draw;\r\n\t\t}\r\n\t\treturn defaultContent;\r\n\t}\r\n\r\n\t// When the data source is null and a specific data type is requested (i.e.\r\n\t// not the original data), we can use default column data\r\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\r\n\t\tcellData = defaultContent;\r\n\t}\r\n\telse if ( typeof cellData === 'function' ) {\r\n\t\t// If the data source is a function, then we run it and use the return,\r\n\t\t// executing in the scope of the data object (for instances)\r\n\t\treturn cellData.call( rowData );\r\n\t}\r\n\r\n\tif ( cellData === null && type === 'display' ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tif ( type === 'filter' ) {\r\n\t\tvar fomatters = DataTable.ext.type.search;\r\n\r\n\t\tif ( fomatters[ col.sType ] ) {\r\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\r\n\t\t}\r\n\t}\r\n\r\n\treturn cellData;\r\n}\r\n\r\n\r\n/**\r\n * Set the value for a specific cell, into the internal data cache\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} rowIdx aoData row id\r\n *  @param {int} colIdx Column index\r\n *  @param {*} val Value to set\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\r\n{\r\n\tvar col     = settings.aoColumns[colIdx];\r\n\tvar rowData = settings.aoData[rowIdx]._aData;\r\n\r\n\tcol.fnSetData( rowData, val, {\r\n\t\tsettings: settings,\r\n\t\trow:      rowIdx,\r\n\t\tcol:      colIdx\r\n\t}  );\r\n}\r\n\r\n\r\n// Private variable that is used to match action syntax in the data property object\r\nvar __reArray = /\\[.*?\\]$/;\r\nvar __reFn = /\\(\\)$/;\r\n\r\n/**\r\n * Split string on periods, taking into account escaped periods\r\n * @param  {string} str String to split\r\n * @return {array} Split string\r\n */\r\nfunction _fnSplitObjNotation( str )\r\n{\r\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\r\n\t\treturn s.replace(/\\\\\\./g, '.');\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Return a function that can be used to get data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data get function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnGetObjectDataFn = DataTable.util.get;\r\n\r\n\r\n/**\r\n * Return a function that can be used to set data from a source object, taking\r\n * into account the ability to use nested objects as a source\r\n *  @param {string|int|function} mSource The data source for the object\r\n *  @returns {function} Data set function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnSetObjectDataFn = DataTable.util.set;\r\n\r\n\r\n/**\r\n * Return an array with the full table data\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns array {array} aData Master data array\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetDataMaster ( settings )\r\n{\r\n\treturn _pluck( settings.aoData, '_aData' );\r\n}\r\n\r\n\r\n/**\r\n * Nuke the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnClearTable( settings )\r\n{\r\n\tsettings.aoData.length = 0;\r\n\tsettings.aiDisplayMaster.length = 0;\r\n\tsettings.aiDisplay.length = 0;\r\n\tsettings.aIds = {};\r\n}\r\n\r\n\r\n /**\r\n * Take an array of integers (index array) and remove a target integer (value - not\r\n * the key!)\r\n *  @param {array} a Index array to target\r\n *  @param {int} iTarget value to find\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDeleteIndex( a, iTarget, splice )\r\n{\r\n\tvar iTargetIndex = -1;\r\n\r\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tif ( a[i] == iTarget )\r\n\t\t{\r\n\t\t\tiTargetIndex = i;\r\n\t\t}\r\n\t\telse if ( a[i] > iTarget )\r\n\t\t{\r\n\t\t\ta[i]--;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( iTargetIndex != -1 && splice === undefined )\r\n\t{\r\n\t\ta.splice( iTargetIndex, 1 );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Mark cached data as invalid such that a re-read of the data will occur when\r\n * the cached data is next requested. Also update from the data source object.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {int}    rowIdx   Row index to invalidate\r\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\r\n *     or 'data'\r\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\r\n *     row will be invalidated\r\n * @memberof DataTable#oApi\r\n *\r\n * @todo For the modularisation of v1.11 this will need to become a callback, so\r\n *   the sort and filter methods can subscribe to it. That will required\r\n *   initialisation options for sorting, which is why it is not already baked in\r\n */\r\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\r\n{\r\n\tvar row = settings.aoData[ rowIdx ];\r\n\tvar i, ien;\r\n\tvar cellWrite = function ( cell, col ) {\r\n\t\t// This is very frustrating, but in IE if you just write directly\r\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\r\n\t\t// even if there is a reference to them elsewhere\r\n\t\twhile ( cell.childNodes.length ) {\r\n\t\t\tcell.removeChild( cell.firstChild );\r\n\t\t}\r\n\r\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\r\n\t};\r\n\r\n\t// Are we reading last data from DOM or the data object?\r\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\r\n\t\t// Read the data from the DOM\r\n\t\trow._aData = _fnGetRowElements(\r\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\r\n\t\t\t)\r\n\t\t\t.data;\r\n\t}\r\n\telse {\r\n\t\t// Reading from data object, update the DOM\r\n\t\tvar cells = row.anCells;\r\n\r\n\t\tif ( cells ) {\r\n\t\t\tif ( colIdx !== undefined ) {\r\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tcellWrite( cells[i], i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// For both row and cell invalidation, the cached data for sorting and\r\n\t// filtering is nulled out\r\n\trow._aSortData = null;\r\n\trow._aFilterData = null;\r\n\r\n\t// Invalidate the type for a specific column (if given) or all columns since\r\n\t// the data might have changed\r\n\tvar cols = settings.aoColumns;\r\n\tif ( colIdx !== undefined ) {\r\n\t\tcols[ colIdx ].sType = null;\r\n\t}\r\n\telse {\r\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\r\n\t\t\tcols[i].sType = null;\r\n\t\t}\r\n\r\n\t\t// Update DataTables special `DT_*` attributes for the row\r\n\t\t_fnRowAttributes( settings, row );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a data source object from an HTML row, reading the contents of the\r\n * cells that are in the row.\r\n *\r\n * @param {object} settings DataTables settings object\r\n * @param {node|object} TR element from which to read data or existing row\r\n *   object from which to re-read the data from the cells\r\n * @param {int} [colIdx] Optional column index\r\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\r\n *   parameter should also be given and will be used to write the data into.\r\n *   Only the column in question will be written\r\n * @returns {object} Object with two parameters: `data` the data read, in\r\n *   document order, and `cells` and array of nodes (they can be useful to the\r\n *   caller, so rather than needing a second traversal to get them, just return\r\n *   them from here).\r\n * @memberof DataTable#oApi\r\n */\r\nfunction _fnGetRowElements( settings, row, colIdx, d )\r\n{\r\n\tvar\r\n\t\ttds = [],\r\n\t\ttd = row.firstChild,\r\n\t\tname, col, o, i=0, contents,\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tobjectRead = settings._rowReadObject;\r\n\r\n\t// Allow the data object to be passed in, or construct\r\n\td = d !== undefined ?\r\n\t\td :\r\n\t\tobjectRead ?\r\n\t\t\t{} :\r\n\t\t\t[];\r\n\r\n\tvar attr = function ( str, td  ) {\r\n\t\tif ( typeof str === 'string' ) {\r\n\t\t\tvar idx = str.indexOf('@');\r\n\r\n\t\t\tif ( idx !== -1 ) {\r\n\t\t\t\tvar attr = str.substring( idx+1 );\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\r\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Read data from a cell and store into the data object\r\n\tvar cellProcess = function ( cell ) {\r\n\t\tif ( colIdx === undefined || colIdx === i ) {\r\n\t\t\tcol = columns[i];\r\n\t\t\tcontents = (cell.innerHTML).trim();\r\n\r\n\t\t\tif ( col && col._bAttrSrc ) {\r\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\r\n\t\t\t\tsetter( d, contents );\r\n\r\n\t\t\t\tattr( col.mData.sort, cell );\r\n\t\t\t\tattr( col.mData.type, cell );\r\n\t\t\t\tattr( col.mData.filter, cell );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Depending on the `data` option for the columns the data can\r\n\t\t\t\t// be read to either an object or an array.\r\n\t\t\t\tif ( objectRead ) {\r\n\t\t\t\t\tif ( ! col._setter ) {\r\n\t\t\t\t\t\t// Cache the setter function\r\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcol._setter( d, contents );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td[i] = contents;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t};\r\n\r\n\tif ( td ) {\r\n\t\t// `tr` element was passed in\r\n\t\twhile ( td ) {\r\n\t\t\tname = td.nodeName.toUpperCase();\r\n\r\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\r\n\t\t\t\tcellProcess( td );\r\n\t\t\t\ttds.push( td );\r\n\t\t\t}\r\n\r\n\t\t\ttd = td.nextSibling;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Existing row object passed in\r\n\t\ttds = row.anCells;\r\n\r\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\r\n\t\t\tcellProcess( tds[j] );\r\n\t\t}\r\n\t}\r\n\r\n\t// Read the ID from the DOM if present\r\n\tvar rowNode = row.firstChild ? row : row.nTr;\r\n\r\n\tif ( rowNode ) {\r\n\t\tvar id = rowNode.getAttribute( 'id' );\r\n\r\n\t\tif ( id ) {\r\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tdata: d,\r\n\t\tcells: tds\r\n\t};\r\n}\r\n/**\r\n * Create a new TR element (and it's TD children) for a row\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {int} iRow Row to consider\r\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\r\n *    DataTables will create a row automatically\r\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\r\n *    if nTr is.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\r\n{\r\n\tvar\r\n\t\trow = oSettings.aoData[iRow],\r\n\t\trowData = row._aData,\r\n\t\tcells = [],\r\n\t\tnTr, nTd, oCol,\r\n\t\ti, iLen, create;\r\n\r\n\tif ( row.nTr === null )\r\n\t{\r\n\t\tnTr = nTrIn || document.createElement('tr');\r\n\r\n\t\trow.nTr = nTr;\r\n\t\trow.anCells = cells;\r\n\r\n\t\t/* Use a private property on the node to allow reserve mapping from the node\r\n\t\t * to the aoData array for fast look up\r\n\t\t */\r\n\t\tnTr._DT_RowIndex = iRow;\r\n\r\n\t\t/* Special parameters can be given by the data source to be used on the row */\r\n\t\t_fnRowAttributes( oSettings, row );\r\n\r\n\t\t/* Process each column */\r\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\r\n\t\t{\r\n\t\t\toCol = oSettings.aoColumns[i];\r\n\t\t\tcreate = nTrIn ? false : true;\r\n\r\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\r\n\r\n\t\t\tif (! nTd) {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\r\n\t\t\tnTd._DT_CellIndex = {\r\n\t\t\t\trow: iRow,\r\n\t\t\t\tcolumn: i\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tcells.push( nTd );\r\n\r\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\r\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\r\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\r\n\t\t\t)) {\r\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\r\n\t\t\t}\r\n\r\n\t\t\t/* Add user defined class */\r\n\t\t\tif ( oCol.sClass )\r\n\t\t\t{\r\n\t\t\t\tnTd.className += ' '+oCol.sClass;\r\n\t\t\t}\r\n\r\n\t\t\t// Visibility - add or remove as required\r\n\t\t\tif ( oCol.bVisible && ! nTrIn )\r\n\t\t\t{\r\n\t\t\t\tnTr.appendChild( nTd );\r\n\t\t\t}\r\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\r\n\t\t\t{\r\n\t\t\t\tnTd.parentNode.removeChild( nTd );\r\n\t\t\t}\r\n\r\n\t\t\tif ( oCol.fnCreatedCell )\r\n\t\t\t{\r\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\r\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Add attributes to a row based on the special `DT_*` parameters in a data\r\n * source object.\r\n *  @param {object} settings DataTables settings object\r\n *  @param {object} DataTables row object for the row to be modified\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnRowAttributes( settings, row )\r\n{\r\n\tvar tr = row.nTr;\r\n\tvar data = row._aData;\r\n\r\n\tif ( tr ) {\r\n\t\tvar id = settings.rowIdFn( data );\r\n\r\n\t\tif ( id ) {\r\n\t\t\ttr.id = id;\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowClass ) {\r\n\t\t\t// Remove any classes added by DT_RowClass before\r\n\t\t\tvar a = data.DT_RowClass.split(' ');\r\n\t\t\trow.__rowc = row.__rowc ?\r\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\r\n\t\t\t\ta;\r\n\r\n\t\t\t$(tr)\r\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\r\n\t\t\t\t.addClass( data.DT_RowClass );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowAttr ) {\r\n\t\t\t$(tr).attr( data.DT_RowAttr );\r\n\t\t}\r\n\r\n\t\tif ( data.DT_RowData ) {\r\n\t\t\t$(tr).data( data.DT_RowData );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Create the HTML header for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBuildHead( oSettings )\r\n{\r\n\tvar i, ien, cell, row, column;\r\n\tvar thead = oSettings.nTHead;\r\n\tvar tfoot = oSettings.nTFoot;\r\n\tvar createHeader = $('th, td', thead).length === 0;\r\n\tvar classes = oSettings.oClasses;\r\n\tvar columns = oSettings.aoColumns;\r\n\r\n\tif ( createHeader ) {\r\n\t\trow = $('<tr/>').appendTo( thead );\r\n\t}\r\n\r\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\t\tcell = $( column.nTh ).addClass( column.sClass );\r\n\r\n\t\tif ( createHeader ) {\r\n\t\t\tcell.appendTo( row );\r\n\t\t}\r\n\r\n\t\t// 1.11 move into sorting\r\n\t\tif ( oSettings.oFeatures.bSort ) {\r\n\t\t\tcell.addClass( column.sSortingClass );\r\n\r\n\t\t\tif ( column.bSortable !== false ) {\r\n\t\t\t\tcell\r\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\r\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\r\n\r\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\r\n\t\t\tcell.html( column.sTitle );\r\n\t\t}\r\n\r\n\t\t_fnRenderer( oSettings, 'header' )(\r\n\t\t\toSettings, cell, column, classes\r\n\t\t);\r\n\t}\r\n\r\n\tif ( createHeader ) {\r\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\r\n\t}\r\n\r\n\t/* Deal with the footer - add classes if required */\r\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\r\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\r\n\r\n\t// Cache the footer cells. Note that we only take the cells from the first\r\n\t// row in the footer. If there is more than one row the user wants to\r\n\t// interact with, they need to use the table().foot() method. Note also this\r\n\t// allows cells to be used for multiple columns using colspan\r\n\tif ( tfoot !== null ) {\r\n\t\tvar cells = oSettings.aoFooter[0];\r\n\r\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\r\n\t\t\tcolumn = columns[i];\r\n\r\n\t\t\tif (column) {\r\n\t\t\t\tcolumn.nTf = cells[i].cell;\r\n\t\r\n\t\t\t\tif ( column.sClass ) {\r\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Draw the header (or footer) element based on the column visibility states. The\r\n * methodology here is to use the layout array from _fnDetectHeader, modified for\r\n * the instantaneous column visibility, to construct the new layout. The grid is\r\n * traversed over cell at a time in a rows x columns grid fashion, although each\r\n * cell insert can cover multiple elements in the grid - which is tracks using the\r\n * aApplied array. Cell inserts in the grid will only occur where there isn't\r\n * already a cell in that position.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\r\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\r\n{\r\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\r\n\tvar aoLocal = [];\r\n\tvar aApplied = [];\r\n\tvar iColumns = oSettings.aoColumns.length;\r\n\tvar iRowspan, iColspan;\r\n\r\n\tif ( ! aoSource )\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (  bIncludeHidden === undefined )\r\n\t{\r\n\t\tbIncludeHidden = false;\r\n\t}\r\n\r\n\t/* Make a copy of the master layout array, but without the visible columns in it */\r\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\r\n\t{\r\n\t\taoLocal[i] = aoSource[i].slice();\r\n\t\taoLocal[i].nTr = aoSource[i].nTr;\r\n\r\n\t\t/* Remove any columns which are currently hidden */\r\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\r\n\t\t{\r\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\r\n\t\t\t{\r\n\t\t\t\taoLocal[i].splice( j, 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Prep the applied array - it needs an element for each row */\r\n\t\taApplied.push( [] );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tnLocalTr = aoLocal[i].nTr;\r\n\r\n\t\t/* All cells are going to be replaced, so empty out the row */\r\n\t\tif ( nLocalTr )\r\n\t\t{\r\n\t\t\twhile( (n = nLocalTr.firstChild) )\r\n\t\t\t{\r\n\t\t\t\tnLocalTr.removeChild( n );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\r\n\t\t{\r\n\t\t\tiRowspan = 1;\r\n\t\t\tiColspan = 1;\r\n\r\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\r\n\t\t\t * insert point. If there is, then there is nothing to do.\r\n\t\t\t */\r\n\t\t\tif ( aApplied[i][j] === undefined )\r\n\t\t\t{\r\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\r\n\t\t\t\taApplied[i][j] = 1;\r\n\r\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\r\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\r\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\r\n\t\t\t\t{\r\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\r\n\t\t\t\t\tiRowspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\r\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\r\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\r\n\t\t\t\t{\r\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\r\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tiColspan++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Do the actual expansion in the DOM */\r\n\t\t\t\t$(aoLocal[i][j].cell)\r\n\t\t\t\t\t.attr('rowspan', iRowspan)\r\n\t\t\t\t\t.attr('colspan', iColspan);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Insert the required TR nodes into the table for display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param ajaxComplete true after ajax call to complete rendering\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDraw( oSettings, ajaxComplete )\r\n{\r\n\t// Allow for state saving and a custom start position\r\n\t_fnStart( oSettings );\r\n\r\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\r\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\r\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\r\n\t{\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar anRows = [];\r\n\tvar iRowCount = 0;\r\n\tvar asStripeClasses = oSettings.asStripeClasses;\r\n\tvar iStripes = asStripeClasses.length;\r\n\tvar oLang = oSettings.oLanguage;\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar aiDisplay = oSettings.aiDisplay;\r\n\tvar iDisplayStart = oSettings._iDisplayStart;\r\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\r\n\r\n\toSettings.bDrawing = true;\r\n\r\n\t/* Server-side processing draw intercept */\r\n\tif ( oSettings.bDeferLoading )\r\n\t{\r\n\t\toSettings.bDeferLoading = false;\r\n\t\toSettings.iDraw++;\r\n\t\t_fnProcessingDisplay( oSettings, false );\r\n\t}\r\n\telse if ( !bServerSide )\r\n\t{\r\n\t\toSettings.iDraw++;\r\n\t}\r\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\r\n\t{\r\n\t\t_fnAjaxUpdate( oSettings );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( aiDisplay.length !== 0 )\r\n\t{\r\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\r\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\r\n\r\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\r\n\t\t{\r\n\t\t\tvar iDataIndex = aiDisplay[j];\r\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\r\n\t\t\tif ( aoData.nTr === null )\r\n\t\t\t{\r\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\r\n\t\t\t}\r\n\r\n\t\t\tvar nRow = aoData.nTr;\r\n\r\n\t\t\t/* Remove the old striping classes and then add the new one */\r\n\t\t\tif ( iStripes !== 0 )\r\n\t\t\t{\r\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\r\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\r\n\t\t\t\t{\r\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\r\n\t\t\t\t\taoData._sRowStripe = sStripe;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Row callback functions - might want to manipulate the row\r\n\t\t\t// iRowCount and j are not currently documented. Are they at all\r\n\t\t\t// useful?\r\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\r\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\r\n\r\n\t\t\tanRows.push( nRow );\r\n\t\t\tiRowCount++;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/* Table is empty - create a row with an empty message in it */\r\n\t\tvar sZero = oLang.sZeroRecords;\r\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\r\n\t\t{\r\n\t\t\tsZero = oLang.sLoadingRecords;\r\n\t\t}\r\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\r\n\t\t{\r\n\t\t\tsZero = oLang.sEmptyTable;\r\n\t\t}\r\n\r\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\r\n\t\t\t.append( $('<td />', {\r\n\t\t\t\t'valign':  'top',\r\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\r\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\r\n\t\t\t} ).html( sZero ) )[0];\r\n\t}\r\n\r\n\t/* Header and footer callbacks */\r\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\r\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\r\n\r\n\tvar body = $(oSettings.nTBody);\r\n\r\n\tbody.children().detach();\r\n\tbody.append( $(anRows) );\r\n\r\n\t/* Call all required callback functions for the end of a draw */\r\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\r\n\r\n\t/* Draw is complete, sorting and filtering must be as well */\r\n\toSettings.bSorted = false;\r\n\toSettings.bFiltered = false;\r\n\toSettings.bDrawing = false;\r\n}\r\n\r\n\r\n/**\r\n * Redraw the table - taking account of the various features which are enabled\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\r\n *    the paging is reset to the first page\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnReDraw( settings, holdPosition )\r\n{\r\n\tvar\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tsort     = features.bSort,\r\n\t\tfilter   = features.bFilter;\r\n\r\n\tif ( sort ) {\r\n\t\t_fnSort( settings );\r\n\t}\r\n\r\n\tif ( filter ) {\r\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\r\n\t}\r\n\telse {\r\n\t\t// No filtering, so we want to just use the display master\r\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\t}\r\n\r\n\tif ( holdPosition !== true ) {\r\n\t\tsettings._iDisplayStart = 0;\r\n\t}\r\n\r\n\t// Let any modules know about the draw hold position state (used by\r\n\t// scrolling internally)\r\n\tsettings._drawHold = holdPosition;\r\n\r\n\t_fnDraw( settings );\r\n\r\n\tsettings._drawHold = false;\r\n}\r\n\r\n\r\n/**\r\n * Add the options to the page HTML for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAddOptionsHtml ( oSettings )\r\n{\r\n\tvar classes = oSettings.oClasses;\r\n\tvar table = $(oSettings.nTable);\r\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\r\n\tvar features = oSettings.oFeatures;\r\n\r\n\t// All DataTables are wrapped in a div\r\n\tvar insert = $('<div/>', {\r\n\t\tid:      oSettings.sTableId+'_wrapper',\r\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\r\n\t} );\r\n\r\n\toSettings.nHolding = holding[0];\r\n\toSettings.nTableWrapper = insert[0];\r\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\r\n\r\n\t/* Loop over the user set positioning and place the elements as needed */\r\n\tvar aDom = oSettings.sDom.split('');\r\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\r\n\tfor ( var i=0 ; i<aDom.length ; i++ )\r\n\t{\r\n\t\tfeatureNode = null;\r\n\t\tcOption = aDom[i];\r\n\r\n\t\tif ( cOption == '<' )\r\n\t\t{\r\n\t\t\t/* New container div */\r\n\t\t\tnNewNode = $('<div/>')[0];\r\n\r\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\r\n\t\t\tcNext = aDom[i+1];\r\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\r\n\t\t\t{\r\n\t\t\t\tsAttr = \"\";\r\n\t\t\t\tj = 2;\r\n\t\t\t\twhile ( aDom[i+j] != cNext )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr += aDom[i+j];\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\r\n\t\t\t\tif ( sAttr == \"H\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr = classes.sJUIHeader;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( sAttr == \"F\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tsAttr = classes.sJUIFooter;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\r\n\t\t\t\t * breaks the string into parts and applies them as needed\r\n\t\t\t\t */\r\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar aSplit = sAttr.split('.');\r\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\r\n\t\t\t\t\tnNewNode.className = aSplit[1];\r\n\t\t\t\t}\r\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\r\n\t\t\t\t{\r\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tnNewNode.className = sAttr;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ti += j; /* Move along the position array */\r\n\t\t\t}\r\n\r\n\t\t\tinsert.append( nNewNode );\r\n\t\t\tinsert = $(nNewNode);\r\n\t\t}\r\n\t\telse if ( cOption == '>' )\r\n\t\t{\r\n\t\t\t/* End container div */\r\n\t\t\tinsert = insert.parent();\r\n\t\t}\r\n\t\t// @todo Move options into their own plugins?\r\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\r\n\t\t{\r\n\t\t\t/* Length */\r\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'f' && features.bFilter )\r\n\t\t{\r\n\t\t\t/* Filter */\r\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'r' && features.bProcessing )\r\n\t\t{\r\n\t\t\t/* pRocessing */\r\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 't' )\r\n\t\t{\r\n\t\t\t/* Table */\r\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption ==  'i' && features.bInfo )\r\n\t\t{\r\n\t\t\t/* Info */\r\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\r\n\t\t}\r\n\t\telse if ( cOption == 'p' && features.bPaginate )\r\n\t\t{\r\n\t\t\t/* Pagination */\r\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\r\n\t\t}\r\n\t\telse if ( DataTable.ext.feature.length !== 0 )\r\n\t\t{\r\n\t\t\t/* Plug-in features */\r\n\t\t\tvar aoFeatures = DataTable.ext.feature;\r\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\r\n\t\t\t{\r\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\r\n\t\t\t\t{\r\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add to the 2D features array */\r\n\t\tif ( featureNode )\r\n\t\t{\r\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\r\n\r\n\t\t\tif ( ! aanFeatures[cOption] )\r\n\t\t\t{\r\n\t\t\t\taanFeatures[cOption] = [];\r\n\t\t\t}\r\n\r\n\t\t\taanFeatures[cOption].push( featureNode );\r\n\t\t\tinsert.append( featureNode );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Built our DOM structure - replace the holding div with what we want */\r\n\tholding.replaceWith( insert );\r\n\toSettings.nHolding = null;\r\n}\r\n\r\n\r\n/**\r\n * Use the DOM source to create up an array of header cells. The idea here is to\r\n * create a layout grid (array) of rows x columns, which contains a reference\r\n * to the cell that that point in the grid (regardless of col/rowspan), such that\r\n * any column / row could be removed and the new grid constructed\r\n *  @param array {object} aLayout Array to store the calculated layout in\r\n *  @param {node} nThead The header/footer element for the table\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDetectHeader ( aLayout, nThead )\r\n{\r\n\tvar nTrs = $(nThead).children('tr');\r\n\tvar nTr, nCell;\r\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\r\n\tvar bUnique;\r\n\tvar fnShiftCol = function ( a, i, j ) {\r\n\t\tvar k = a[i];\r\n                while ( k[j] ) {\r\n\t\t\tj++;\r\n\t\t}\r\n\t\treturn j;\r\n\t};\r\n\r\n\taLayout.splice( 0, aLayout.length );\r\n\r\n\t/* We know how many rows there are in the layout - so prep it */\r\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n\t{\r\n\t\taLayout.push( [] );\r\n\t}\r\n\r\n\t/* Calculate a layout array */\r\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tnTr = nTrs[i];\r\n\t\tiColumn = 0;\r\n\r\n\t\t/* For every cell in the row... */\r\n\t\tnCell = nTr.firstChild;\r\n\t\twhile ( nCell ) {\r\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\r\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\r\n\t\t\t{\r\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\r\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\r\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\r\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\r\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\r\n\r\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\r\n\t\t\t\t * accordingly\r\n\t\t\t\t */\r\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\r\n\r\n\t\t\t\t/* Cache calculation for unique columns */\r\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\r\n\r\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\r\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\r\n\t\t\t\t\t\t\t\"cell\": nCell,\r\n\t\t\t\t\t\t\t\"unique\": bUnique\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnCell = nCell.nextSibling;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Get an array of unique th elements, one for each column\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {node} nHeader automatically detect the layout from this node - optional\r\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\r\n *  @returns array {node} aReturn list of unique th's\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\r\n{\r\n\tvar aReturn = [];\r\n\tif ( !aLayout )\r\n\t{\r\n\t\taLayout = oSettings.aoHeader;\r\n\t\tif ( nHeader )\r\n\t\t{\r\n\t\t\taLayout = [];\r\n\t\t\t_fnDetectHeader( aLayout, nHeader );\r\n\t\t}\r\n\t}\r\n\r\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\r\n\t\t{\r\n\t\t\tif ( aLayout[i][j].unique &&\r\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\r\n\t\t\t{\r\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn aReturn;\r\n}\r\n\r\n/**\r\n * Set the start position for draw\r\n *  @param {object} oSettings dataTables settings object\r\n */\r\nfunction _fnStart( oSettings )\r\n{\r\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\r\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\r\n\r\n\t// Check and see if we have an initial draw position from state saving\r\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\r\n\t{\r\n\t\toSettings._iDisplayStart = bServerSide ?\r\n\t\t\tiInitDisplayStart :\r\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\r\n\t\t\t\t0 :\r\n\t\t\t\tiInitDisplayStart;\r\n\r\n\t\toSettings.iInitDisplayStart = -1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Create an Ajax call based on the table's settings, taking into account that\r\n * parameters can have multiple forms, and backwards compatibility.\r\n *\r\n * @param {object} oSettings dataTables settings object\r\n * @param {array} data Data to send to the server, required by\r\n *     DataTables - may be augmented by developer callbacks\r\n * @param {function} fn Callback function to run when data is obtained\r\n */\r\nfunction _fnBuildAjax( oSettings, data, fn )\r\n{\r\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\r\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\r\n\r\n\t// Convert to object based for 1.10+ if using the old array scheme which can\r\n\t// come from server-side processing or serverParams\r\n\tif ( data && Array.isArray(data) ) {\r\n\t\tvar tmp = {};\r\n\t\tvar rbracket = /(.*?)\\[\\]$/;\r\n\r\n\t\t$.each( data, function (key, val) {\r\n\t\t\tvar match = val.name.match(rbracket);\r\n\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Support for arrays\r\n\t\t\t\tvar name = match[0];\r\n\r\n\t\t\t\tif ( ! tmp[ name ] ) {\r\n\t\t\t\t\ttmp[ name ] = [];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[ name ].push( val.value );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp[val.name] = val.value;\r\n\t\t\t}\r\n\t\t} );\r\n\t\tdata = tmp;\r\n\t}\r\n\r\n\tvar ajaxData;\r\n\tvar ajax = oSettings.ajax;\r\n\tvar instance = oSettings.oInstance;\r\n\tvar callback = function ( json ) {\r\n\t\tvar status = oSettings.jqXHR\r\n\t\t\t? oSettings.jqXHR.status\r\n\t\t\t: null;\r\n\r\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\r\n\t\t\tjson = {};\r\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\r\n\t\t}\r\n\r\n\t\tvar error = json.error || json.sError;\r\n\t\tif ( error ) {\r\n\t\t\t_fnLog( oSettings, 0, error );\r\n\t\t}\r\n\r\n\t\toSettings.json = json;\r\n\r\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\r\n\t\tfn( json );\r\n\t};\r\n\r\n\tif ( $.isPlainObject( ajax ) && ajax.data )\r\n\t{\r\n\t\tajaxData = ajax.data;\r\n\r\n\t\tvar newData = typeof ajaxData === 'function' ?\r\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\r\n\t\t\tajaxData;                      // an object object or array to merge\r\n\r\n\t\t// If the function returned something, use that alone\r\n\t\tdata = typeof ajaxData === 'function' && newData ?\r\n\t\t\tnewData :\r\n\t\t\t$.extend( true, data, newData );\r\n\r\n\t\t// Remove the data property as we've resolved it already and don't want\r\n\t\t// jQuery to do it again (it is restored at the end of the function)\r\n\t\tdelete ajax.data;\r\n\t}\r\n\r\n\tvar baseAjax = {\r\n\t\t\"data\": data,\r\n\t\t\"success\": callback,\r\n\t\t\"dataType\": \"json\",\r\n\t\t\"cache\": false,\r\n\t\t\"type\": oSettings.sServerMethod,\r\n\t\t\"error\": function (xhr, error, thrown) {\r\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\r\n\r\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\r\n\t\t\t\tif ( error == \"parsererror\" ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( xhr.readyState === 4 ) {\r\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_fnProcessingDisplay( oSettings, false );\r\n\t\t}\r\n\t};\r\n\r\n\t// Store the data submitted for the API\r\n\toSettings.oAjaxData = data;\r\n\r\n\t// Allow plug-ins and external processes to modify the data\r\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\r\n\r\n\tif ( oSettings.fnServerData )\r\n\t{\r\n\t\t// DataTables 1.9- compatibility\r\n\t\toSettings.fnServerData.call( instance,\r\n\t\t\toSettings.sAjaxSource,\r\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\r\n\t\t\t\treturn { name: key, value: val };\r\n\t\t\t} ),\r\n\t\t\tcallback,\r\n\t\t\toSettings\r\n\t\t);\r\n\t}\r\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\r\n\t{\r\n\t\t// DataTables 1.9- compatibility\r\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\r\n\t\t\turl: ajax || oSettings.sAjaxSource\r\n\t\t} ) );\r\n\t}\r\n\telse if ( typeof ajax === 'function' )\r\n\t{\r\n\t\t// Is a function - let the caller define what needs to be done\r\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Object to extend the base settings\r\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\r\n\r\n\t\t// Restore for next time around\r\n\t\tajax.data = ajaxData;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Update the table using an Ajax call\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {boolean} Block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdate( settings )\r\n{\r\n\tsettings.iDraw++;\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t_fnBuildAjax(\r\n\t\tsettings,\r\n\t\t_fnAjaxParameters( settings ),\r\n\t\tfunction(json) {\r\n\t\t\t_fnAjaxUpdateDraw( settings, json );\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n/**\r\n * Build up the parameters in an object needed for a server-side processing\r\n * request. Note that this is basically done twice, is different ways - a modern\r\n * method which is used by default in DataTables 1.10 which uses objects and\r\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\r\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\r\n * option is set.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {bool} block the table drawing or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxParameters( settings )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tcolumnCount = columns.length,\r\n\t\tfeatures = settings.oFeatures,\r\n\t\tpreSearch = settings.oPreviousSearch,\r\n\t\tpreColSearch = settings.aoPreSearchCols,\r\n\t\ti, data = [], dataProp, column, columnSearch,\r\n\t\tsort = _fnSortFlatten( settings ),\r\n\t\tdisplayStart = settings._iDisplayStart,\r\n\t\tdisplayLength = features.bPaginate !== false ?\r\n\t\t\tsettings._iDisplayLength :\r\n\t\t\t-1;\r\n\r\n\tvar param = function ( name, value ) {\r\n\t\tdata.push( { 'name': name, 'value': value } );\r\n\t};\r\n\r\n\t// DataTables 1.9- compatible method\r\n\tparam( 'sEcho',          settings.iDraw );\r\n\tparam( 'iColumns',       columnCount );\r\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\r\n\tparam( 'iDisplayStart',  displayStart );\r\n\tparam( 'iDisplayLength', displayLength );\r\n\r\n\t// DataTables 1.10+ method\r\n\tvar d = {\r\n\t\tdraw:    settings.iDraw,\r\n\t\tcolumns: [],\r\n\t\torder:   [],\r\n\t\tstart:   displayStart,\r\n\t\tlength:  displayLength,\r\n\t\tsearch:  {\r\n\t\t\tvalue: preSearch.sSearch,\r\n\t\t\tregex: preSearch.bRegex\r\n\t\t}\r\n\t};\r\n\r\n\tfor ( i=0 ; i<columnCount ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\t\tcolumnSearch = preColSearch[i];\r\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\r\n\r\n\t\td.columns.push( {\r\n\t\t\tdata:       dataProp,\r\n\t\t\tname:       column.sName,\r\n\t\t\tsearchable: column.bSearchable,\r\n\t\t\torderable:  column.bSortable,\r\n\t\t\tsearch:     {\r\n\t\t\t\tvalue: columnSearch.sSearch,\r\n\t\t\t\tregex: columnSearch.bRegex\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tparam( \"mDataProp_\"+i, dataProp );\r\n\r\n\t\tif ( features.bFilter ) {\r\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\r\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\r\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\r\n\t\t}\r\n\r\n\t\tif ( features.bSort ) {\r\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( features.bFilter ) {\r\n\t\tparam( 'sSearch', preSearch.sSearch );\r\n\t\tparam( 'bRegex', preSearch.bRegex );\r\n\t}\r\n\r\n\tif ( features.bSort ) {\r\n\t\t$.each( sort, function ( i, val ) {\r\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\r\n\r\n\t\t\tparam( 'iSortCol_'+i, val.col );\r\n\t\t\tparam( 'sSortDir_'+i, val.dir );\r\n\t\t} );\r\n\r\n\t\tparam( 'iSortingCols', sort.length );\r\n\t}\r\n\r\n\t// If the legacy.ajax parameter is null, then we automatically decide which\r\n\t// form to use, based on sAjaxSource\r\n\tvar legacy = DataTable.ext.legacy.ajax;\r\n\tif ( legacy === null ) {\r\n\t\treturn settings.sAjaxSource ? data : d;\r\n\t}\r\n\r\n\t// Otherwise, if legacy has been specified then we use that to decide on the\r\n\t// form\r\n\treturn legacy ? data : d;\r\n}\r\n\r\n\r\n/**\r\n * Data the data from the server (nuking the old) and redraw the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} json json data return from the server.\r\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\r\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\r\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\r\n *  @param {array} json.aaData The data to display on this page\r\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnAjaxUpdateDraw ( settings, json )\r\n{\r\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\r\n\t// Support both\r\n\tvar compat = function ( old, modern ) {\r\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\r\n\t};\r\n\r\n\tvar data = _fnAjaxDataSrc( settings, json );\r\n\tvar draw            = compat( 'sEcho',                'draw' );\r\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\r\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\r\n\r\n\tif ( draw !== undefined ) {\r\n\t\t// Protect against out of sequence returns\r\n\t\tif ( draw*1 < settings.iDraw ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsettings.iDraw = draw * 1;\r\n\t}\r\n\r\n\t// No data in returned object, so rather than an array, we show an empty table\r\n\tif ( ! data ) {\r\n\t\tdata = [];\r\n\t}\r\n\r\n\t_fnClearTable( settings );\r\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\r\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\r\n\r\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t_fnAddData( settings, data[i] );\r\n\t}\r\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\r\n\r\n\t_fnDraw( settings, true );\r\n\r\n\tif ( ! settings._bInitComplete ) {\r\n\t\t_fnInitComplete( settings, json );\r\n\t}\r\n\r\n\t_fnProcessingDisplay( settings, false );\r\n}\r\n\r\n\r\n/**\r\n * Get the data from the JSON data source to use for drawing a table. Using\r\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\r\n * source object, or from a processing function.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param  {object} json Data source object / array from the server\r\n *  @return {array} Array of data to use\r\n */\r\n function _fnAjaxDataSrc ( oSettings, json, write )\r\n {\r\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\r\n\t\toSettings.ajax.dataSrc :\r\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\r\n\r\n\tif ( ! write ) {\r\n\t\tif ( dataSrc === 'data' ) {\r\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\r\n\t\t\t// it if possible\r\n\t\t\treturn json.aaData || json[dataSrc];\r\n\t\t}\r\n\r\n\t\treturn dataSrc !== \"\" ?\r\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\r\n\t\t\tjson;\r\n\t}\r\n\r\n\t// set\r\n\t_fnSetObjectDataFn( dataSrc )( json, write );\r\n}\r\n\r\n/**\r\n * Generate the node required for filtering text\r\n *  @returns {node} Filter control element\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlFilter ( settings )\r\n{\r\n\tvar classes = settings.oClasses;\r\n\tvar tableId = settings.sTableId;\r\n\tvar language = settings.oLanguage;\r\n\tvar previousSearch = settings.oPreviousSearch;\r\n\tvar features = settings.aanFeatures;\r\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\r\n\r\n\tvar str = language.sSearch;\r\n\tstr = str.match(/_INPUT_/) ?\r\n\t\tstr.replace('_INPUT_', input) :\r\n\t\tstr+input;\r\n\r\n\tvar filter = $('<div/>', {\r\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\r\n\t\t\t'class': classes.sFilter\r\n\t\t} )\r\n\t\t.append( $('<label/>' ).append( str ) );\r\n\r\n\tvar searchFn = function(event) {\r\n\t\t/* Update all other filter input elements for the new display */\r\n\t\tvar n = features.f;\r\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\r\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/* Now do the filter */\r\n\t\tif ( val != previousSearch.sSearch ) {\r\n\t\t\t_fnFilterComplete( settings, {\r\n\t\t\t\t\"sSearch\": val,\r\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\r\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\r\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\r\n\t\t\t\t\"return\": previousSearch.return\r\n\t\t\t} );\r\n\r\n\t\t\t// Need to redraw, without resorting\r\n\t\t\tsettings._iDisplayStart = 0;\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t};\r\n\r\n\tvar searchDelay = settings.searchDelay !== null ?\r\n\t\tsettings.searchDelay :\r\n\t\t_fnDataSource( settings ) === 'ssp' ?\r\n\t\t\t400 :\r\n\t\t\t0;\r\n\r\n\tvar jqFilter = $('input', filter)\r\n\t\t.val( previousSearch.sSearch )\r\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\r\n\t\t.on(\r\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\r\n\t\t\tsearchDelay ?\r\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\r\n\t\t\t\tsearchFn\r\n\t\t)\r\n\t\t.on( 'mouseup', function(e) {\r\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\r\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\r\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\r\n\t\t\tsetTimeout( function () {\r\n\t\t\t\tsearchFn.call(jqFilter[0], e);\r\n\t\t\t}, 10);\r\n\t\t} )\r\n\t\t.on( 'keypress.DT', function(e) {\r\n\t\t\t/* Prevent form submission */\r\n\t\t\tif ( e.keyCode == 13 ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} )\r\n\t\t.attr('aria-controls', tableId);\r\n\r\n\t// Update the input elements whenever the table is filtered\r\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\r\n\t\t\t// inside an iframe or frame...\r\n\t\t\ttry {\r\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\r\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch ( e ) {}\r\n\t\t}\r\n\t} );\r\n\r\n\treturn filter[0];\r\n}\r\n\r\n\r\n/**\r\n * Filter the table using both the global filter and column based filtering\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oSearch search information\r\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\r\n{\r\n\tvar oPrevSearch = oSettings.oPreviousSearch;\r\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\r\n\tvar fnSaveFilter = function ( oFilter ) {\r\n\t\t/* Save the filtering values */\r\n\t\toPrevSearch.sSearch = oFilter.sSearch;\r\n\t\toPrevSearch.bRegex = oFilter.bRegex;\r\n\t\toPrevSearch.bSmart = oFilter.bSmart;\r\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\r\n\t\toPrevSearch.return = oFilter.return;\r\n\t};\r\n\tvar fnRegex = function ( o ) {\r\n\t\t// Backwards compatibility with the bEscapeRegex option\r\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\r\n\t};\r\n\r\n\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t// @todo As per sort - can this be moved into an event handler?\r\n\t_fnColumnTypes( oSettings );\r\n\r\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\r\n\t{\r\n\t\t/* Global filter */\r\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );\r\n\t\tfnSaveFilter( oInput );\r\n\r\n\t\t/* Now do the individual column filter */\r\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\r\n\t\t{\r\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\r\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\r\n\t\t}\r\n\r\n\t\t/* Custom filtering */\r\n\t\t_fnFilterCustom( oSettings );\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfnSaveFilter( oInput );\r\n\t}\r\n\r\n\t/* Tell the draw function we have been filtering */\r\n\toSettings.bFiltered = true;\r\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\r\n}\r\n\r\n\r\n/**\r\n * Apply custom filtering functions\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCustom( settings )\r\n{\r\n\tvar filters = DataTable.ext.search;\r\n\tvar displayRows = settings.aiDisplay;\r\n\tvar row, rowIdx;\r\n\r\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\r\n\t\tvar rows = [];\r\n\r\n\t\t// Loop over each row and see if it should be included\r\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\r\n\t\t\trowIdx = displayRows[ j ];\r\n\t\t\trow = settings.aoData[ rowIdx ];\r\n\r\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\r\n\t\t\t\trows.push( rowIdx );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// So the array reference doesn't break set the results into the\r\n\t\t// existing array\r\n\t\tdisplayRows.length = 0;\r\n\t\t$.merge( displayRows, rows );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Filter the table on a per-column basis\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sInput string to filter on\r\n *  @param {int} iColumn column to filter\r\n *  @param {bool} bRegex treat search string as a regular expression or not\r\n *  @param {bool} bSmart use smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\r\n{\r\n\tif ( searchStr === '' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar data;\r\n\tvar out = [];\r\n\tvar display = settings.aiDisplay;\r\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\r\n\r\n\tfor ( var i=0 ; i<display.length ; i++ ) {\r\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\r\n\r\n\t\tif ( rpSearch.test( data ) ) {\r\n\t\t\tout.push( display[i] );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aiDisplay = out;\r\n}\r\n\r\n\r\n/**\r\n * Filter the data table based on user input and draw the table\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} input string to filter on\r\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\r\n *  @param {bool} regex treat as a regular expression or not\r\n *  @param {bool} smart perform smart filtering or not\r\n *  @param {bool} caseInsensitive Do case insensitive matching or not\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\r\n{\r\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\r\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\r\n\tvar displayMaster = settings.aiDisplayMaster;\r\n\tvar display, invalidated, i;\r\n\tvar filtered = [];\r\n\r\n\t// Need to take account of custom filtering functions - always filter\r\n\tif ( DataTable.ext.search.length !== 0 ) {\r\n\t\tforce = true;\r\n\t}\r\n\r\n\t// Check if any of the rows were invalidated\r\n\tinvalidated = _fnFilterData( settings );\r\n\r\n\t// If the input is blank - we just want the full data set\r\n\tif ( input.length <= 0 ) {\r\n\t\tsettings.aiDisplay = displayMaster.slice();\r\n\t}\r\n\telse {\r\n\t\t// New search - start from the master array\r\n\t\tif ( invalidated ||\r\n\t\t\t force ||\r\n\t\t\t regex ||\r\n\t\t\t prevSearch.length > input.length ||\r\n\t\t\t input.indexOf(prevSearch) !== 0 ||\r\n\t\t\t settings.bSorted // On resort, the display master needs to be\r\n\t\t\t                  // re-filtered since indexes will have changed\r\n\t\t) {\r\n\t\t\tsettings.aiDisplay = displayMaster.slice();\r\n\t\t}\r\n\r\n\t\t// Search the display array\r\n\t\tdisplay = settings.aiDisplay;\r\n\r\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\r\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\r\n\t\t\t\tfiltered.push( display[i] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsettings.aiDisplay = filtered;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Build a regular expression object suitable for searching a table\r\n *  @param {string} sSearch string to search for\r\n *  @param {bool} bRegex treat as a regular expression or not\r\n *  @param {bool} bSmart perform smart filtering or not\r\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\r\n *  @returns {RegExp} constructed object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\r\n{\r\n\tsearch = regex ?\r\n\t\tsearch :\r\n\t\t_fnEscapeRegex( search );\r\n\t\r\n\tif ( smart ) {\r\n\t\t/* For smart filtering we want to allow the search to work regardless of\r\n\t\t * word order. We also want double quoted text to be preserved, so word\r\n\t\t * order is important - a la google. So this is what we want to\r\n\t\t * generate:\r\n\t\t * \r\n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\r\n\t\t */\r\n\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\r\n\t\t\tif ( word.charAt(0) === '\"' ) {\r\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\r\n\t\t\t\tword = m ? m[1] : word;\r\n\t\t\t}\r\n\r\n\t\t\treturn word.replace('\"', '');\r\n\t\t} );\r\n\r\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\r\n\t}\r\n\r\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\r\n}\r\n\r\n\r\n/**\r\n * Escape a string such that it can be used in a regular expression\r\n *  @param {string} sVal string to escape\r\n *  @returns {string} escaped string\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\r\n\r\nvar __filter_div = $('<div>')[0];\r\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\r\n\r\n// Update the filtering data for each row if needed (by invalidation or first run)\r\nfunction _fnFilterData ( settings )\r\n{\r\n\tvar columns = settings.aoColumns;\r\n\tvar column;\r\n\tvar i, j, ien, jen, filterData, cellData, row;\r\n\tvar wasInvalidated = false;\r\n\r\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\trow = settings.aoData[i];\r\n\r\n\t\tif ( ! row._aFilterData ) {\r\n\t\t\tfilterData = [];\r\n\r\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\r\n\t\t\t\tcolumn = columns[j];\r\n\r\n\t\t\t\tif ( column.bSearchable ) {\r\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\r\n\r\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\r\n\t\t\t\t\t// should be altered to also allow strict type checking.\r\n\t\t\t\t\tif ( cellData === null ) {\r\n\t\t\t\t\t\tcellData = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\r\n\t\t\t\t\t\tcellData = cellData.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcellData = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If it looks like there is an HTML entity in the string,\r\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\r\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\r\n\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\r\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\r\n\t\t\t\t\t__filter_div.innerHTML = cellData;\r\n\t\t\t\t\tcellData = __filter_div_textContent ?\r\n\t\t\t\t\t\t__filter_div.textContent :\r\n\t\t\t\t\t\t__filter_div.innerText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cellData.replace ) {\r\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilterData.push( cellData );\r\n\t\t\t}\r\n\r\n\t\t\trow._aFilterData = filterData;\r\n\t\t\trow._sFilterRow = filterData.join('  ');\r\n\t\t\twasInvalidated = true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn wasInvalidated;\r\n}\r\n\r\n\r\n/**\r\n * Convert from the internal Hungarian notation to camelCase for external\r\n * interaction\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSearchToCamel ( obj )\r\n{\r\n\treturn {\r\n\t\tsearch:          obj.sSearch,\r\n\t\tsmart:           obj.bSmart,\r\n\t\tregex:           obj.bRegex,\r\n\t\tcaseInsensitive: obj.bCaseInsensitive\r\n\t};\r\n}\r\n\r\n\r\n\r\n/**\r\n * Convert from camelCase notation to the internal Hungarian. We could use the\r\n * Hungarian convert function here, but this is cleaner\r\n *  @param {object} obj Object to convert\r\n *  @returns {object} Inverted object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSearchToHung ( obj )\r\n{\r\n\treturn {\r\n\t\tsSearch:          obj.search,\r\n\t\tbSmart:           obj.smart,\r\n\t\tbRegex:           obj.regex,\r\n\t\tbCaseInsensitive: obj.caseInsensitive\r\n\t};\r\n}\r\n\r\n/**\r\n * Generate the node required for the info display\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Information element\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlInfo ( settings )\r\n{\r\n\tvar\r\n\t\ttid = settings.sTableId,\r\n\t\tnodes = settings.aanFeatures.i,\r\n\t\tn = $('<div/>', {\r\n\t\t\t'class': settings.oClasses.sInfo,\r\n\t\t\t'id': ! nodes ? tid+'_info' : null\r\n\t\t} );\r\n\r\n\tif ( ! nodes ) {\r\n\t\t// Update display on each draw\r\n\t\tsettings.aoDrawCallback.push( {\r\n\t\t\t\"fn\": _fnUpdateInfo,\r\n\t\t\t\"sName\": \"information\"\r\n\t\t} );\r\n\r\n\t\tn\r\n\t\t\t.attr( 'role', 'status' )\r\n\t\t\t.attr( 'aria-live', 'polite' );\r\n\r\n\t\t// Table is described by our info div\r\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\r\n\t}\r\n\r\n\treturn n[0];\r\n}\r\n\r\n\r\n/**\r\n * Update the information elements in the display\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnUpdateInfo ( settings )\r\n{\r\n\t/* Show information about the table */\r\n\tvar nodes = settings.aanFeatures.i;\r\n\tif ( nodes.length === 0 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\tlang  = settings.oLanguage,\r\n\t\tstart = settings._iDisplayStart+1,\r\n\t\tend   = settings.fnDisplayEnd(),\r\n\t\tmax   = settings.fnRecordsTotal(),\r\n\t\ttotal = settings.fnRecordsDisplay(),\r\n\t\tout   = total ?\r\n\t\t\tlang.sInfo :\r\n\t\t\tlang.sInfoEmpty;\r\n\r\n\tif ( total !== max ) {\r\n\t\t/* Record set after filtering */\r\n\t\tout += ' ' + lang.sInfoFiltered;\r\n\t}\r\n\r\n\t// Convert the macros\r\n\tout += lang.sInfoPostFix;\r\n\tout = _fnInfoMacros( settings, out );\r\n\r\n\tvar callback = lang.fnInfoCallback;\r\n\tif ( callback !== null ) {\r\n\t\tout = callback.call( settings.oInstance,\r\n\t\t\tsettings, start, end, max, total, out\r\n\t\t);\r\n\t}\r\n\r\n\t$(nodes).html( out );\r\n}\r\n\r\n\r\nfunction _fnInfoMacros ( settings, str )\r\n{\r\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\r\n\t// internally\r\n\tvar\r\n\t\tformatter  = settings.fnFormatNumber,\r\n\t\tstart      = settings._iDisplayStart+1,\r\n\t\tlen        = settings._iDisplayLength,\r\n\t\tvis        = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn str.\r\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\r\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\r\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\r\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\r\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\r\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\r\n}\r\n\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitialise ( settings )\r\n{\r\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\r\n\tvar columns = settings.aoColumns, column;\r\n\tvar features = settings.oFeatures;\r\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\r\n\r\n\t/* Ensure that the table data is fully initialised */\r\n\tif ( ! settings.bInitialised ) {\r\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Show the display HTML options */\r\n\t_fnAddOptionsHtml( settings );\r\n\r\n\t/* Build and draw the header / footer for the table */\r\n\t_fnBuildHead( settings );\r\n\t_fnDrawHead( settings, settings.aoHeader );\r\n\t_fnDrawHead( settings, settings.aoFooter );\r\n\r\n\t/* Okay to show that something is going on now */\r\n\t_fnProcessingDisplay( settings, true );\r\n\r\n\t/* Calculate sizes for columns */\r\n\tif ( features.bAutoWidth ) {\r\n\t\t_fnCalculateColumnWidths( settings );\r\n\t}\r\n\r\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\r\n\t\tcolumn = columns[i];\r\n\r\n\t\tif ( column.sWidth ) {\r\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\r\n\t\t}\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\r\n\r\n\t// If there is default sorting required - let's do it. The sort function\r\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\r\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\r\n\t// data (show 'loading' message possibly)\r\n\t_fnReDraw( settings );\r\n\r\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\r\n\tvar dataSrc = _fnDataSource( settings );\r\n\tif ( dataSrc != 'ssp' || deferLoading ) {\r\n\t\t// if there is an ajax source load the data\r\n\t\tif ( dataSrc == 'ajax' ) {\r\n\t\t\t_fnBuildAjax( settings, [], function(json) {\r\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\r\n\r\n\t\t\t\t// Got the data - add it to the table\r\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\r\n\t\t\t\t\t_fnAddData( settings, aData[i] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reset the init display for cookie saving. We've already done\r\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\r\n\t\t\t\t// it appear 'fresh'\r\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\r\n\r\n\t\t\t\t_fnReDraw( settings );\r\n\r\n\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t_fnInitComplete( settings, json );\r\n\t\t\t}, settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t_fnInitComplete( settings );\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Draw the table for the first time, adding all required features\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\r\n *    with client-side processing (optional)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnInitComplete ( settings, json )\r\n{\r\n\tsettings._bInitComplete = true;\r\n\r\n\t// When data was added after the initialisation (data or Ajax) we need to\r\n\t// calculate the column sizing\r\n\tif ( json || settings.oInit.aaData ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\r\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\r\n}\r\n\r\n\r\nfunction _fnLengthChange ( settings, val )\r\n{\r\n\tvar len = parseInt( val, 10 );\r\n\tsettings._iDisplayLength = len;\r\n\r\n\t_fnLengthOverflow( settings );\r\n\r\n\t// Fire length change event\r\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\r\n}\r\n\r\n\r\n/**\r\n * Generate the node required for user display length changing\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Display length feature node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlLength ( settings )\r\n{\r\n\tvar\r\n\t\tclasses  = settings.oClasses,\r\n\t\ttableId  = settings.sTableId,\r\n\t\tmenu     = settings.aLengthMenu,\r\n\t\td2       = Array.isArray( menu[0] ),\r\n\t\tlengths  = d2 ? menu[0] : menu,\r\n\t\tlanguage = d2 ? menu[1] : menu;\r\n\r\n\tvar select = $('<select/>', {\r\n\t\t'name':          tableId+'_length',\r\n\t\t'aria-controls': tableId,\r\n\t\t'class':         classes.sLengthSelect\r\n\t} );\r\n\r\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\r\n\t\tselect[0][ i ] = new Option(\r\n\t\t\ttypeof language[i] === 'number' ?\r\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\r\n\t\t\t\tlanguage[i],\r\n\t\t\tlengths[i]\r\n\t\t);\r\n\t}\r\n\r\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\r\n\tif ( ! settings.aanFeatures.l ) {\r\n\t\tdiv[0].id = tableId+'_length';\r\n\t}\r\n\r\n\tdiv.children().append(\r\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\r\n\t);\r\n\r\n\t// Can't use `select` variable as user might provide their own and the\r\n\t// reference is broken by the use of outerHTML\r\n\t$('select', div)\r\n\t\t.val( settings._iDisplayLength )\r\n\t\t.on( 'change.DT', function(e) {\r\n\t\t\t_fnLengthChange( settings, $(this).val() );\r\n\t\t\t_fnDraw( settings );\r\n\t\t} );\r\n\r\n\t// Update node value whenever anything changes the table's length\r\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\r\n\t\tif ( settings === s ) {\r\n\t\t\t$('select', div).val( len );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn div[0];\r\n}\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Note that most of the paging logic is done in\r\n * DataTable.ext.pager\r\n */\r\n\r\n/**\r\n * Generate the node required for default pagination\r\n *  @param {object} oSettings dataTables settings object\r\n *  @returns {node} Pagination feature node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlPaginate ( settings )\r\n{\r\n\tvar\r\n\t\ttype   = settings.sPaginationType,\r\n\t\tplugin = DataTable.ext.pager[ type ],\r\n\t\tmodern = typeof plugin === 'function',\r\n\t\tredraw = function( settings ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t},\r\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\r\n\t\tfeatures = settings.aanFeatures;\r\n\r\n\tif ( ! modern ) {\r\n\t\tplugin.fnInit( settings, node, redraw );\r\n\t}\r\n\r\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\r\n\tif ( ! features.p )\r\n\t{\r\n\t\tnode.id = settings.sTableId+'_paginate';\r\n\r\n\t\tsettings.aoDrawCallback.push( {\r\n\t\t\t\"fn\": function( settings ) {\r\n\t\t\t\tif ( modern ) {\r\n\t\t\t\t\tvar\r\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\r\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\r\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\t\t\t\t\tall        = len === -1,\r\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\r\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\t\t\t\tbuttons = plugin(page, pages),\r\n\t\t\t\t\t\ti, ien;\r\n\r\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\r\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\r\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"sName\": \"pagination\"\r\n\t\t} );\r\n\t}\r\n\r\n\treturn node;\r\n}\r\n\r\n\r\n/**\r\n * Alter the display settings to change the page\r\n *  @param {object} settings DataTables settings object\r\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\r\n *    \"next\" or \"last\" or page number to jump to (integer)\r\n *  @param [bool] redraw Automatically draw the update or not\r\n *  @returns {bool} true page has changed, false - no change\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnPageChange ( settings, action, redraw )\r\n{\r\n\tvar\r\n\t\tstart     = settings._iDisplayStart,\r\n\t\tlen       = settings._iDisplayLength,\r\n\t\trecords   = settings.fnRecordsDisplay();\r\n\r\n\tif ( records === 0 || len === -1 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( typeof action === \"number\" )\r\n\t{\r\n\t\tstart = action * len;\r\n\r\n\t\tif ( start > records )\r\n\t\t{\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"first\" )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\telse if ( action == \"previous\" )\r\n\t{\r\n\t\tstart = len >= 0 ?\r\n\t\t\tstart - len :\r\n\t\t\t0;\r\n\r\n\t\tif ( start < 0 )\r\n\t\t{\r\n\t\t  start = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"next\" )\r\n\t{\r\n\t\tif ( start + len < records )\r\n\t\t{\r\n\t\t\tstart += len;\r\n\t\t}\r\n\t}\r\n\telse if ( action == \"last\" )\r\n\t{\r\n\t\tstart = Math.floor( (records-1) / len) * len;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\r\n\t}\r\n\r\n\tvar changed = settings._iDisplayStart !== start;\r\n\tsettings._iDisplayStart = start;\r\n\r\n\tif ( changed ) {\r\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\r\n\r\n\t\tif ( redraw ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// No change event - paging was called, but no change\r\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\r\n\t}\r\n\r\n\treturn changed;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Generate the node required for the processing node\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Processing element\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlProcessing ( settings )\r\n{\r\n\treturn $('<div/>', {\r\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\r\n\t\t\t'class': settings.oClasses.sProcessing,\r\n\t\t\t'role': 'status'\r\n\t\t} )\r\n\t\t.html( settings.oLanguage.sProcessing )\r\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\r\n\t\t.insertBefore( settings.nTable )[0];\r\n}\r\n\r\n\r\n/**\r\n * Display or hide the processing indicator\r\n *  @param {object} settings dataTables settings object\r\n *  @param {bool} show Show the processing indicator (true) or not (false)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnProcessingDisplay ( settings, show )\r\n{\r\n\tif ( settings.oFeatures.bProcessing ) {\r\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\r\n\t}\r\n\r\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\r\n}\r\n\r\n/**\r\n * Add any control elements for the table - specifically scrolling\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {node} Node to add to the DOM\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnFeatureHtmlTable ( settings )\r\n{\r\n\tvar table = $(settings.nTable);\r\n\r\n\t// Scrolling from here on in\r\n\tvar scroll = settings.oScroll;\r\n\r\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\r\n\t\treturn settings.nTable;\r\n\t}\r\n\r\n\tvar scrollX = scroll.sX;\r\n\tvar scrollY = scroll.sY;\r\n\tvar classes = settings.oClasses;\r\n\tvar caption = table.children('caption');\r\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\r\n\tvar headerClone = $( table[0].cloneNode(false) );\r\n\tvar footerClone = $( table[0].cloneNode(false) );\r\n\tvar footer = table.children('tfoot');\r\n\tvar _div = '<div/>';\r\n\tvar size = function ( s ) {\r\n\t\treturn !s ? null : _fnStringToCss( s );\r\n\t};\r\n\r\n\tif ( ! footer.length ) {\r\n\t\tfooter = null;\r\n\t}\r\n\r\n\t/*\r\n\t * The HTML structure that we want to generate in this function is:\r\n\t *  div - scroller\r\n\t *    div - scroll head\r\n\t *      div - scroll head inner\r\n\t *        table - scroll head table\r\n\t *          thead - thead\r\n\t *    div - scroll body\r\n\t *      table - table (master table)\r\n\t *        thead - thead clone for sizing\r\n\t *        tbody - tbody\r\n\t *    div - scroll foot\r\n\t *      div - scroll foot inner\r\n\t *        table - scroll foot table\r\n\t *          tfoot - tfoot\r\n\t */\r\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\r\n\t\t\t\t\t\t.css( {\r\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\r\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\theaderClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('thead')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t\t.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\twidth: size( scrollX )\r\n\t\t\t\t} )\r\n\t\t\t\t.append( table )\r\n\t\t);\r\n\r\n\tif ( footer ) {\r\n\t\tscroller.append(\r\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\r\n\t\t\t\t.css( {\r\n\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\r\n\t\t\t\t} )\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\r\n\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\tfooterClone\r\n\t\t\t\t\t\t\t\t.removeAttr('id')\r\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\r\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\r\n\t\t\t\t\t\t\t\t.append(\r\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tvar children = scroller.children();\r\n\tvar scrollHead = children[0];\r\n\tvar scrollBody = children[1];\r\n\tvar scrollFoot = footer ? children[2] : null;\r\n\r\n\t// When the body is scrolled, then we also want to scroll the headers\r\n\tif ( scrollX ) {\r\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\r\n\t\t\tvar scrollLeft = this.scrollLeft;\r\n\r\n\t\t\tscrollHead.scrollLeft = scrollLeft;\r\n\r\n\t\t\tif ( footer ) {\r\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\t$(scrollBody).css('max-height', scrollY);\r\n\tif (! scroll.bCollapse) {\r\n\t\t$(scrollBody).css('height', scrollY);\r\n\t}\r\n\r\n\tsettings.nScrollHead = scrollHead;\r\n\tsettings.nScrollBody = scrollBody;\r\n\tsettings.nScrollFoot = scrollFoot;\r\n\r\n\t// On redraw - align columns\r\n\tsettings.aoDrawCallback.push( {\r\n\t\t\"fn\": _fnScrollDraw,\r\n\t\t\"sName\": \"scrolling\"\r\n\t} );\r\n\r\n\treturn scroller[0];\r\n}\r\n\r\n\r\n\r\n/**\r\n * Update the header, footer and body tables for resizing - i.e. column\r\n * alignment.\r\n *\r\n * Welcome to the most horrible function DataTables. The process that this\r\n * function follows is basically:\r\n *   1. Re-create the table inside the scrolling div\r\n *   2. Take live measurements from the DOM\r\n *   3. Apply the measurements to align the columns\r\n *   4. Clean up\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnScrollDraw ( settings )\r\n{\r\n\t// Given that this is such a monster function, a lot of variables are use\r\n\t// to try and keep the minimised size as small as possible\r\n\tvar\r\n\t\tscroll         = settings.oScroll,\r\n\t\tscrollX        = scroll.sX,\r\n\t\tscrollXInner   = scroll.sXInner,\r\n\t\tscrollY        = scroll.sY,\r\n\t\tbarWidth       = scroll.iBarWidth,\r\n\t\tdivHeader      = $(settings.nScrollHead),\r\n\t\tdivHeaderStyle = divHeader[0].style,\r\n\t\tdivHeaderInner = divHeader.children('div'),\r\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\r\n\t\tdivHeaderTable = divHeaderInner.children('table'),\r\n\t\tdivBodyEl      = settings.nScrollBody,\r\n\t\tdivBody        = $(divBodyEl),\r\n\t\tdivBodyStyle   = divBodyEl.style,\r\n\t\tdivFooter      = $(settings.nScrollFoot),\r\n\t\tdivFooterInner = divFooter.children('div'),\r\n\t\tdivFooterTable = divFooterInner.children('table'),\r\n\t\theader         = $(settings.nTHead),\r\n\t\ttable          = $(settings.nTable),\r\n\t\ttableEl        = table[0],\r\n\t\ttableStyle     = tableEl.style,\r\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\r\n\t\tbrowser        = settings.oBrowser,\r\n\t\tie67           = browser.bScrollOversize,\r\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\r\n\t\theaderTrgEls, footerTrgEls,\r\n\t\theaderSrcEls, footerSrcEls,\r\n\t\theaderCopy, footerCopy,\r\n\t\theaderWidths=[], footerWidths=[],\r\n\t\theaderContent=[], footerContent=[],\r\n\t\tidx, correction, sanityWidth,\r\n\t\tzeroOut = function(nSizer) {\r\n\t\t\tvar style = nSizer.style;\r\n\t\t\tstyle.paddingTop = \"0\";\r\n\t\t\tstyle.paddingBottom = \"0\";\r\n\t\t\tstyle.borderTopWidth = \"0\";\r\n\t\t\tstyle.borderBottomWidth = \"0\";\r\n\t\t\tstyle.height = 0;\r\n\t\t};\r\n\r\n\t// If the scrollbar visibility has changed from the last draw, we need to\r\n\t// adjust the column sizes as the table width will have changed to account\r\n\t// for the scrollbar\r\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\r\n\t\r\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t\treturn; // adjust column sizing will call this function again\r\n\t}\r\n\telse {\r\n\t\tsettings.scrollBarVis = scrollBarVis;\r\n\t}\r\n\r\n\t/*\r\n\t * 1. Re-create the table inside the scrolling div\r\n\t */\r\n\r\n\t// Remove the old minimised thead and tfoot elements in the inner table\r\n\ttable.children('thead, tfoot').remove();\r\n\r\n\tif ( footer ) {\r\n\t\tfooterCopy = footer.clone().prependTo( table );\r\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\r\n\t\tfooterSrcEls = footerCopy.find('tr');\r\n\t\tfooterCopy.find('[id]').removeAttr('id');\r\n\t}\r\n\r\n\t// Clone the current header and footer elements and then place it into the inner table\r\n\theaderCopy = header.clone().prependTo( table );\r\n\theaderTrgEls = header.find('tr'); // original header is in its own table\r\n\theaderSrcEls = headerCopy.find('tr');\r\n\theaderCopy.find('th, td').removeAttr('tabindex');\r\n\theaderCopy.find('[id]').removeAttr('id');\r\n\r\n\r\n\t/*\r\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\r\n\t */\r\n\r\n\t// Remove old sizing and apply the calculated column widths\r\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\r\n\t// calculated sizes to this header\r\n\tif ( ! scrollX )\r\n\t{\r\n\t\tdivBodyStyle.width = '100%';\r\n\t\tdivHeader[0].style.width = '100%';\r\n\t}\r\n\r\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\r\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\r\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\r\n\t} );\r\n\r\n\tif ( footer ) {\r\n\t\t_fnApplyToChildren( function(n) {\r\n\t\t\tn.style.width = \"\";\r\n\t\t}, footerSrcEls );\r\n\t}\r\n\r\n\t// Size the table as a whole\r\n\tsanityWidth = table.outerWidth();\r\n\tif ( scrollX === \"\" ) {\r\n\t\t// No x scrolling\r\n\t\ttableStyle.width = \"100%\";\r\n\r\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\r\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\r\n\t\t// into account.\r\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\r\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\r\n\t\t) {\r\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\r\n\t\t}\r\n\r\n\t\t// Recalculate the sanity width\r\n\t\tsanityWidth = table.outerWidth();\r\n\t}\r\n\telse if ( scrollXInner !== \"\" ) {\r\n\t\t// legacy x scroll inner has been given - use it\r\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\r\n\r\n\t\t// Recalculate the sanity width\r\n\t\tsanityWidth = table.outerWidth();\r\n\t}\r\n\r\n\t// Hidden header should have zero height, so remove padding and borders. Then\r\n\t// set the width based on the real headers\r\n\r\n\t// Apply all styles in one pass\r\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\r\n\r\n\t// Read all widths in next pass\r\n\t_fnApplyToChildren( function(nSizer) {\r\n\t\tvar style = window.getComputedStyle ?\r\n\t\t\twindow.getComputedStyle(nSizer).width :\r\n\t\t\t_fnStringToCss( $(nSizer).width() );\r\n\r\n\t\theaderContent.push( nSizer.innerHTML );\r\n\t\theaderWidths.push( style );\r\n\t}, headerSrcEls );\r\n\r\n\t// Apply all widths in final pass\r\n\t_fnApplyToChildren( function(nToSize, i) {\r\n\t\tnToSize.style.width = headerWidths[i];\r\n\t}, headerTrgEls );\r\n\r\n\t$(headerSrcEls).css('height', 0);\r\n\r\n\t/* Same again with the footer if we have one */\r\n\tif ( footer )\r\n\t{\r\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\r\n\r\n\t\t_fnApplyToChildren( function(nSizer) {\r\n\t\t\tfooterContent.push( nSizer.innerHTML );\r\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\r\n\t\t}, footerSrcEls );\r\n\r\n\t\t_fnApplyToChildren( function(nToSize, i) {\r\n\t\t\tnToSize.style.width = footerWidths[i];\r\n\t\t}, footerTrgEls );\r\n\r\n\t\t$(footerSrcEls).height(0);\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * 3. Apply the measurements\r\n\t */\r\n\r\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\r\n\t// the content of the cell so that the width applied to the header and body\r\n\t// both match, but we want to hide it completely. We want to also fix their\r\n\t// width to what they currently are\r\n\t_fnApplyToChildren( function(nSizer, i) {\r\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\r\n\t\tnSizer.childNodes[0].style.height = \"0\";\r\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\r\n\t\tnSizer.style.width = headerWidths[i];\r\n\t}, headerSrcEls );\r\n\r\n\tif ( footer )\r\n\t{\r\n\t\t_fnApplyToChildren( function(nSizer, i) {\r\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\r\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\r\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\r\n\t\t\tnSizer.style.width = footerWidths[i];\r\n\t\t}, footerSrcEls );\r\n\t}\r\n\r\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\r\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\r\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\r\n\t{\r\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\r\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\r\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\r\n\t\t\t\tsanityWidth+barWidth :\r\n\t\t\t\tsanityWidth;\r\n\r\n\t\t// IE6/7 are a law unto themselves...\r\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\r\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\r\n\t\t) {\r\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\r\n\t\t}\r\n\r\n\t\t// And give the user a warning that we've stopped the table getting too small\r\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\r\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcorrection = '100%';\r\n\t}\r\n\r\n\t// Apply to the container elements\r\n\tdivBodyStyle.width = _fnStringToCss( correction );\r\n\tdivHeaderStyle.width = _fnStringToCss( correction );\r\n\r\n\tif ( footer ) {\r\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * 4. Clean up\r\n\t */\r\n\tif ( ! scrollY ) {\r\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\r\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\r\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\r\n\t\t */\r\n\t\tif ( ie67 ) {\r\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Finally set the width's of the header and footer tables */\r\n\tvar iOuterWidth = table.outerWidth();\r\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\r\n\r\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\r\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\r\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\r\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\r\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\r\n\tif ( footer ) {\r\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\r\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\r\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\r\n\t}\r\n\r\n\t// Correct DOM ordering for colgroup - comes before the thead\r\n\ttable.children('colgroup').insertBefore( table.children('thead') );\r\n\r\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\r\n\tdivBody.trigger('scroll');\r\n\r\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\r\n\t// only if we aren't holding the position\r\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\r\n\t\tdivBodyEl.scrollTop = 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Apply a given function to the display child nodes of an element array (typically\r\n * TD children of TR rows\r\n *  @param {function} fn Method to apply to the objects\r\n *  @param array {nodes} an1 List of elements to look through for display children\r\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnApplyToChildren( fn, an1, an2 )\r\n{\r\n\tvar index=0, i=0, iLen=an1.length;\r\n\tvar nNode1, nNode2;\r\n\r\n\twhile ( i < iLen ) {\r\n\t\tnNode1 = an1[i].firstChild;\r\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\r\n\r\n\t\twhile ( nNode1 ) {\r\n\t\t\tif ( nNode1.nodeType === 1 ) {\r\n\t\t\t\tif ( an2 ) {\r\n\t\t\t\t\tfn( nNode1, nNode2, index );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfn( nNode1, index );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tnNode1 = nNode1.nextSibling;\r\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t}\r\n}\r\n\r\n\r\n\r\nvar __re_html_remove = /<.*?>/g;\r\n\r\n\r\n/**\r\n * Calculate the width of columns for the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCalculateColumnWidths ( oSettings )\r\n{\r\n\tvar\r\n\t\ttable = oSettings.nTable,\r\n\t\tcolumns = oSettings.aoColumns,\r\n\t\tscroll = oSettings.oScroll,\r\n\t\tscrollY = scroll.sY,\r\n\t\tscrollX = scroll.sX,\r\n\t\tscrollXInner = scroll.sXInner,\r\n\t\tcolumnCount = columns.length,\r\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\r\n\t\theaderCells = $('th', oSettings.nTHead),\r\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\r\n\t\ttableContainer = table.parentNode,\r\n\t\tuserInputs = false,\r\n\t\ti, column, columnIdx, width, outerWidth,\r\n\t\tbrowser = oSettings.oBrowser,\r\n\t\tie67 = browser.bScrollOversize;\r\n\r\n\tvar styleWidth = table.style.width;\r\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\r\n\t\ttableWidthAttr = styleWidth;\r\n\t}\r\n\r\n\t/* Convert any user input sizes into pixel sizes */\r\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\tcolumn = columns[ visibleColumns[i] ];\r\n\r\n\t\tif ( column.sWidth !== null ) {\r\n\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\r\n\r\n\t\t\tuserInputs = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/* If the number of columns in the DOM equals the number that we have to\r\n\t * process in DataTables, then we can use the offsets that are created by\r\n\t * the web- browser. No custom sizes can be set in order for this to happen,\r\n\t * nor scrolling used\r\n\t */\r\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\r\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\r\n\t     columnCount == headerCells.length\r\n\t) {\r\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\r\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\r\n\r\n\t\t\tif ( colIdx !== null ) {\r\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Otherwise construct a single row, worst case, table with the widest\r\n\t\t// node in the data, assign any user defined widths, then insert it into\r\n\t\t// the DOM and allow the browser to do all the hard work of calculating\r\n\t\t// table widths\r\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\r\n\t\t\t.css( 'visibility', 'hidden' )\r\n\t\t\t.removeAttr( 'id' );\r\n\r\n\t\t// Clean up the table body\r\n\t\ttmpTable.find('tbody tr').remove();\r\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\r\n\r\n\t\t// Clone the table header and footer - we can't use the header / footer\r\n\t\t// from the cloned table, since if scrolling is active, the table's\r\n\t\t// real header and footer are contained in different table tags\r\n\t\ttmpTable.find('thead, tfoot').remove();\r\n\t\ttmpTable\r\n\t\t\t.append( $(oSettings.nTHead).clone() )\r\n\t\t\t.append( $(oSettings.nTFoot).clone() );\r\n\r\n\t\t// Remove any assigned widths from the footer (from scrolling)\r\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\r\n\r\n\t\t// Apply custom sizing to the cloned header\r\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\r\n\r\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\tcolumn = columns[ visibleColumns[i] ];\r\n\r\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\r\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\r\n\t\t\t\t'';\r\n\r\n\t\t\t// For scrollX we need to force the column width otherwise the\r\n\t\t\t// browser will collapse it. If this width is smaller than the\r\n\t\t\t// width the column requires, then it will have no effect\r\n\t\t\tif ( column.sWidthOrig && scrollX ) {\r\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\r\n\t\t\t\t\twidth: column.sWidthOrig,\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\tborder: 0,\r\n\t\t\t\t\theight: 1\r\n\t\t\t\t} ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Find the widest cell for each column and put it into the table\r\n\t\tif ( oSettings.aoData.length ) {\r\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\t\tcolumnIdx = visibleColumns[i];\r\n\t\t\t\tcolumn = columns[ columnIdx ];\r\n\r\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\r\n\t\t\t\t\t.clone( false )\r\n\t\t\t\t\t.append( column.sContentPadding )\r\n\t\t\t\t\t.appendTo( tr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Tidy the temporary table - remove name attributes so there aren't\r\n\t\t// duplicated in the dom (radio elements for example)\r\n\t\t$('[name]', tmpTable).removeAttr('name');\r\n\r\n\t\t// Table has been built, attach to the document so we can work with it.\r\n\t\t// A holding element is used, positioned at the top of the container\r\n\t\t// with minimal height, so it has no effect on if the container scrolls\r\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\r\n\t\t// needed\r\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\r\n\t\t\t\t{\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\theight: 1,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t} :\r\n\t\t\t\t{}\r\n\t\t\t)\r\n\t\t\t.append( tmpTable )\r\n\t\t\t.appendTo( tableContainer );\r\n\r\n\t\t// When scrolling (X or Y) we want to set the width of the table as \r\n\t\t// appropriate. However, when not scrolling leave the table width as it\r\n\t\t// is. This results in slightly different, but I think correct behaviour\r\n\t\tif ( scrollX && scrollXInner ) {\r\n\t\t\ttmpTable.width( scrollXInner );\r\n\t\t}\r\n\t\telse if ( scrollX ) {\r\n\t\t\ttmpTable.css( 'width', 'auto' );\r\n\t\t\ttmpTable.removeAttr('width');\r\n\r\n\t\t\t// If there is no width attribute or style, then allow the table to\r\n\t\t\t// collapse\r\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\r\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ( scrollY ) {\r\n\t\t\ttmpTable.width( tableContainer.clientWidth );\r\n\t\t}\r\n\t\telse if ( tableWidthAttr ) {\r\n\t\t\ttmpTable.width( tableWidthAttr );\r\n\t\t}\r\n\r\n\t\t// Get the width of each column in the constructed table - we need to\r\n\t\t// know the inner width (so it can be assigned to the other table's\r\n\t\t// cells) and the outer width so we can calculate the full width of the\r\n\t\t// table. This is safe since DataTables requires a unique cell for each\r\n\t\t// column, but if ever a header can span multiple columns, this will\r\n\t\t// need to be modified.\r\n\t\tvar total = 0;\r\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\r\n\t\t\tvar cell = $(headerCells[i]);\r\n\t\t\tvar border = cell.outerWidth() - cell.width();\r\n\r\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\r\n\t\t\t// sub-pixel accuracy, which we then want to round up!\r\n\t\t\tvar bounding = browser.bBounding ?\r\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\r\n\t\t\t\tcell.outerWidth();\r\n\r\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\r\n\t\t\t// of the table might not equal the total given here (IE!).\r\n\t\t\ttotal += bounding;\r\n\r\n\t\t\t// Width for each column to use\r\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\r\n\t\t}\r\n\r\n\t\ttable.style.width = _fnStringToCss( total );\r\n\r\n\t\t// Finished with the table - ditch it\r\n\t\tholder.remove();\r\n\t}\r\n\r\n\t// If there is a width attr, we want to attach an event listener which\r\n\t// allows the table sizing to automatically adjust when the window is\r\n\t// resized. Use the width attr rather than CSS, since we can't know if the\r\n\t// CSS is a relative value or absolute - DOM read is always px.\r\n\tif ( tableWidthAttr ) {\r\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\r\n\t}\r\n\r\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\r\n\t\tvar bindResize = function () {\r\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\r\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\r\n\t\t\t} ) );\r\n\t\t};\r\n\r\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\r\n\t\t// To be removed in 1.11 which drops IE6/7 support\r\n\t\tif ( ie67 ) {\r\n\t\t\tsetTimeout( bindResize, 1000 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbindResize();\r\n\t\t}\r\n\r\n\t\toSettings._reszEvt = true;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Throttle the calls to a function. Arguments and context are maintained for\r\n * the throttled function\r\n *  @param {function} fn Function to be called\r\n *  @param {int} [freq=200] call frequency in mS\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#oApi\r\n */\r\nvar _fnThrottle = DataTable.util.throttle;\r\n\r\n\r\n/**\r\n * Convert a CSS unit width to pixels (e.g. 2em)\r\n *  @param {string} width width to be converted\r\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\r\n *  @returns {int} width in pixels\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnConvertToWidth ( width, parent )\r\n{\r\n\tif ( ! width ) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tvar n = $('<div/>')\r\n\t\t.css( 'width', _fnStringToCss( width ) )\r\n\t\t.appendTo( parent || document.body );\r\n\r\n\tvar val = n[0].offsetWidth;\r\n\tn.remove();\r\n\r\n\treturn val;\r\n}\r\n\r\n\r\n/**\r\n * Get the widest node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {node} widest table node\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetWidestNode( settings, colIdx )\r\n{\r\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\r\n\tif ( idx < 0 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar data = settings.aoData[ idx ];\r\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\r\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\r\n\t\tdata.anCells[ colIdx ];\r\n}\r\n\r\n\r\n/**\r\n * Get the maximum strlen for each data column\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} colIdx column of interest\r\n *  @returns {string} max string length for each column\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnGetMaxLenString( settings, colIdx )\r\n{\r\n\tvar s, max=-1, maxIdx = -1;\r\n\r\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\r\n\t\ts = s.replace( __re_html_remove, '' );\r\n\t\ts = s.replace( /&nbsp;/g, ' ' );\r\n\r\n\t\tif ( s.length > max ) {\r\n\t\t\tmax = s.length;\r\n\t\t\tmaxIdx = i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn maxIdx;\r\n}\r\n\r\n\r\n/**\r\n * Append a CSS unit (only if required) to a string\r\n *  @param {string} value to css-ify\r\n *  @returns {string} value with css unit\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnStringToCss( s )\r\n{\r\n\tif ( s === null ) {\r\n\t\treturn '0px';\r\n\t}\r\n\r\n\tif ( typeof s == 'number' ) {\r\n\t\treturn s < 0 ?\r\n\t\t\t'0px' :\r\n\t\t\ts+'px';\r\n\t}\r\n\r\n\t// Check it has a unit character already\r\n\treturn s.match(/\\d$/) ?\r\n\t\ts+'px' :\r\n\t\ts;\r\n}\r\n\r\n\r\n\r\nfunction _fnSortFlatten ( settings )\r\n{\r\n\tvar\r\n\t\ti, iLen, k, kLen,\r\n\t\taSort = [],\r\n\t\taiOrig = [],\r\n\t\taoColumns = settings.aoColumns,\r\n\t\taDataSort, iCol, sType, srcCol,\r\n\t\tfixed = settings.aaSortingFixed,\r\n\t\tfixedObj = $.isPlainObject( fixed ),\r\n\t\tnestedSort = [],\r\n\t\tadd = function ( a ) {\r\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\r\n\t\t\t\t// 1D array\r\n\t\t\t\tnestedSort.push( a );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// 2D array\r\n\t\t\t\t$.merge( nestedSort, a );\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t// Build the sort array, with pre-fix and post-fix options if they have been\r\n\t// specified\r\n\tif ( Array.isArray( fixed ) ) {\r\n\t\tadd( fixed );\r\n\t}\r\n\r\n\tif ( fixedObj && fixed.pre ) {\r\n\t\tadd( fixed.pre );\r\n\t}\r\n\r\n\tadd( settings.aaSorting );\r\n\r\n\tif (fixedObj && fixed.post ) {\r\n\t\tadd( fixed.post );\r\n\t}\r\n\r\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\r\n\t{\r\n\t\tsrcCol = nestedSort[i][0];\r\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\r\n\r\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\r\n\t\t{\r\n\t\t\tiCol = aDataSort[k];\r\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\r\n\r\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\r\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\r\n\t\t\t}\r\n\r\n\t\t\taSort.push( {\r\n\t\t\t\tsrc:       srcCol,\r\n\t\t\t\tcol:       iCol,\r\n\t\t\t\tdir:       nestedSort[i][1],\r\n\t\t\t\tindex:     nestedSort[i]._idx,\r\n\t\t\t\ttype:      sType,\r\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\treturn aSort;\r\n}\r\n\r\n/**\r\n * Change the order of the table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n *  @todo This really needs split up!\r\n */\r\nfunction _fnSort ( oSettings )\r\n{\r\n\tvar\r\n\t\ti, ien, iLen, j, jLen, k, kLen,\r\n\t\tsDataType, nTh,\r\n\t\taiOrig = [],\r\n\t\toExtSort = DataTable.ext.type.order,\r\n\t\taoData = oSettings.aoData,\r\n\t\taoColumns = oSettings.aoColumns,\r\n\t\taDataSort, data, iCol, sType, oSort,\r\n\t\tformatters = 0,\r\n\t\tsortCol,\r\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\r\n\t\taSort;\r\n\r\n\t// Resolve any column types that are unknown due to addition or invalidation\r\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\r\n\t//   data is going to be used in the table?\r\n\t_fnColumnTypes( oSettings );\r\n\r\n\taSort = _fnSortFlatten( oSettings );\r\n\r\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\r\n\t\tsortCol = aSort[i];\r\n\r\n\t\t// Track if we can use the fast sort algorithm\r\n\t\tif ( sortCol.formatter ) {\r\n\t\t\tformatters++;\r\n\t\t}\r\n\r\n\t\t// Load the data needed for the sort, for each cell\r\n\t\t_fnSortData( oSettings, sortCol.col );\r\n\t}\r\n\r\n\t/* No sorting required if server-side or no sorting array */\r\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\r\n\t{\r\n\t\t// Create a value - key array of the current row positions such that we can use their\r\n\t\t// current position during the sort, if values match, in order to perform stable sorting\r\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\r\n\t\t\taiOrig[ displayMaster[i] ] = i;\r\n\t\t}\r\n\r\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\r\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\r\n\t\t * follow on it's own, but this is what we want (example two column sorting):\r\n\t\t *  fnLocalSorting = function(a,b){\r\n\t\t *    var iTest;\r\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\r\n\t\t *      if (iTest !== 0)\r\n\t\t *        return iTest;\r\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\r\n\t\t *    if (iTest !== 0)\r\n\t\t *      return iTest;\r\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\r\n\t\t *  }\r\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\r\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\r\n\t\t * positions in the original data array to provide a stable sort.\r\n\t\t *\r\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\r\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\r\n\t\t * methods which do not have a pre-sort formatting function.\r\n\t\t */\r\n\t\tif ( formatters === aSort.length ) {\r\n\t\t\t// All sort types have formatting functions\r\n\t\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tx, y, k, test, sort,\r\n\t\t\t\t\tlen=aSort.length,\r\n\t\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = aiOrig[a];\r\n\t\t\t\ty = aiOrig[b];\r\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t} );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\r\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\r\n\t\t\t// methods.\r\n\t\t\tdisplayMaster.sort( function ( a, b ) {\r\n\t\t\t\tvar\r\n\t\t\t\t\tx, y, k, l, test, sort, fn,\r\n\t\t\t\t\tlen=aSort.length,\r\n\t\t\t\t\tdataA = aoData[a]._aSortData,\r\n\t\t\t\t\tdataB = aoData[b]._aSortData;\r\n\r\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\r\n\t\t\t\t\tsort = aSort[k];\r\n\r\n\t\t\t\t\tx = dataA[ sort.col ];\r\n\t\t\t\t\ty = dataB[ sort.col ];\r\n\r\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\r\n\t\t\t\t\ttest = fn( x, y );\r\n\t\t\t\t\tif ( test !== 0 ) {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx = aiOrig[a];\r\n\t\t\t\ty = aiOrig[b];\r\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Tell the draw function that we have sorted the data */\r\n\toSettings.bSorted = true;\r\n}\r\n\r\n\r\nfunction _fnSortAria ( settings )\r\n{\r\n\tvar label;\r\n\tvar nextSort;\r\n\tvar columns = settings.aoColumns;\r\n\tvar aSort = _fnSortFlatten( settings );\r\n\tvar oAria = settings.oLanguage.oAria;\r\n\r\n\t// ARIA attributes - need to loop all columns, to update all (removing old\r\n\t// attributes as needed)\r\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\r\n\t{\r\n\t\tvar col = columns[i];\r\n\t\tvar asSorting = col.asSorting;\r\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\r\n\t\tvar th = col.nTh;\r\n\r\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\r\n\t\t// attr() and removeAttr() methods...\r\n\t\tth.removeAttribute('aria-sort');\r\n\r\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\r\n\t\tif ( col.bSortable ) {\r\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\r\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\r\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnextSort = asSorting[0];\r\n\t\t\t}\r\n\r\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\r\n\t\t\t\toAria.sSortAscending :\r\n\t\t\t\toAria.sSortDescending\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel = sTitle;\r\n\t\t}\r\n\r\n\t\tth.setAttribute('aria-label', label);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Function to run on user sort request\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {boolean} [append=false] Append the requested sort to the existing\r\n *    sort if true (i.e. multi-column sort)\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortListener ( settings, colIdx, append, callback )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\tvar sorting = settings.aaSorting;\r\n\tvar asSorting = col.asSorting;\r\n\tvar nextSortIdx;\r\n\tvar next = function ( a, overflow ) {\r\n\t\tvar idx = a._idx;\r\n\t\tif ( idx === undefined ) {\r\n\t\t\tidx = $.inArray( a[1], asSorting );\r\n\t\t}\r\n\r\n\t\treturn idx+1 < asSorting.length ?\r\n\t\t\tidx+1 :\r\n\t\t\toverflow ?\r\n\t\t\t\tnull :\r\n\t\t\t\t0;\r\n\t};\r\n\r\n\t// Convert to 2D array if needed\r\n\tif ( typeof sorting[0] === 'number' ) {\r\n\t\tsorting = settings.aaSorting = [ sorting ];\r\n\t}\r\n\r\n\t// If appending the sort then we are multi-column sorting\r\n\tif ( append && settings.oFeatures.bSortMulti ) {\r\n\t\t// Are we already doing some kind of sort on this column?\r\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\r\n\r\n\t\tif ( sortIdx !== -1 ) {\r\n\t\t\t// Yes, modify the sort\r\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\r\n\r\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\r\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\r\n\t\t\t}\r\n\r\n\t\t\tif ( nextSortIdx === null ) {\r\n\t\t\t\tsorting.splice( sortIdx, 1 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\r\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No sort on this column yet\r\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\r\n\t\t\tsorting[sorting.length-1]._idx = 0;\r\n\t\t}\r\n\t}\r\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\r\n\t\t// Single column - already sorting on this column, modify the sort\r\n\t\tnextSortIdx = next( sorting[0] );\r\n\r\n\t\tsorting.length = 1;\r\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\r\n\t\tsorting[0]._idx = nextSortIdx;\r\n\t}\r\n\telse {\r\n\t\t// Single column - sort only on this column\r\n\t\tsorting.length = 0;\r\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\r\n\t\tsorting[0]._idx = 0;\r\n\t}\r\n\r\n\t// Run the sort by calling a full redraw\r\n\t_fnReDraw( settings );\r\n\r\n\t// callback used for async user interaction\r\n\tif ( typeof callback == 'function' ) {\r\n\t\tcallback( settings );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Attach a sort handler (click) to a node\r\n *  @param {object} settings dataTables settings object\r\n *  @param {node} attachTo node to attach the handler to\r\n *  @param {int} colIdx column sorting index\r\n *  @param {function} [callback] callback function\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\r\n{\r\n\tvar col = settings.aoColumns[ colIdx ];\r\n\r\n\t_fnBindAction( attachTo, {}, function (e) {\r\n\t\t/* If the column is not sortable - don't to anything */\r\n\t\tif ( col.bSortable === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If processing is enabled use a timeout to allow the processing\r\n\t\t// display to be shown - otherwise to it synchronously\r\n\t\tif ( settings.oFeatures.bProcessing ) {\r\n\t\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t\tsetTimeout( function() {\r\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\r\n\t\t\t\t// In server-side processing, the draw callback will remove the\r\n\t\t\t\t// processing display\r\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\r\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t\t\t}\r\n\t\t\t}, 0 );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\r\n\t\t}\r\n\t} );\r\n}\r\n\r\n\r\n/**\r\n * Set the sorting classes on table's body, Note: it is safe to call this function\r\n * when bSort and bSortClasses are false\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSortingClasses( settings )\r\n{\r\n\tvar oldSort = settings.aLastSort;\r\n\tvar sortClass = settings.oClasses.sSortColumn;\r\n\tvar sort = _fnSortFlatten( settings );\r\n\tvar features = settings.oFeatures;\r\n\tvar i, ien, colIdx;\r\n\r\n\tif ( features.bSort && features.bSortClasses ) {\r\n\t\t// Remove old sorting classes\r\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = oldSort[i].src;\r\n\r\n\t\t\t// Remove column sorting\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\r\n\t\t// Add new column sorting\r\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\r\n\t\t\tcolIdx = sort[i].src;\r\n\r\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\r\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\r\n\t\t}\r\n\t}\r\n\r\n\tsettings.aLastSort = sort;\r\n}\r\n\r\n\r\n// Get the data to sort a column, be it from cache, fresh (populating the\r\n// cache), or from a sort formatter\r\nfunction _fnSortData( settings, idx )\r\n{\r\n\t// Custom sorting function - provided by the sort data type\r\n\tvar column = settings.aoColumns[ idx ];\r\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\r\n\tvar customData;\r\n\r\n\tif ( customSort ) {\r\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\r\n\t\t\t_fnColumnIndexToVisible( settings, idx )\r\n\t\t);\r\n\t}\r\n\r\n\t// Use / populate cache\r\n\tvar row, cellData;\r\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\r\n\r\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\trow = settings.aoData[i];\r\n\r\n\t\tif ( ! row._aSortData ) {\r\n\t\t\trow._aSortData = [];\r\n\t\t}\r\n\r\n\t\tif ( ! row._aSortData[idx] || customSort ) {\r\n\t\t\tcellData = customSort ?\r\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\r\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\r\n\r\n\t\t\trow._aSortData[ idx ] = formatter ?\r\n\t\t\t\tformatter( cellData ) :\r\n\t\t\t\tcellData;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Save the state of a table\r\n *  @param {object} oSettings dataTables settings object\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSaveState ( settings )\r\n{\r\n\tif (settings._bLoadingState) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/* Store the interesting variables */\r\n\tvar state = {\r\n\t\ttime:    +new Date(),\r\n\t\tstart:   settings._iDisplayStart,\r\n\t\tlength:  settings._iDisplayLength,\r\n\t\torder:   $.extend( true, [], settings.aaSorting ),\r\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\r\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\r\n\t\t\treturn {\r\n\t\t\t\tvisible: col.bVisible,\r\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\r\n\t\t\t};\r\n\t\t} )\r\n\t};\r\n\r\n\tsettings.oSavedState = state;\r\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\r\n\t\r\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\r\n\t{\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\r\n\t}\t\r\n}\r\n\r\n\r\n/**\r\n * Attempt to load a saved table state\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {object} oInit DataTables init object so we can override settings\r\n *  @param {function} callback Callback to execute when the state has been loaded\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLoadState ( settings, oInit, callback )\r\n{\r\n\tif ( ! settings.oFeatures.bStateSave ) {\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar loaded = function(state) {\r\n\t\t_fnImplementState(settings, state, callback);\r\n\t}\r\n\r\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\r\n\r\n\tif ( state !== undefined ) {\r\n\t\t_fnImplementState( settings, state, callback );\r\n\t}\r\n\t// otherwise, wait for the loaded callback to be executed\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction _fnImplementState ( settings, s, callback) {\r\n\tvar i, ien;\r\n\tvar columns = settings.aoColumns;\r\n\tsettings._bLoadingState = true;\r\n\r\n\t// When StateRestore was introduced the state could now be implemented at any time\r\n\t// Not just initialisation. To do this an api instance is required in some places\r\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\r\n\r\n\tif ( ! s || ! s.time ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\r\n\t// cancelling of loading by returning false\r\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\r\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Reject old data\r\n\tvar duration = settings.iStateDuration;\r\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Number of columns have changed - all bets are off, no restore of settings\r\n\tif ( s.columns && columns.length !== s.columns.length ) {\r\n\t\tsettings._bLoadingState = false;\r\n\t\tcallback();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Store the saved state so it might be accessed at any time\r\n\tsettings.oLoadedState = $.extend( true, {}, s );\r\n\r\n\t// Page Length\r\n\tif ( s.length !== undefined ) {\r\n\t\t// If already initialised just set the value directly so that the select element is also updated\r\n\t\tif (api) {\r\n\t\t\tapi.page.len(s.length)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings._iDisplayLength   = s.length;\r\n\t\t}\r\n\t}\r\n\r\n\t// Restore key features - todo - for 1.11 this needs to be done by\r\n\t// subscribed events\r\n\tif ( s.start !== undefined ) {\r\n\t\tif(api === null) {\r\n\t\t\tsettings._iDisplayStart    = s.start;\r\n\t\t\tsettings.iInitDisplayStart = s.start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\r\n\t\t}\r\n\t}\r\n\r\n\t// Order\r\n\tif ( s.order !== undefined ) {\r\n\t\tsettings.aaSorting = [];\r\n\t\t$.each( s.order, function ( i, col ) {\r\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\r\n\t\t\t\t[ 0, col[1] ] :\r\n\t\t\t\tcol\r\n\t\t\t);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Search\r\n\tif ( s.search !== undefined ) {\r\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\r\n\t}\r\n\r\n\t// Columns\r\n\tif ( s.columns ) {\r\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\r\n\t\t\tvar col = s.columns[i];\r\n\r\n\t\t\t// Visibility\r\n\t\t\tif ( col.visible !== undefined ) {\r\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\r\n\t\t\t\tif (api) {\r\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\r\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Search\r\n\t\t\tif ( col.search !== undefined ) {\r\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\r\n\t\tif (api) {\r\n\t\t\tapi.columns.adjust();\r\n\t\t}\r\n\t}\r\n\r\n\tsettings._bLoadingState = false;\r\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\r\n\tcallback();\r\n};\r\n\r\n\r\n/**\r\n * Return the settings object for a particular table\r\n *  @param {node} table table we are using as a dataTable\r\n *  @returns {object} Settings object - or null if not found\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnSettingsFromNode ( table )\r\n{\r\n\tvar settings = DataTable.settings;\r\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\r\n\r\n\treturn idx !== -1 ?\r\n\t\tsettings[ idx ] :\r\n\t\tnull;\r\n}\r\n\r\n\r\n/**\r\n * Log an error message\r\n *  @param {object} settings dataTables settings object\r\n *  @param {int} level log error messages, or display them to the user\r\n *  @param {string} msg error message\r\n *  @param {int} tn Technical note id to get more information about the error.\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnLog( settings, level, msg, tn )\r\n{\r\n\tmsg = 'DataTables warning: '+\r\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\r\n\r\n\tif ( tn ) {\r\n\t\tmsg += '. For more information about this error, please see '+\r\n\t\t'http://datatables.net/tn/'+tn;\r\n\t}\r\n\r\n\tif ( ! level  ) {\r\n\t\t// Backwards compatibility pre 1.10\r\n\t\tvar ext = DataTable.ext;\r\n\t\tvar type = ext.sErrMode || ext.errMode;\r\n\r\n\t\tif ( settings ) {\r\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\r\n\t\t}\r\n\r\n\t\tif ( type == 'alert' ) {\r\n\t\t\talert( msg );\r\n\t\t}\r\n\t\telse if ( type == 'throw' ) {\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\t\telse if ( typeof type == 'function' ) {\r\n\t\t\ttype( settings, tn, msg );\r\n\t\t}\r\n\t}\r\n\telse if ( window.console && console.log ) {\r\n\t\tconsole.log( msg );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * See if a property is defined on one object, if so assign it to the other object\r\n *  @param {object} ret target object\r\n *  @param {object} src source object\r\n *  @param {string} name property\r\n *  @param {string} [mappedName] name to map too - optional, name used if not given\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnMap( ret, src, name, mappedName )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\t$.each( name, function (i, val) {\r\n\t\t\tif ( Array.isArray( val ) ) {\r\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t_fnMap( ret, src, val );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( mappedName === undefined ) {\r\n\t\tmappedName = name;\r\n\t}\r\n\r\n\tif ( src[name] !== undefined ) {\r\n\t\tret[mappedName] = src[name];\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\r\n * shallow copy arrays. The reason we need to do this, is that we don't want to\r\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\r\n * able to override them, but we do want to deep copy arrays.\r\n *  @param {object} out Object to extend\r\n *  @param {object} extender Object from which the properties will be applied to\r\n *      out\r\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\r\n *      independent copy with the exception of the `data` or `aaData` parameters\r\n *      if they are present. This is so you can pass in a collection to\r\n *      DataTables and have that used as your data source without breaking the\r\n *      references\r\n *  @returns {object} out Reference, just for convenience - out === the return.\r\n *  @memberof DataTable#oApi\r\n *  @todo This doesn't take account of arrays inside the deep copied objects.\r\n */\r\nfunction _fnExtend( out, extender, breakRefs )\r\n{\r\n\tvar val;\r\n\r\n\tfor ( var prop in extender ) {\r\n\t\tif ( extender.hasOwnProperty(prop) ) {\r\n\t\t\tval = extender[prop];\r\n\r\n\t\t\tif ( $.isPlainObject( val ) ) {\r\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\r\n\t\t\t\t\tout[prop] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$.extend( true, out[prop], val );\r\n\t\t\t}\r\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\r\n\t\t\t\tout[prop] = val.slice();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout[prop] = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n\r\n/**\r\n * Bind an event handers to allow a click or return key to activate the callback.\r\n * This is good for accessibility since a return on the keyboard will have the\r\n * same effect as a click, if the element has focus.\r\n *  @param {element} n Element to bind the action to\r\n *  @param {object} oData Data object to pass to the triggered function\r\n *  @param {function} fn Callback function for when the event is triggered\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnBindAction( n, oData, fn )\r\n{\r\n\t$(n)\r\n\t\t.on( 'click.DT', oData, function (e) {\r\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\r\n\t\t\t\tfn(e);\r\n\t\t\t} )\r\n\t\t.on( 'keypress.DT', oData, function (e){\r\n\t\t\t\tif ( e.which === 13 ) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tfn(e);\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t\t.on( 'selectstart.DT', function () {\r\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\r\n\t\t\t\treturn false;\r\n\t\t\t} );\r\n}\r\n\r\n\r\n/**\r\n * Register a callback function. Easily allows a callback function to be added to\r\n * an array store of callback functions that can then all be called together.\r\n *  @param {object} oSettings dataTables settings object\r\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\r\n *  @param {function} fn Function to be called back\r\n *  @param {string} sName Identifying name for the callback (i.e. a label)\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\r\n{\r\n\tif ( fn )\r\n\t{\r\n\t\toSettings[sStore].push( {\r\n\t\t\t\"fn\": fn,\r\n\t\t\t\"sName\": sName\r\n\t\t} );\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Fire callback functions and trigger events. Note that the loop over the\r\n * callback array store is done backwards! Further note that you do not want to\r\n * fire off triggers in time sensitive applications (for example cell creation)\r\n * as its slow.\r\n *  @param {object} settings dataTables settings object\r\n *  @param {string} callbackArr Name of the array storage for the callbacks in\r\n *      oSettings\r\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\r\n *      null no trigger is fired\r\n *  @param {array} args Array of arguments to pass to the callback function /\r\n *      trigger\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\r\n{\r\n\tvar ret = [];\r\n\r\n\tif ( callbackArr ) {\r\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\r\n\t\t\treturn val.fn.apply( settings.oInstance, args );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( eventName !== null ) {\r\n\t\tvar e = $.Event( eventName+'.dt' );\r\n\t\tvar table = $(settings.nTable);\r\n\r\n\t\ttable.trigger( e, args );\r\n\r\n\t\t// If not yet attached to the document, trigger the event\r\n\t\t// on the body directly to sort of simulate the bubble\r\n\t\tif (table.parents('body').length === 0) {\r\n\t\t\t$('body').trigger( e, args );\r\n\t\t}\r\n\r\n\t\tret.push( e.result );\r\n\t}\r\n\r\n\treturn ret;\r\n}\r\n\r\n\r\nfunction _fnLengthOverflow ( settings )\r\n{\r\n\tvar\r\n\t\tstart = settings._iDisplayStart,\r\n\t\tend = settings.fnDisplayEnd(),\r\n\t\tlen = settings._iDisplayLength;\r\n\r\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\r\n\tif ( start >= end )\r\n\t{\r\n\t\tstart = end - len;\r\n\t}\r\n\r\n\t// Keep the start record on the current page\r\n\tstart -= (start % len);\r\n\r\n\tif ( len === -1 || start < 0 )\r\n\t{\r\n\t\tstart = 0;\r\n\t}\r\n\r\n\tsettings._iDisplayStart = start;\r\n}\r\n\r\n\r\nfunction _fnRenderer( settings, type )\r\n{\r\n\tvar renderer = settings.renderer;\r\n\tvar host = DataTable.ext.renderer[type];\r\n\r\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\r\n\t\t// Specific renderer for this type. If available use it, otherwise use\r\n\t\t// the default.\r\n\t\treturn host[renderer[type]] || host._;\r\n\t}\r\n\telse if ( typeof renderer === 'string' ) {\r\n\t\t// Common renderer - if there is one available for this type use it,\r\n\t\t// otherwise use the default\r\n\t\treturn host[renderer] || host._;\r\n\t}\r\n\r\n\t// Use the default\r\n\treturn host._;\r\n}\r\n\r\n\r\n/**\r\n * Detect the data source being used for the table. Used to simplify the code\r\n * a little (ajax) and to make it compress a little smaller.\r\n *\r\n *  @param {object} settings dataTables settings object\r\n *  @returns {string} Data source\r\n *  @memberof DataTable#oApi\r\n */\r\nfunction _fnDataSource ( settings )\r\n{\r\n\tif ( settings.oFeatures.bServerSide ) {\r\n\t\treturn 'ssp';\r\n\t}\r\n\telse if ( settings.ajax || settings.sAjaxSource ) {\r\n\t\treturn 'ajax';\r\n\t}\r\n\treturn 'dom';\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Computed structure of the DataTables API, defined by the options passed to\r\n * `DataTable.Api.register()` when building the API.\r\n *\r\n * The structure is built in order to speed creation and extension of the Api\r\n * objects since the extensions are effectively pre-parsed.\r\n *\r\n * The array is an array of objects with the following structure, where this\r\n * base array represents the Api prototype base:\r\n *\r\n *     [\r\n *       {\r\n *         name:      'data'                -- string   - Property name\r\n *         val:       function () {},       -- function - Api method (or undefined if just an object\r\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n *       },\r\n *       {\r\n *         name:     'row'\r\n *         val:       {},\r\n *         methodExt: [ ... ],\r\n *         propExt:   [\r\n *           {\r\n *             name:      'data'\r\n *             val:       function () {},\r\n *             methodExt: [ ... ],\r\n *             propExt:   [ ... ]\r\n *           },\r\n *           ...\r\n *         ]\r\n *       }\r\n *     ]\r\n *\r\n * @type {Array}\r\n * @ignore\r\n */\r\nvar __apiStruct = [];\r\n\r\n\r\n/**\r\n * `Array.prototype` reference.\r\n *\r\n * @type object\r\n * @ignore\r\n */\r\nvar __arrayProto = Array.prototype;\r\n\r\n\r\n/**\r\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\r\n * take several different forms for ease of use.\r\n *\r\n * Each of the input parameter types will be converted to a DataTables settings\r\n * object where possible.\r\n *\r\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\r\n *   of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n *   * `DataTables.Api` - API instance\r\n * @return {array|null} Matching DataTables settings objects. `null` or\r\n *   `undefined` is returned if no matching DataTable is found.\r\n * @ignore\r\n */\r\nvar _toSettings = function ( mixed )\r\n{\r\n\tvar idx, jq;\r\n\tvar settings = DataTable.settings;\r\n\tvar tables = $.map( settings, function (el, i) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\tif ( ! mixed ) {\r\n\t\treturn [];\r\n\t}\r\n\telse if ( mixed.nTable && mixed.oApi ) {\r\n\t\t// DataTables settings object\r\n\t\treturn [ mixed ];\r\n\t}\r\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\r\n\t\t// Table node\r\n\t\tidx = $.inArray( mixed, tables );\r\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\r\n\t}\r\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\r\n\t\treturn mixed.settings().toArray();\r\n\t}\r\n\telse if ( typeof mixed === 'string' ) {\r\n\t\t// jQuery selector\r\n\t\tjq = $(mixed);\r\n\t}\r\n\telse if ( mixed instanceof $ ) {\r\n\t\t// jQuery object (also DataTables instance)\r\n\t\tjq = mixed;\r\n\t}\r\n\r\n\tif ( jq ) {\r\n\t\treturn jq.map( function(i) {\r\n\t\t\tidx = $.inArray( this, tables );\r\n\t\t\treturn idx !== -1 ? settings[idx] : null;\r\n\t\t} ).toArray();\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * DataTables API class - used to control and interface with  one or more\r\n * DataTables enhanced tables.\r\n *\r\n * The API class is heavily based on jQuery, presenting a chainable interface\r\n * that you can use to interact with tables. Each instance of the API class has\r\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\r\n * table, all tables on a page or a sub-set thereof.\r\n *\r\n * Additionally the API is designed to allow you to easily work with the data in\r\n * the tables, retrieving and manipulating it as required. This is done by\r\n * presenting the API class as an array like interface. The contents of the\r\n * array depend upon the actions requested by each method (for example\r\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\r\n * return an array of objects or arrays depending upon your table's\r\n * configuration). The API object has a number of array like methods (`push`,\r\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\r\n * `unique` etc) to assist your working with the data held in a table.\r\n *\r\n * Most methods (those which return an Api instance) are chainable, which means\r\n * the return from a method call also has all of the methods available that the\r\n * top level object had. For example, these two calls are equivalent:\r\n *\r\n *     // Not chained\r\n *     api.row.add( {...} );\r\n *     api.draw();\r\n *\r\n *     // Chained\r\n *     api.row.add( {...} ).draw();\r\n *\r\n * @class DataTable.Api\r\n * @param {array|object|string|jQuery} context DataTable identifier. This is\r\n *   used to define which DataTables enhanced tables this API will operate on.\r\n *   Can be one of:\r\n *\r\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\r\n *     with be found and used.\r\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\r\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\r\n *   * `object` - DataTables settings object\r\n * @param {array} [data] Data to initialise the Api instance with.\r\n *\r\n * @example\r\n *   // Direct initialisation during DataTables construction\r\n *   var api = $('#example').DataTable();\r\n *\r\n * @example\r\n *   // Initialisation using a DataTables jQuery object\r\n *   var api = $('#example').dataTable().api();\r\n *\r\n * @example\r\n *   // Initialisation as a constructor\r\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\r\n */\r\n_Api = function ( context, data )\r\n{\r\n\tif ( ! (this instanceof _Api) ) {\r\n\t\treturn new _Api( context, data );\r\n\t}\r\n\r\n\tvar settings = [];\r\n\tvar ctxSettings = function ( o ) {\r\n\t\tvar a = _toSettings( o );\r\n\t\tif ( a ) {\r\n\t\t\tsettings.push.apply( settings, a );\r\n\t\t}\r\n\t};\r\n\r\n\tif ( Array.isArray( context ) ) {\r\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tctxSettings( context[i] );\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tctxSettings( context );\r\n\t}\r\n\r\n\t// Remove duplicates\r\n\tthis.context = _unique( settings );\r\n\r\n\t// Initial data\r\n\tif ( data ) {\r\n\t\t$.merge( this, data );\r\n\t}\r\n\r\n\t// selector\r\n\tthis.selector = {\r\n\t\trows: null,\r\n\t\tcols: null,\r\n\t\topts: null\r\n\t};\r\n\r\n\t_Api.extend( this, this, __apiStruct );\r\n};\r\n\r\nDataTable.Api = _Api;\r\n\r\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\r\n// isPlainObject.\r\n$.extend( _Api.prototype, {\r\n\tany: function ()\r\n\t{\r\n\t\treturn this.count() !== 0;\r\n\t},\r\n\r\n\r\n\tconcat:  __arrayProto.concat,\r\n\r\n\r\n\tcontext: [], // array of table settings objects\r\n\r\n\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.flatten().length;\r\n\t},\r\n\r\n\r\n\teach: function ( fn )\r\n\t{\r\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\r\n\t\t\tfn.call( this, this[i], i, this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\teq: function ( idx )\r\n\t{\r\n\t\tvar ctx = this.context;\r\n\r\n\t\treturn ctx.length > idx ?\r\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\r\n\t\t\tnull;\r\n\t},\r\n\r\n\r\n\tfilter: function ( fn )\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\tif ( __arrayProto.filter ) {\r\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\r\n\t\t\t\t\ta.push( this[i] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\r\n\tflatten: function ()\r\n\t{\r\n\t\tvar a = [];\r\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\r\n\t},\r\n\r\n\r\n\tjoin:    __arrayProto.join,\r\n\r\n\r\n\tindexOf: __arrayProto.indexOf || function (obj, start)\r\n\t{\r\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\r\n\t\t\tif ( this[i] === obj ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\titerator: function ( flatten, type, fn, alwaysNew ) {\r\n\t\tvar\r\n\t\t\ta = [], ret,\r\n\t\t\ti, ien, j, jen,\r\n\t\t\tcontext = this.context,\r\n\t\t\trows, items, item,\r\n\t\t\tselector = this.selector;\r\n\r\n\t\t// Argument shifting\r\n\t\tif ( typeof flatten === 'string' ) {\r\n\t\t\talwaysNew = fn;\r\n\t\t\tfn = type;\r\n\t\t\ttype = flatten;\r\n\t\t\tflatten = false;\r\n\t\t}\r\n\r\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\t\tvar apiInst = new _Api( context[i] );\r\n\r\n\t\t\tif ( type === 'table' ) {\r\n\t\t\t\tret = fn.call( apiInst, context[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\r\n\t\t\t\t// this has same length as context - one entry for each table\r\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\r\n\r\n\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\ta.push( ret );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\r\n\t\t\t\t// columns and rows share the same structure.\r\n\t\t\t\t// 'this' is an array of column indexes for each context\r\n\t\t\t\titems = this[i];\r\n\r\n\t\t\t\tif ( type === 'column-rows' ) {\r\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\r\n\t\t\t\t\titem = items[j];\r\n\r\n\t\t\t\t\tif ( type === 'cell' ) {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\ta.push( ret );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( a.length || alwaysNew ) {\r\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\r\n\t\t\tvar apiSelector = api.selector;\r\n\t\t\tapiSelector.rows = selector.rows;\r\n\t\t\tapiSelector.cols = selector.cols;\r\n\t\t\tapiSelector.opts = selector.opts;\r\n\t\t\treturn api;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\r\n\t{\r\n\t\t// Bit cheeky...\r\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\r\n\t},\r\n\r\n\r\n\tlength:  0,\r\n\r\n\r\n\tmap: function ( fn )\r\n\t{\r\n\t\tvar a = [];\r\n\r\n\t\tif ( __arrayProto.map ) {\r\n\t\t\ta = __arrayProto.map.call( this, fn, this );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\r\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\r\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new _Api( this.context, a );\r\n\t},\r\n\r\n\r\n\tpluck: function ( prop )\r\n\t{\r\n\t\tvar fn = DataTable.util.get(prop);\r\n\r\n\t\treturn this.map( function ( el ) {\r\n\t\t\treturn fn(el);\r\n\t\t} );\r\n\t},\r\n\r\n\tpop:     __arrayProto.pop,\r\n\r\n\r\n\tpush:    __arrayProto.push,\r\n\r\n\r\n\t// Does not return an API instance\r\n\treduce: __arrayProto.reduce || function ( fn, init )\r\n\t{\r\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\r\n\t},\r\n\r\n\r\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\r\n\t{\r\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\r\n\t},\r\n\r\n\r\n\treverse: __arrayProto.reverse,\r\n\r\n\r\n\t// Object with rows, columns and opts\r\n\tselector: null,\r\n\r\n\r\n\tshift:   __arrayProto.shift,\r\n\r\n\r\n\tslice: function () {\r\n\t\treturn new _Api( this.context, this );\r\n\t},\r\n\r\n\r\n\tsort:    __arrayProto.sort, // ? name - order?\r\n\r\n\r\n\tsplice:  __arrayProto.splice,\r\n\r\n\r\n\ttoArray: function ()\r\n\t{\r\n\t\treturn __arrayProto.slice.call( this );\r\n\t},\r\n\r\n\r\n\tto$: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\r\n\ttoJQuery: function ()\r\n\t{\r\n\t\treturn $( this );\r\n\t},\r\n\r\n\r\n\tunique: function ()\r\n\t{\r\n\t\treturn new _Api( this.context, _unique(this) );\r\n\t},\r\n\r\n\r\n\tunshift: __arrayProto.unshift\r\n} );\r\n\r\n\r\n_Api.extend = function ( scope, obj, ext )\r\n{\r\n\t// Only extend API instances and static properties of the API\r\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\tstruct,\r\n\t\tmethodScoping = function ( scope, fn, struc ) {\r\n\t\t\treturn function () {\r\n\t\t\t\tvar ret = fn.apply( scope, arguments );\r\n\r\n\t\t\t\t// Method extension\r\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t};\r\n\r\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\tstruct = ext[i];\r\n\r\n\t\t// Value\r\n\t\tobj[ struct.name ] = struct.type === 'function' ?\r\n\t\t\tmethodScoping( scope, struct.val, struct ) :\r\n\t\t\tstruct.type === 'object' ?\r\n\t\t\t\t{} :\r\n\t\t\t\tstruct.val;\r\n\r\n\t\tobj[ struct.name ].__dt_wrapper = true;\r\n\r\n\t\t// Property extension\r\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\r\n\t}\r\n};\r\n\r\n\r\n// @todo - Is there need for an augment function?\r\n// _Api.augment = function ( inst, name )\r\n// {\r\n// \t// Find src object in the structure from the name\r\n// \tvar parts = name.split('.');\r\n\r\n// \t_Api.extend( inst, obj );\r\n// };\r\n\r\n\r\n//     [\r\n//       {\r\n//         name:      'data'                -- string   - Property name\r\n//         val:       function () {},       -- function - Api method (or undefined if just an object\r\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\r\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\r\n//       },\r\n//       {\r\n//         name:     'row'\r\n//         val:       {},\r\n//         methodExt: [ ... ],\r\n//         propExt:   [\r\n//           {\r\n//             name:      'data'\r\n//             val:       function () {},\r\n//             methodExt: [ ... ],\r\n//             propExt:   [ ... ]\r\n//           },\r\n//           ...\r\n//         ]\r\n//       }\r\n//     ]\r\n\r\n_Api.register = _api_register = function ( name, val )\r\n{\r\n\tif ( Array.isArray( name ) ) {\r\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\r\n\t\t\t_Api.register( name[j], val );\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar\r\n\t\ti, ien,\r\n\t\their = name.split('.'),\r\n\t\tstruct = __apiStruct,\r\n\t\tkey, method;\r\n\r\n\tvar find = function ( src, name ) {\r\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\r\n\t\t\tif ( src[i].name === name ) {\r\n\t\t\t\treturn src[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\r\n\t\tmethod = heir[i].indexOf('()') !== -1;\r\n\t\tkey = method ?\r\n\t\t\their[i].replace('()', '') :\r\n\t\t\their[i];\r\n\r\n\t\tvar src = find( struct, key );\r\n\t\tif ( ! src ) {\r\n\t\t\tsrc = {\r\n\t\t\t\tname:      key,\r\n\t\t\t\tval:       {},\r\n\t\t\t\tmethodExt: [],\r\n\t\t\t\tpropExt:   [],\r\n\t\t\t\ttype:      'object'\r\n\t\t\t};\r\n\t\t\tstruct.push( src );\r\n\t\t}\r\n\r\n\t\tif ( i === ien-1 ) {\r\n\t\t\tsrc.val = val;\r\n\t\t\tsrc.type = typeof val === 'function' ?\r\n\t\t\t\t'function' :\r\n\t\t\t\t$.isPlainObject( val ) ?\r\n\t\t\t\t\t'object' :\r\n\t\t\t\t\t'other';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstruct = method ?\r\n\t\t\t\tsrc.methodExt :\r\n\t\t\t\tsrc.propExt;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\r\n\t_Api.register( pluralName, val );\r\n\r\n\t_Api.register( singularName, function () {\r\n\t\tvar ret = val.apply( this, arguments );\r\n\r\n\t\tif ( ret === this ) {\r\n\t\t\t// Returned item is the API instance that was passed in, return it\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse if ( ret instanceof _Api ) {\r\n\t\t\t// New API instance returned, want the value from the first item\r\n\t\t\t// in the returned array for the singular result.\r\n\t\t\treturn ret.length ?\r\n\t\t\t\tArray.isArray( ret[0] ) ?\r\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\r\n\t\t\t\t\tret[0] :\r\n\t\t\t\tundefined;\r\n\t\t}\r\n\r\n\t\t// Non-API return - just fire it back\r\n\t\treturn ret;\r\n\t} );\r\n};\r\n\r\n\r\n/**\r\n * Selector for HTML tables. Apply the given selector to the give array of\r\n * DataTables settings objects.\r\n *\r\n * @param {string|integer} [selector] jQuery selector string or integer\r\n * @param  {array} Array of DataTables settings objects to be filtered\r\n * @return {array}\r\n * @ignore\r\n */\r\nvar __table_selector = function ( selector, a )\r\n{\r\n\tif ( Array.isArray(selector) ) {\r\n\t\treturn $.map( selector, function (item) {\r\n\t\t\treturn __table_selector(item, a);\r\n\t\t} );\r\n\t}\r\n\r\n\t// Integer is used to pick out a table by index\r\n\tif ( typeof selector === 'number' ) {\r\n\t\treturn [ a[ selector ] ];\r\n\t}\r\n\r\n\t// Perform a jQuery selector on the table nodes\r\n\tvar nodes = $.map( a, function (el, i) {\r\n\t\treturn el.nTable;\r\n\t} );\r\n\r\n\treturn $(nodes)\r\n\t\t.filter( selector )\r\n\t\t.map( function (i) {\r\n\t\t\t// Need to translate back from the table node to the settings\r\n\t\t\tvar idx = $.inArray( this, nodes );\r\n\t\t\treturn a[ idx ];\r\n\t\t} )\r\n\t\t.toArray();\r\n};\r\n\r\n\r\n\r\n/**\r\n * Context selector for the API's context (i.e. the tables the API instance\r\n * refers to.\r\n *\r\n * @name    DataTable.Api#tables\r\n * @param {string|integer} [selector] Selector to pick which tables the iterator\r\n *   should operate on. If not given, all tables in the current context are\r\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\r\n *   select multiple tables or as an integer to select a single table.\r\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\r\n */\r\n_api_register( 'tables()', function ( selector ) {\r\n\t// A new instance is created if there was a selector specified\r\n\treturn selector !== undefined && selector !== null ?\r\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\r\n\t\tthis;\r\n} );\r\n\r\n\r\n_api_register( 'table()', function ( selector ) {\r\n\tvar tables = this.tables( selector );\r\n\tvar ctx = tables.context;\r\n\r\n\t// Truncate to the first matched table\r\n\treturn ctx.length ?\r\n\t\tnew _Api( ctx[0] ) :\r\n\t\ttables;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTable;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTBody;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTHead;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTFoot;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\treturn ctx.nTableWrapper;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Redraw the tables in the current context.\r\n */\r\n_api_register( 'draw()', function ( paging ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( paging === 'page' ) {\r\n\t\t\t_fnDraw( settings );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ( typeof paging === 'string' ) {\r\n\t\t\t\tpaging = paging === 'full-hold' ?\r\n\t\t\t\t\tfalse :\r\n\t\t\t\t\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, paging===false );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get the current page index.\r\n *\r\n * @return {integer} Current page index (zero based)\r\n *//**\r\n * Set the current page.\r\n *\r\n * Note that if you attempt to show a page which does not exist, DataTables will\r\n * not throw an error, but rather reset the paging.\r\n *\r\n * @param {integer|string} action The paging action to take. This can be one of:\r\n *  * `integer` - The page index to jump to\r\n *  * `string` - An action to take:\r\n *    * `first` - Jump to first page.\r\n *    * `next` - Jump to the next page\r\n *    * `previous` - Jump to previous page\r\n *    * `last` - Jump to the last page.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page()', function ( action ) {\r\n\tif ( action === undefined ) {\r\n\t\treturn this.page.info().page; // not an expensive call\r\n\t}\r\n\r\n\t// else, have an action to take on all tables\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnPageChange( settings, action );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Paging information for the first table in the current context.\r\n *\r\n * If you require paging information for another table, use the `table()` method\r\n * with a suitable selector.\r\n *\r\n * @return {object} Object with the following properties set:\r\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\r\n *  * `pages` - Total number of pages\r\n *  * `start` - Display index for the first record shown on the current page\r\n *  * `end` - Display index for the last record shown on the current page\r\n *  * `length` - Display length (number of records). Note that generally `start\r\n *    + length = end`, but this is not always true, for example if there are\r\n *    only 2 records to show on the final page, with a length of 10.\r\n *  * `recordsTotal` - Full data set length\r\n *  * `recordsDisplay` - Data set length once the current filtering criterion\r\n *    are applied.\r\n */\r\n_api_register( 'page.info()', function ( action ) {\r\n\tif ( this.context.length === 0 ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tvar\r\n\t\tsettings   = this.context[0],\r\n\t\tstart      = settings._iDisplayStart,\r\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\r\n\t\tvisRecords = settings.fnRecordsDisplay(),\r\n\t\tall        = len === -1;\r\n\r\n\treturn {\r\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\r\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\r\n\t\t\"start\":          start,\r\n\t\t\"end\":            settings.fnDisplayEnd(),\r\n\t\t\"length\":         len,\r\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\r\n\t\t\"recordsDisplay\": visRecords,\r\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\r\n\t};\r\n} );\r\n\r\n\r\n/**\r\n * Get the current page length.\r\n *\r\n * @return {integer} Current page length. Note `-1` indicates that all records\r\n *   are to be shown.\r\n *//**\r\n * Set the current page length.\r\n *\r\n * @param {integer} Page length to set. Use `-1` to show all records.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'page.len()', function ( len ) {\r\n\t// Note that we can't call this function 'length()' because `length`\r\n\t// is a Javascript property of functions which defines how many arguments\r\n\t// the function expects.\r\n\tif ( len === undefined ) {\r\n\t\treturn this.context.length !== 0 ?\r\n\t\t\tthis.context[0]._iDisplayLength :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// else, set the page length\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnLengthChange( settings, len );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\nvar __reload = function ( settings, holdPosition, callback ) {\r\n\t// Use the draw event to trigger a callback\r\n\tif ( callback ) {\r\n\t\tvar api = new _Api( settings );\r\n\r\n\t\tapi.one( 'draw', function () {\r\n\t\t\tcallback( api.ajax.json() );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t_fnReDraw( settings, holdPosition );\r\n\t}\r\n\telse {\r\n\t\t_fnProcessingDisplay( settings, true );\r\n\r\n\t\t// Cancel an existing request\r\n\t\tvar xhr = settings.jqXHR;\r\n\t\tif ( xhr && xhr.readyState !== 4 ) {\r\n\t\t\txhr.abort();\r\n\t\t}\r\n\r\n\t\t// Trigger xhr\r\n\t\t_fnBuildAjax( settings, [], function( json ) {\r\n\t\t\t_fnClearTable( settings );\r\n\r\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\t_fnAddData( settings, data[i] );\r\n\t\t\t}\r\n\r\n\t\t\t_fnReDraw( settings, holdPosition );\r\n\t\t\t_fnProcessingDisplay( settings, false );\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Get the JSON response from the last Ajax request that DataTables made to the\r\n * server. Note that this returns the JSON from the first table in the current\r\n * context.\r\n *\r\n * @return {object} JSON received from the server.\r\n */\r\n_api_register( 'ajax.json()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].json;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Get the data submitted in the last Ajax request\r\n */\r\n_api_register( 'ajax.params()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length > 0 ) {\r\n\t\treturn ctx[0].oAjaxData;\r\n\t}\r\n\r\n\t// else return undefined;\r\n} );\r\n\r\n\r\n/**\r\n * Reload tables from the Ajax data source. Note that this function will\r\n * automatically re-draw the table when the remote data has been loaded.\r\n *\r\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\r\n *   position. A full re-sort and re-filter is performed when this method is\r\n *   called, which is why the pagination reset is the default action.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\r\n\treturn this.iterator( 'table', function (settings) {\r\n\t\t__reload( settings, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Get the current Ajax URL. Note that this returns the URL from the first\r\n * table in the current context.\r\n *\r\n * @return {string} Current Ajax source URL\r\n *//**\r\n * Set the Ajax URL. Note that this will set the URL for all tables in the\r\n * current context.\r\n *\r\n * @param {string} url URL to set.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url()', function ( url ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( url === undefined ) {\r\n\t\t// get\r\n\t\tif ( ctx.length === 0 ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tctx = ctx[0];\r\n\r\n\t\treturn ctx.ajax ?\r\n\t\t\t$.isPlainObject( ctx.ajax ) ?\r\n\t\t\t\tctx.ajax.url :\r\n\t\t\t\tctx.ajax :\r\n\t\t\tctx.sAjaxSource;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\r\n\t\t\tsettings.ajax.url = url;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsettings.ajax = url;\r\n\t\t}\r\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\r\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\r\n\t\t// value of `sAjaxSource` redundant.\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Load data from the newly set Ajax URL. Note that this method is only\r\n * available when `ajax.url()` is used to set a URL. Additionally, this method\r\n * has the same effect as calling `ajax.reload()` but is provided for\r\n * convenience when setting a new URL. Like `ajax.reload()` it will\r\n * automatically redraw the table once the remote data has been loaded.\r\n *\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\r\n\t// Same as a reload, but makes sense to present it for easy access after a\r\n\t// url change\r\n\treturn this.iterator( 'table', function ( ctx ) {\r\n\t\t__reload( ctx, resetPaging===false, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n\r\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\r\n{\r\n\tvar\r\n\t\tout = [], res,\r\n\t\ta, i, ien, j, jen,\r\n\t\tselectorType = typeof selector;\r\n\r\n\t// Can't just check for isArray here, as an API or jQuery instance might be\r\n\t// given with their array like look\r\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\r\n\t\tselector = [ selector ];\r\n\t}\r\n\r\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\r\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\r\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\r\n\t\t\tselector[i].split(',') :\r\n\t\t\t[ selector[i] ];\r\n\r\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\r\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\r\n\r\n\t\t\tif ( res && res.length ) {\r\n\t\t\t\tout = out.concat( res );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// selector extensions\r\n\tvar ext = _ext.selector[ type ];\r\n\tif ( ext.length ) {\r\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\r\n\t\t\tout = ext[i]( settings, opts, out );\r\n\t\t}\r\n\t}\r\n\r\n\treturn _unique( out );\r\n};\r\n\r\n\r\nvar _selector_opts = function ( opts )\r\n{\r\n\tif ( ! opts ) {\r\n\t\topts = {};\r\n\t}\r\n\r\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\r\n\t// than search\r\n\tif ( opts.filter && opts.search === undefined ) {\r\n\t\topts.search = opts.filter;\r\n\t}\r\n\r\n\treturn $.extend( {\r\n\t\tsearch: 'none',\r\n\t\torder: 'current',\r\n\t\tpage: 'all'\r\n\t}, opts );\r\n};\r\n\r\n\r\nvar _selector_first = function ( inst )\r\n{\r\n\t// Reduce the API instance to the first item found\r\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\r\n\t\tif ( inst[i].length > 0 ) {\r\n\t\t\t// Assign the first element to the first item in the instance\r\n\t\t\t// and truncate the instance and context\r\n\t\t\tinst[0] = inst[i];\r\n\t\t\tinst[0].length = 1;\r\n\t\t\tinst.length = 1;\r\n\t\t\tinst.context = [ inst.context[i] ];\r\n\r\n\t\t\treturn inst;\r\n\t\t}\r\n\t}\r\n\r\n\t// Not found - return an empty instance\r\n\tinst.length = 0;\r\n\treturn inst;\r\n};\r\n\r\n\r\nvar _selector_row_indexes = function ( settings, opts )\r\n{\r\n\tvar\r\n\t\ti, ien, tmp, a=[],\r\n\t\tdisplayFiltered = settings.aiDisplay,\r\n\t\tdisplayMaster = settings.aiDisplayMaster;\r\n\r\n\tvar\r\n\t\tsearch = opts.search,  // none, applied, removed\r\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\r\n\t\tpage   = opts.page;    // all, current\r\n\r\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\r\n\t\t// In server-side processing mode, most options are irrelevant since\r\n\t\t// rows not shown don't exist and the index order is the applied order\r\n\t\t// Removed is a special case - for consistency just return an empty\r\n\t\t// array\r\n\t\treturn search === 'removed' ?\r\n\t\t\t[] :\r\n\t\t\t_range( 0, displayMaster.length );\r\n\t}\r\n\telse if ( page == 'current' ) {\r\n\t\t// Current page implies that order=current and filter=applied, since it is\r\n\t\t// fairly senseless otherwise, regardless of what order and search actually\r\n\t\t// are\r\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\r\n\t\t\ta.push( displayFiltered[i] );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'current' || order == 'applied' ) {\r\n\t\tif ( search == 'none') {\r\n\t\t\ta = displayMaster.slice();\r\n\t\t}\r\n\t\telse if ( search == 'applied' ) {\r\n\t\t\ta = displayFiltered.slice();\r\n\t\t}\r\n\t\telse if ( search == 'removed' ) {\r\n\t\t\t// O(n+m) solution by creating a hash map\r\n\t\t\tvar displayFilteredMap = {};\r\n\r\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\r\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\r\n\t\t\t}\r\n\r\n\t\t\ta = $.map( displayMaster, function (el) {\r\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\r\n\t\t\t\t\tel :\r\n\t\t\t\t\tnull;\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\telse if ( order == 'index' || order == 'original' ) {\r\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tif ( search == 'none' ) {\r\n\t\t\t\ta.push( i );\r\n\t\t\t}\r\n\t\t\telse { // applied | removed\r\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\r\n\r\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\r\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\r\n\t\t\t\t{\r\n\t\t\t\t\ta.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a;\r\n};\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Rows\r\n *\r\n * {}          - no selector - use all available rows\r\n * {integer}   - row aoData index\r\n * {node}      - TR node\r\n * {string}    - jQuery selector to apply to the TR elements\r\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\r\n *\r\n */\r\nvar __row_selector = function ( settings, selector, opts )\r\n{\r\n\tvar rows;\r\n\tvar run = function ( sel ) {\r\n\t\tvar selInt = _intVal( sel );\r\n\t\tvar i, ien;\r\n\t\tvar aoData = settings.aoData;\r\n\r\n\t\t// Short cut - selector is a number and no options provided (default is\r\n\t\t// all records, so no need to check if the index is in there, since it\r\n\t\t// must be - dev error if the index doesn't exist).\r\n\t\tif ( selInt !== null && ! opts ) {\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\r\n\t\tif ( ! rows ) {\r\n\t\t\trows = _selector_row_indexes( settings, opts );\r\n\t\t}\r\n\r\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\r\n\t\t\t// Selector - integer\r\n\t\t\treturn [ selInt ];\r\n\t\t}\r\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\r\n\t\t\t// Selector - none\r\n\t\t\treturn rows;\r\n\t\t}\r\n\r\n\t\t// Selector - function\r\n\t\tif ( typeof sel === 'function' ) {\r\n\t\t\treturn $.map( rows, function (idx) {\r\n\t\t\t\tvar row = aoData[ idx ];\r\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Selector - node\r\n\t\tif ( sel.nodeName ) {\r\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\r\n\t\t\tvar cellIdx = sel._DT_CellIndex;\r\n\r\n\t\t\tif ( rowIdx !== undefined ) {\r\n\t\t\t\t// Make sure that the row is actually still present in the table\r\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\r\n\t\t\t\t\t[ rowIdx ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse if ( cellIdx ) {\r\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\r\n\t\t\t\t\t[ cellIdx.row ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\r\n\t\t\t\treturn host.length ?\r\n\t\t\t\t\t[ host.data('dt-row') ] :\r\n\t\t\t\t\t[];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// ID selector. Want to always be able to select rows by id, regardless\r\n\t\t// of if the tr element has been created or not, so can't rely upon\r\n\t\t// jQuery here - hence a custom implementation. This does not match\r\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\r\n\t\t// but to select it using a CSS selector engine (like Sizzle or\r\n\t\t// querySelect) it would need to need to be escaped for some characters.\r\n\t\t// DataTables simplifies this for row selectors since you can select\r\n\t\t// only a row. A # indicates an id any anything that follows is the id -\r\n\t\t// unescaped.\r\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\r\n\t\t\t// get row index from id\r\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\r\n\t\t\tif ( rowObj !== undefined ) {\r\n\t\t\t\treturn [ rowObj.idx ];\r\n\t\t\t}\r\n\r\n\t\t\t// need to fall through to jQuery in case there is DOM id that\r\n\t\t\t// matches\r\n\t\t}\r\n\t\t\r\n\t\t// Get nodes in the order from the `rows` array with null values removed\r\n\t\tvar nodes = _removeEmpty(\r\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\r\n\t\t);\r\n\r\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\r\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\r\n\t\t// it also allows arrays, so this will cope with all three options\r\n\t\treturn $(nodes)\r\n\t\t\t.filter( sel )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn this._DT_RowIndex;\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\t};\r\n\r\n\treturn _selector_run( 'row', selector, run, settings, opts );\r\n};\r\n\r\n\r\n_api_register( 'rows()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __row_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in __row_selector?\r\n\tinst.selector.rows = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_register( 'rows().nodes()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn settings.aoData[ row ].nTr || undefined;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'rows().data()', function () {\r\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\tvar r = settings.aoData[ row ];\r\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\t_fnInvalidate( settings, row, src );\r\n\t} );\r\n} );\r\n\r\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\r\n\treturn this.iterator( 'row', function ( settings, row ) {\r\n\t\treturn row;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\r\n\tvar a = [];\r\n\tvar context = this.context;\r\n\r\n\t// `iterator` will drop undefined values, but in this case we want them\r\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\r\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\r\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\r\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\r\n\t\t}\r\n\t}\r\n\r\n\treturn new _Api( context, a );\r\n} );\r\n\r\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\r\n\tvar that = this;\r\n\r\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\r\n\t\tvar data = settings.aoData;\r\n\t\tvar rowData = data[ row ];\r\n\t\tvar i, ien, j, jen;\r\n\t\tvar loopRow, loopCells;\r\n\r\n\t\tdata.splice( row, 1 );\r\n\r\n\t\t// Update the cached indexes\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\tloopRow = data[i];\r\n\t\t\tloopCells = loopRow.anCells;\r\n\r\n\t\t\t// Rows\r\n\t\t\tif ( loopRow.nTr !== null ) {\r\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\r\n\t\t\t}\r\n\r\n\t\t\t// Cells\r\n\t\t\tif ( loopCells !== null ) {\r\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\r\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Delete from the display arrays\r\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\r\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\r\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\r\n\r\n\t\t// For server-side processing tables - subtract the deleted row from the count\r\n\t\tif ( settings._iRecordsDisplay > 0 ) {\r\n\t\t\tsettings._iRecordsDisplay--;\r\n\t\t}\r\n\r\n\t\t// Check for an 'overflow' they case for displaying the table\r\n\t\t_fnLengthOverflow( settings );\r\n\r\n\t\t// Remove the row's ID reference if there is one\r\n\t\tvar id = settings.rowIdFn( rowData._aData );\r\n\t\tif ( id !== undefined ) {\r\n\t\t\tdelete settings.aIds[ id ];\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.iterator( 'table', function ( settings ) {\r\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\r\n\t\t\tsettings.aoData[i].idx = i;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'rows.add()', function ( rows ) {\r\n\tvar newRows = this.iterator( 'table', function ( settings ) {\r\n\t\t\tvar row, i, ien;\r\n\t\t\tvar out = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t}, 1 );\r\n\r\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\r\n\tvar modRows = this.rows( -1 );\r\n\tmodRows.pop();\r\n\t$.merge( modRows, newRows );\r\n\r\n\treturn modRows;\r\n} );\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( 'row()', function ( selector, opts ) {\r\n\treturn _selector_first( this.rows( selector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'row().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && this.length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._aData :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\tvar row = ctx[0].aoData[ this[0] ];\r\n\trow._aData = data;\r\n\r\n\t// If the DOM has an id, and the data source is an array\r\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\r\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\r\n\t}\r\n\r\n\t// Automatically invalidate\r\n\t_fnInvalidate( ctx[0], this[0], 'data' );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( 'row().node()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\treturn ctx.length && this.length ?\r\n\t\tctx[0].aoData[ this[0] ].nTr || null :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'row.add()', function ( row ) {\r\n\t// Allow a jQuery object to be passed in - only a single row is added from\r\n\t// it though - the first element in the set\r\n\tif ( row instanceof $ && row.length ) {\r\n\t\trow = row[0];\r\n\t}\r\n\r\n\tvar rows = this.iterator( 'table', function ( settings ) {\r\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\r\n\t\t\treturn _fnAddTr( settings, row )[0];\r\n\t\t}\r\n\t\treturn _fnAddData( settings, row );\r\n\t} );\r\n\r\n\t// Return an Api.rows() extended instance, with the newly added row selected\r\n\treturn this.row( rows[0] );\r\n} );\r\n\r\n\r\n$(document).on('plugin-init.dt', function (e, context) {\r\n\tvar api = new _Api( context );\r\n\tvar namespace = 'on-plugin-init';\r\n\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\r\n\tvar destroyEvent = 'destroy. ' + namespace;\r\n\r\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\r\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\r\n\t\t// internal loop\r\n\t\tvar idFn = settings.rowIdFn;\r\n\t\tvar data = settings.aoData;\r\n\t\tvar ids = [];\r\n\r\n\t\tfor (var i=0 ; i<data.length ; i++) {\r\n\t\t\tif (data[i]._detailsShow) {\r\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\td.childRows = ids;\r\n\t});\r\n\r\n\tapi.on( destroyEvent, function () {\r\n\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\r\n\t});\r\n\r\n\tvar loaded = api.state.loaded();\r\n\r\n\tif ( loaded && loaded.childRows ) {\r\n\t\tapi\r\n\t\t\t.rows( $.map(loaded.childRows, function (id){\r\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\r\n\t\t\t}) )\r\n\t\t\t.every( function () {\r\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\r\n\t\t\t});\r\n\t}\r\n});\r\n\r\nvar __details_add = function ( ctx, row, data, klass )\r\n{\r\n\t// Convert to array of TR elements\r\n\tvar rows = [];\r\n\tvar addRow = function ( r, k ) {\r\n\t\t// Recursion to allow for arrays of jQuery objects\r\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\r\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\r\n\t\t\t\taddRow( r[i], k );\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If we get a TR element, then just add it directly - up to the dev\r\n\t\t// to add the correct number of columns etc\r\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\r\n\t\t\trows.push( r );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Otherwise create a row with a wrapper\r\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\r\n\t\t\t$('td', created)\r\n\t\t\t\t.addClass( k )\r\n\t\t\t\t.html( r )\r\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\r\n\r\n\t\t\trows.push( created[0] );\r\n\t\t}\r\n\t};\r\n\r\n\taddRow( data, klass );\r\n\r\n\tif ( row._details ) {\r\n\t\trow._details.detach();\r\n\t}\r\n\r\n\trow._details = $(rows);\r\n\r\n\t// If the children were already shown, that state should be retained\r\n\tif ( row._detailsShow ) {\r\n\t\trow._details.insertAfter( row.nTr );\r\n\t}\r\n};\r\n\r\n\r\n// Make state saving of child row details async to allow them to be batch processed\r\nvar __details_state = DataTable.util.throttle(\r\n\tfunction (ctx) {\r\n\t\t_fnSaveState( ctx[0] )\r\n\t},\r\n\t500\r\n);\r\n\r\n\r\nvar __details_remove = function ( api, idx )\r\n{\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length ) {\r\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\r\n\r\n\t\tif ( row && row._details ) {\r\n\t\t\trow._details.remove();\r\n\r\n\t\t\trow._detailsShow = undefined;\r\n\t\t\trow._details = undefined;\r\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_display = function ( api, show ) {\r\n\tvar ctx = api.context;\r\n\r\n\tif ( ctx.length && api.length ) {\r\n\t\tvar row = ctx[0].aoData[ api[0] ];\r\n\r\n\t\tif ( row._details ) {\r\n\t\t\trow._detailsShow = show;\r\n\r\n\t\t\tif ( show ) {\r\n\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trow._details.detach();\r\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\r\n\t\t\t}\r\n\r\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\r\n\r\n\t\t\t__details_events( ctx[0] );\r\n\t\t\t__details_state( ctx );\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nvar __details_events = function ( settings )\r\n{\r\n\tvar api = new _Api( settings );\r\n\tvar namespace = '.dt.DT_details';\r\n\tvar drawEvent = 'draw'+namespace;\r\n\tvar colvisEvent = 'column-sizing'+namespace;\r\n\tvar destroyEvent = 'destroy'+namespace;\r\n\tvar data = settings.aoData;\r\n\r\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\r\n\r\n\tif ( _pluck( data, '_details' ).length > 0 ) {\r\n\t\t// On each draw, insert the required elements into the document\r\n\t\tapi.on( drawEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\r\n\t\t\t\t// Internal data grab\r\n\t\t\t\tvar row = data[ idx ];\r\n\r\n\t\t\t\tif ( row._detailsShow ) {\r\n\t\t\t\t\trow._details.insertAfter( row.nTr );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\t// Column visibility change - update the colspan\r\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the colspan for the details rows (note, only if it already has\r\n\t\t\t// a colspan)\r\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = data[i];\r\n\r\n\t\t\t\tif ( row._details ) {\r\n\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Table destroyed - nuke any child rows\r\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\r\n\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\t\tif ( data[i]._details ) {\r\n\t\t\t\t\t__details_remove( api, i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n// Strings for the method names to help minification\r\nvar _emp = '';\r\nvar _child_obj = _emp+'row().child';\r\nvar _child_mth = _child_obj+'()';\r\n\r\n// data can be:\r\n//  tr\r\n//  string\r\n//  jQuery or array of any of the above\r\n_api_register( _child_mth, function ( data, klass ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length && this.length ?\r\n\t\t\tctx[0].aoData[ this[0] ]._details :\r\n\t\t\tundefined;\r\n\t}\r\n\telse if ( data === true ) {\r\n\t\t// show\r\n\t\tthis.child.show();\r\n\t}\r\n\telse if ( data === false ) {\r\n\t\t// remove\r\n\t\t__details_remove( this );\r\n\t}\r\n\telse if ( ctx.length && this.length ) {\r\n\t\t// set\r\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\r\n\t}\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.show()',\r\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\r\n], function ( show ) {   // it returns an object and this method is not executed)\r\n\t__details_display( this, true );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.hide()',\r\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\r\n], function () {         // it returns an object and this method is not executed)\r\n\t__details_display( this, false );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( [\r\n\t_child_obj+'.remove()',\r\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\r\n], function () {           // it returns an object and this method is not executed)\r\n\t__details_remove( this );\r\n\treturn this;\r\n} );\r\n\r\n\r\n_api_register( _child_obj+'.isShown()', function () {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( ctx.length && this.length ) {\r\n\t\t// _detailsShown as false or undefined will fall through to return false\r\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\r\n\t}\r\n\treturn false;\r\n} );\r\n\r\n\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Columns\r\n *\r\n * {integer}           - column index (>=0 count from left, <0 count from right)\r\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\r\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\r\n * \"{string}:name\"     - column name\r\n * \"{string}\"          - jQuery selector on column header nodes\r\n *\r\n */\r\n\r\n// can be an array of these items, comma separated list, or an array of comma\r\n// separated lists\r\n\r\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\r\n\r\n\r\n// r1 and r2 are redundant - but it means that the parameters match for the\r\n// iterator callback in columns().data()\r\nvar __columnData = function ( settings, column, r1, r2, rows ) {\r\n\tvar a = [];\r\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\r\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\r\n\t}\r\n\treturn a;\r\n};\r\n\r\n\r\nvar __column_selector = function ( settings, selector, opts )\r\n{\r\n\tvar\r\n\t\tcolumns = settings.aoColumns,\r\n\t\tnames = _pluck( columns, 'sName' ),\r\n\t\tnodes = _pluck( columns, 'nTh' );\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar selInt = _intVal( s );\r\n\r\n\t\t// Selector - all\r\n\t\tif ( s === '' ) {\r\n\t\t\treturn _range( columns.length );\r\n\t\t}\r\n\r\n\t\t// Selector - index\r\n\t\tif ( selInt !== null ) {\r\n\t\t\treturn [ selInt >= 0 ?\r\n\t\t\t\tselInt : // Count from left\r\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// Selector = function\r\n\t\tif ( typeof s === 'function' ) {\r\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\r\n\r\n\t\t\treturn $.map( columns, function (col, idx) {\r\n\t\t\t\treturn s(\r\n\t\t\t\t\t\tidx,\r\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\r\n\t\t\t\t\t\tnodes[ idx ]\r\n\t\t\t\t\t) ? idx : null;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// jQuery or string selector\r\n\t\tvar match = typeof s === 'string' ?\r\n\t\t\ts.match( __re_column_selector ) :\r\n\t\t\t'';\r\n\r\n\t\tif ( match ) {\r\n\t\t\tswitch( match[2] ) {\r\n\t\t\t\tcase 'visIdx':\r\n\t\t\t\tcase 'visible':\r\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\r\n\t\t\t\t\t// Visible index given, convert to column index\r\n\t\t\t\t\tif ( idx < 0 ) {\r\n\t\t\t\t\t\t// Counting from the right\r\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\r\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Counting from the left\r\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\r\n\r\n\t\t\t\tcase 'name':\r\n\t\t\t\t\t// match by name. `names` is column index complete and in order\r\n\t\t\t\t\treturn $.map( names, function (name, i) {\r\n\t\t\t\t\t\treturn name === match[1] ? i : null;\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cell in the table body\r\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\r\n\t\t\treturn [ s._DT_CellIndex.column ];\r\n\t\t}\r\n\r\n\t\t// jQuery selector on the TH elements for the columns\r\n\t\tvar jqResult = $( nodes )\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function () {\r\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\r\n\t\t// a child or such an element\r\n\t\tvar host = $(s).closest('*[data-dt-column]');\r\n\t\treturn host.length ?\r\n\t\t\t[ host.data('dt-column') ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'column', selector, run, settings, opts );\r\n};\r\n\r\n\r\nvar __setColumnVis = function ( settings, column, vis ) {\r\n\tvar\r\n\t\tcols = settings.aoColumns,\r\n\t\tcol  = cols[ column ],\r\n\t\tdata = settings.aoData,\r\n\t\trow, cells, i, ien, tr;\r\n\r\n\t// Get\r\n\tif ( vis === undefined ) {\r\n\t\treturn col.bVisible;\r\n\t}\r\n\r\n\t// Set\r\n\t// No change\r\n\tif ( col.bVisible === vis ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( vis ) {\r\n\t\t// Insert column\r\n\t\t// Need to decide if we should use appendChild or insertBefore\r\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\r\n\r\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\r\n\t\t\ttr = data[i].nTr;\r\n\t\t\tcells = data[i].anCells;\r\n\r\n\t\t\tif ( tr ) {\r\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\r\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\t// Remove column\r\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\r\n\t}\r\n\r\n\t// Common actions\r\n\tcol.bVisible = vis;\r\n};\r\n\r\n\r\n_api_register( 'columns()', function ( selector, opts ) {\r\n\t// argument shifting\r\n\tif ( selector === undefined ) {\r\n\t\tselector = '';\r\n\t}\r\n\telse if ( $.isPlainObject( selector ) ) {\r\n\t\topts = selector;\r\n\t\tselector = '';\r\n\t}\r\n\r\n\topts = _selector_opts( opts );\r\n\r\n\tvar inst = this.iterator( 'table', function ( settings ) {\r\n\t\treturn __column_selector( settings, selector, opts );\r\n\t}, 1 );\r\n\r\n\t// Want argument shifting here and in _row_selector?\r\n\tinst.selector.cols = selector;\r\n\tinst.selector.opts = opts;\r\n\r\n\treturn inst;\r\n} );\r\n\r\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].nTh;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].nTf;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\r\n\treturn this.iterator( 'column-rows', __columnData, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn settings.aoColumns[column].mData;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows,\r\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\r\n\t\t);\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\r\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\r\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\r\n\tvar that = this;\r\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\r\n\t\tif ( vis === undefined ) {\r\n\t\t\treturn settings.aoColumns[ column ].bVisible;\r\n\t\t} // else\r\n\t\t__setColumnVis( settings, column, vis );\r\n\t} );\r\n\r\n\t// Group the column visibility changes\r\n\tif ( vis !== undefined ) {\r\n\t\tthis.iterator( 'table', function ( settings ) {\r\n\t\t\t// Redraw the header after changes\r\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\r\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\r\n\t\r\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\r\n\t\t\t// listeners to do this - only need to update the empty table item here\r\n\t\t\tif ( ! settings.aiDisplay.length ) {\r\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\r\n\t\t\t}\r\n\t\r\n\t\t\t_fnSaveState( settings );\r\n\r\n\t\t\t// Second loop once the first is done for events\r\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\r\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\r\n\t\t\t} );\r\n\r\n\t\t\tif ( calc === undefined || calc ) {\r\n\t\t\t\tthat.columns.adjust();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn ret;\r\n} );\r\n\r\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\r\n\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\treturn type === 'visible' ?\r\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\r\n\t\t\tcolumn;\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'columns.adjust()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnAdjustColumnSizing( settings );\r\n\t}, 1 );\r\n} );\r\n\r\n_api_register( 'column.index()', function ( type, idx ) {\r\n\tif ( this.context.length !== 0 ) {\r\n\t\tvar ctx = this.context[0];\r\n\r\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\r\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\r\n\t\t}\r\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\r\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n_api_register( 'column()', function ( selector, opts ) {\r\n\treturn _selector_first( this.columns( selector, opts ) );\r\n} );\r\n\r\nvar __cell_selector = function ( settings, selector, opts )\r\n{\r\n\tvar data = settings.aoData;\r\n\tvar rows = _selector_row_indexes( settings, opts );\r\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\r\n\tvar allCells = $(_flatten( [], cells ));\r\n\tvar row;\r\n\tvar columns = settings.aoColumns.length;\r\n\tvar a, i, ien, j, o, host;\r\n\r\n\tvar run = function ( s ) {\r\n\t\tvar fnSelector = typeof s === 'function';\r\n\r\n\t\tif ( s === null || s === undefined || fnSelector ) {\r\n\t\t\t// All cells and function selectors\r\n\t\t\ta = [];\r\n\r\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\r\n\t\t\t\trow = rows[i];\r\n\r\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\r\n\t\t\t\t\to = {\r\n\t\t\t\t\t\trow: row,\r\n\t\t\t\t\t\tcolumn: j\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( fnSelector ) {\r\n\t\t\t\t\t\t// Selector - function\r\n\t\t\t\t\t\thost = data[ row ];\r\n\r\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\r\n\t\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Selector - all\r\n\t\t\t\t\t\ta.push( o );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\t\r\n\t\t// Selector - index\r\n\t\tif ( $.isPlainObject( s ) ) {\r\n\t\t\t// Valid cell index and its in the array of selectable rows\r\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\r\n\t\t\t\t[s] :\r\n\t\t\t\t[];\r\n\t\t}\r\n\r\n\t\t// Selector - jQuery filtered cells\r\n\t\tvar jqResult = allCells\r\n\t\t\t.filter( s )\r\n\t\t\t.map( function (i, el) {\r\n\t\t\t\treturn { // use a new object, in case someone changes the values\r\n\t\t\t\t\trow:    el._DT_CellIndex.row,\r\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\r\n \t\t\t\t};\r\n\t\t\t} )\r\n\t\t\t.toArray();\r\n\r\n\t\tif ( jqResult.length || ! s.nodeName ) {\r\n\t\t\treturn jqResult;\r\n\t\t}\r\n\r\n\t\t// Otherwise the selector is a node, and there is one last option - the\r\n\t\t// element might be a child of an element which has dt-row and dt-column\r\n\t\t// data attributes\r\n\t\thost = $(s).closest('*[data-dt-row]');\r\n\t\treturn host.length ?\r\n\t\t\t[ {\r\n\t\t\t\trow: host.data('dt-row'),\r\n\t\t\t\tcolumn: host.data('dt-column')\r\n\t\t\t} ] :\r\n\t\t\t[];\r\n\t};\r\n\r\n\treturn _selector_run( 'cell', selector, run, settings, opts );\r\n};\r\n\r\n\r\n\r\n\r\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\r\n\t// Argument shifting\r\n\tif ( $.isPlainObject( rowSelector ) ) {\r\n\t\t// Indexes\r\n\t\tif ( rowSelector.row === undefined ) {\r\n\t\t\t// Selector options in first parameter\r\n\t\t\topts = rowSelector;\r\n\t\t\trowSelector = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Cell index objects in first parameter\r\n\t\t\topts = columnSelector;\r\n\t\t\tcolumnSelector = null;\r\n\t\t}\r\n\t}\r\n\tif ( $.isPlainObject( columnSelector ) ) {\r\n\t\topts = columnSelector;\r\n\t\tcolumnSelector = null;\r\n\t}\r\n\r\n\t// Cell selector\r\n\tif ( columnSelector === null || columnSelector === undefined ) {\r\n\t\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\r\n\t\t} );\r\n\t}\r\n\r\n\t// The default built in options need to apply to row and columns\r\n\tvar internalOpts = opts ? {\r\n\t\tpage: opts.page,\r\n\t\torder: opts.order,\r\n\t\tsearch: opts.search\r\n\t} : {};\r\n\r\n\t// Row + column selector\r\n\tvar columns = this.columns( columnSelector, internalOpts );\r\n\tvar rows = this.rows( rowSelector, internalOpts );\r\n\tvar i, ien, j, jen;\r\n\r\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\r\n\t\tvar a = [];\r\n\r\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\r\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\r\n\t\t\t\ta.push( {\r\n\t\t\t\t\trow:    rows[idx][i],\r\n\t\t\t\t\tcolumn: columns[idx][j]\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t}, 1 );\r\n\r\n\t// There is currently only one extension which uses a cell selector extension\r\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\r\n\t// an extension specific check at the moment\r\n\tvar cells = opts && opts.selected ?\r\n\t\tthis.cells( cellsNoOpts, opts ) :\r\n\t\tcellsNoOpts;\r\n\r\n\t$.extend( cells.selector, {\r\n\t\tcols: columnSelector,\r\n\t\trows: rowSelector,\r\n\t\topts: opts\r\n\t} );\r\n\r\n\treturn cells;\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\tvar data = settings.aoData[ row ];\r\n\r\n\t\treturn data && data.anCells ?\r\n\t\t\tdata.anCells[ column ] :\r\n\t\t\tundefined;\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_register( 'cells().data()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\r\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\r\n\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn settings.aoData[ row ][ type ][ column ];\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn _fnGetCellData( settings, row, column, type );\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\treturn {\r\n\t\t\trow: row,\r\n\t\t\tcolumn: column,\r\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\r\n\t\t};\r\n\t}, 1 );\r\n} );\r\n\r\n\r\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\r\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\r\n\t\t_fnInvalidate( settings, row, src, column );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\r\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\r\n} );\r\n\r\n\r\n_api_register( 'cell().data()', function ( data ) {\r\n\tvar ctx = this.context;\r\n\tvar cell = this[0];\r\n\r\n\tif ( data === undefined ) {\r\n\t\t// Get\r\n\t\treturn ctx.length && cell.length ?\r\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// Set\r\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\r\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\r\n\r\n\treturn this;\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Get current ordering (sorting) that has been applied to the table.\r\n *\r\n * @returns {array} 2D array containing the sorting information for the first\r\n *   table in the current context. Each element in the parent array represents\r\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\r\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\r\n *   the column index that the sorting condition applies to, the second is the\r\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\r\n *   index of the sorting order from the `column.sorting` initialisation array.\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {integer} order Column index to sort upon.\r\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 1D array of sorting information to be applied.\r\n * @param {array} [...] Optional additional sorting conditions\r\n * @returns {DataTables.Api} this\r\n *//**\r\n * Set the ordering for the table.\r\n *\r\n * @param {array} order 2D array of sorting information to be applied.\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order()', function ( order, dir ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( order === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].aaSorting :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\tif ( typeof order === 'number' ) {\r\n\t\t// Simple column / direction passed in\r\n\t\torder = [ [ order, dir ] ];\r\n\t}\r\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\r\n\t\t// Arguments passed in (list of 1D arrays)\r\n\t\torder = Array.prototype.slice.call( arguments );\r\n\t}\r\n\t// otherwise a 2D array was passed in\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSorting = order.slice();\r\n\t} );\r\n} );\r\n\r\n\r\n/**\r\n * Attach a sort listener to an element for a given column\r\n *\r\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\r\n *   listener to. This can take the form of a single DOM node, a jQuery\r\n *   collection of nodes or a jQuery selector which will identify the node(s).\r\n * @param {integer} column the column that a click on this node will sort on\r\n * @param {function} [callback] callback function when sort is run\r\n * @returns {DataTables.Api} this\r\n */\r\n_api_register( 'order.listener()', function ( node, column, callback ) {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSortAttachListener( settings, node, column, callback );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'order.fixed()', function ( set ) {\r\n\tif ( ! set ) {\r\n\t\tvar ctx = this.context;\r\n\t\tvar fixed = ctx.length ?\r\n\t\t\tctx[0].aaSortingFixed :\r\n\t\t\tundefined;\r\n\r\n\t\treturn Array.isArray( fixed ) ?\r\n\t\t\t{ pre: fixed } :\r\n\t\t\tfixed;\r\n\t}\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\r\n\t} );\r\n} );\r\n\r\n\r\n// Order by the selected column(s)\r\n_api_register( [\r\n\t'columns().order()',\r\n\t'column().order()'\r\n], function ( dir ) {\r\n\tvar that = this;\r\n\r\n\treturn this.iterator( 'table', function ( settings, i ) {\r\n\t\tvar sort = [];\r\n\r\n\t\t$.each( that[i], function (j, col) {\r\n\t\t\tsort.push( [ col, dir ] );\r\n\t\t} );\r\n\r\n\t\tsettings.aaSorting = sort;\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\r\n\tvar ctx = this.context;\r\n\r\n\tif ( input === undefined ) {\r\n\t\t// get\r\n\t\treturn ctx.length !== 0 ?\r\n\t\t\tctx[0].oPreviousSearch.sSearch :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t// set\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\r\n\t\t\t\"sSearch\": input+\"\",\r\n\t\t\t\"bRegex\":  regex === null ? false : regex,\r\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\r\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n\t\t} ), 1 );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_registerPlural(\r\n\t'columns().search()',\r\n\t'column().search()',\r\n\tfunction ( input, regex, smart, caseInsen ) {\r\n\t\treturn this.iterator( 'column', function ( settings, column ) {\r\n\t\t\tvar preSearch = settings.aoPreSearchCols;\r\n\r\n\t\t\tif ( input === undefined ) {\r\n\t\t\t\t// get\r\n\t\t\t\treturn preSearch[ column ].sSearch;\r\n\t\t\t}\r\n\r\n\t\t\t// set\r\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t$.extend( preSearch[ column ], {\r\n\t\t\t\t\"sSearch\": input+\"\",\r\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\r\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\r\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\r\n\t\t\t} );\r\n\r\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\r\n\t\t} );\r\n\t}\r\n);\r\n\r\n/*\r\n * State API methods\r\n */\r\n\r\n_api_register( 'state()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oSavedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t// Save an empty object\r\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'state.loaded()', function () {\r\n\treturn this.context.length ?\r\n\t\tthis.context[0].oLoadedState :\r\n\t\tnull;\r\n} );\r\n\r\n\r\n_api_register( 'state.save()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnSaveState( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n\r\n/**\r\n * Set the jQuery or window object to be used by DataTables\r\n *\r\n * @param {*} module Library / container object\r\n * @param {string} type Library or container type `lib` or `win`.\r\n */\r\nDataTable.use = function (module, type) {\r\n\tif (type === 'lib' || module.fn) {\r\n\t\t$ = module;\r\n\t}\r\n\telse if (type == 'win' || module.document) {\r\n\t\twindow = module;\r\n\t\tdocument = module.document;\r\n\t}\r\n}\r\n\r\n/**\r\n * CommonJS factory function pass through. This will check if the arguments\r\n * given are a window object or a jQuery object. If so they are set\r\n * accordingly.\r\n * @param {*} root Window\r\n * @param {*} jq jQUery\r\n * @returns {boolean} Indicator\r\n */\r\nDataTable.factory = function (root, jq) {\r\n\tvar is = false;\r\n\r\n\t// Test if the first parameter is a window object\r\n\tif (root && root.document) {\r\n\t\twindow = root;\r\n\t\tdocument = root.document;\r\n\t}\r\n\r\n\t// Test if the second parameter is a jQuery object\r\n\tif (jq && jq.fn && jq.fn.jquery) {\r\n\t\t$ = jq;\r\n\t\tis = true;\r\n\t}\r\n\r\n\treturn is;\r\n}\r\n\r\n/**\r\n * Provide a common method for plug-ins to check the version of DataTables being\r\n * used, in order to ensure compatibility.\r\n *\r\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\r\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\r\n *  @returns {boolean} true if this version of DataTables is greater or equal to\r\n *    the required version, or false if this version of DataTales is not\r\n *    suitable\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\r\n */\r\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\r\n{\r\n\tvar aThis = DataTable.version.split('.');\r\n\tvar aThat = version.split('.');\r\n\tvar iThis, iThat;\r\n\r\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\r\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\r\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\r\n\r\n\t\t// Parts are the same, keep comparing\r\n\t\tif (iThis === iThat) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Parts are different, return immediately\r\n\t\treturn iThis > iThat;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/**\r\n * Check if a `<table>` node is a DataTable table already or not.\r\n *\r\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\r\n *      selector for the table to test. Note that if more than more than one\r\n *      table is passed on, only the first will be checked\r\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\r\n *      $('#example').dataTable();\r\n *    }\r\n */\r\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\r\n{\r\n\tvar t = $(table).get(0);\r\n\tvar is = false;\r\n\r\n\tif ( table instanceof DataTable.Api ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t$.each( DataTable.settings, function (i, o) {\r\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\r\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\r\n\r\n\t\tif ( o.nTable === t || head === t || foot === t ) {\r\n\t\t\tis = true;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn is;\r\n};\r\n\r\n\r\n/**\r\n * Get all DataTable tables that have been initialised - optionally you can\r\n * select to get only currently visible tables.\r\n *\r\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\r\n *    or visible tables only.\r\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\r\n *    DataTables\r\n *  @static\r\n *  @dtopt API-Static\r\n *\r\n *  @example\r\n *    $.each( $.fn.dataTable.tables(true), function () {\r\n *      $(table).DataTable().columns.adjust();\r\n *    } );\r\n */\r\nDataTable.tables = DataTable.fnTables = function ( visible )\r\n{\r\n\tvar api = false;\r\n\r\n\tif ( $.isPlainObject( visible ) ) {\r\n\t\tapi = visible.api;\r\n\t\tvisible = visible.visible;\r\n\t}\r\n\r\n\tvar a = $.map( DataTable.settings, function (o) {\r\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\r\n\t\t\treturn o.nTable;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn api ?\r\n\t\tnew _Api( a ) :\r\n\t\ta;\r\n};\r\n\r\n\r\n/**\r\n * Convert from camel case parameters to Hungarian notation. This is made public\r\n * for the extensions to provide the same ability as DataTables core to accept\r\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\r\n * parameters.\r\n *\r\n *  @param {object} src The model object which holds all parameters that can be\r\n *    mapped.\r\n *  @param {object} user The object to convert from camel case to Hungarian.\r\n *  @param {boolean} force When set to `true`, properties which already have a\r\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\r\n *    won't be.\r\n */\r\nDataTable.camelToHungarian = _fnCamelToHungarian;\r\n\r\n\r\n\r\n/**\r\n *\r\n */\r\n_api_register( '$()', function ( selector, opts ) {\r\n\tvar\r\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\r\n\t\tjqRows = $(rows);\r\n\r\n\treturn $( [].concat(\r\n\t\tjqRows.filter( selector ).toArray(),\r\n\t\tjqRows.find( selector ).toArray()\r\n\t) );\r\n} );\r\n\r\n\r\n// jQuery functions to operate on the tables\r\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\r\n\t_api_register( key+'()', function ( /* event, handler */ ) {\r\n\t\tvar args = Array.prototype.slice.call(arguments);\r\n\r\n\t\t// Add the `dt` namespace automatically if it isn't already present\r\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\r\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\r\n\t\t\t\te+'.dt' :\r\n\t\t\t\te;\r\n\t\t\t} ).join( ' ' );\r\n\r\n\t\tvar inst = $( this.tables().nodes() );\r\n\t\tinst[key].apply( inst, args );\r\n\t\treturn this;\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'clear()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\t_fnClearTable( settings );\r\n\t} );\r\n} );\r\n\r\n\r\n_api_register( 'settings()', function () {\r\n\treturn new _Api( this.context, this.context );\r\n} );\r\n\r\n\r\n_api_register( 'init()', function () {\r\n\tvar ctx = this.context;\r\n\treturn ctx.length ? ctx[0].oInit : null;\r\n} );\r\n\r\n\r\n_api_register( 'data()', function () {\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\treturn _pluck( settings.aoData, '_aData' );\r\n\t} ).flatten();\r\n} );\r\n\r\n\r\n_api_register( 'destroy()', function ( remove ) {\r\n\tremove = remove || false;\r\n\r\n\treturn this.iterator( 'table', function ( settings ) {\r\n\t\tvar classes   = settings.oClasses;\r\n\t\tvar table     = settings.nTable;\r\n\t\tvar tbody     = settings.nTBody;\r\n\t\tvar thead     = settings.nTHead;\r\n\t\tvar tfoot     = settings.nTFoot;\r\n\t\tvar jqTable   = $(table);\r\n\t\tvar jqTbody   = $(tbody);\r\n\t\tvar jqWrapper = $(settings.nTableWrapper);\r\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\r\n\t\tvar i, ien;\r\n\r\n\t\t// Flag to note that the table is currently being destroyed - no action\r\n\t\t// should be taken\r\n\t\tsettings.bDestroying = true;\r\n\r\n\t\t// Fire off the destroy callbacks for plug-ins etc\r\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\r\n\r\n\t\t// If not being removed from the document, make all columns visible\r\n\t\tif ( ! remove ) {\r\n\t\t\tnew _Api( settings ).columns().visible( true );\r\n\t\t}\r\n\r\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\r\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\r\n\t\t// for removing them\r\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\r\n\t\t$(window).off('.DT-'+settings.sInstance);\r\n\r\n\t\t// When scrolling we had to break the table up - restore it\r\n\t\tif ( table != thead.parentNode ) {\r\n\t\t\tjqTable.children('thead').detach();\r\n\t\t\tjqTable.append( thead );\r\n\t\t}\r\n\r\n\t\tif ( tfoot && table != tfoot.parentNode ) {\r\n\t\t\tjqTable.children('tfoot').detach();\r\n\t\t\tjqTable.append( tfoot );\r\n\t\t}\r\n\r\n\t\tsettings.aaSorting = [];\r\n\t\tsettings.aaSortingFixed = [];\r\n\t\t_fnSortingClasses( settings );\r\n\r\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\r\n\r\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\r\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\r\n\t\t);\r\n\r\n\t\t// Add the TR elements back into the table in their original order\r\n\t\tjqTbody.children().detach();\r\n\t\tjqTbody.append( rows );\r\n\r\n\t\tvar orig = settings.nTableWrapper.parentNode;\r\n\r\n\t\t// Remove the DataTables generated nodes, events and classes\r\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\r\n\t\tjqTable[ removedMethod ]();\r\n\t\tjqWrapper[ removedMethod ]();\r\n\r\n\t\t// If we need to reattach the table to the document\r\n\t\tif ( ! remove && orig ) {\r\n\t\t\t// insertBefore acts like appendChild if !arg[1]\r\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\r\n\r\n\t\t\t// Restore the width of the original table - was read from the style property,\r\n\t\t\t// so we can restore directly to that\r\n\t\t\tjqTable\r\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\r\n\t\t\t\t.removeClass( classes.sTable );\r\n\r\n\t\t\t// If the were originally stripe classes - then we add them back here.\r\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\r\n\t\t\t// classes - but it's a good effort without getting carried away\r\n\t\t\tien = settings.asDestroyStripes.length;\r\n\r\n\t\t\tif ( ien ) {\r\n\t\t\t\tjqTbody.children().each( function (i) {\r\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Remove the settings object from the settings array */\r\n\t\tvar idx = $.inArray( settings, DataTable.settings );\r\n\t\tif ( idx !== -1 ) {\r\n\t\t\tDataTable.settings.splice( idx, 1 );\r\n\t\t}\r\n\t} );\r\n} );\r\n\r\n\r\n// Add the `every()` method for rows, columns and cells in a compact form\r\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\r\n\t_api_register( type+'s().every()', function ( fn ) {\r\n\t\tvar opts = this.selector.opts;\r\n\t\tvar api = this;\r\n\r\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\r\n\t\t\t// Rows and columns:\r\n\t\t\t//  arg1 - index\r\n\t\t\t//  arg2 - table counter\r\n\t\t\t//  arg3 - loop counter\r\n\t\t\t//  arg4 - undefined\r\n\t\t\t// Cells:\r\n\t\t\t//  arg1 - row index\r\n\t\t\t//  arg2 - column index\r\n\t\t\t//  arg3 - table counter\r\n\t\t\t//  arg4 - loop counter\r\n\t\t\tfn.call(\r\n\t\t\t\tapi[ type ](\r\n\t\t\t\t\targ1,\r\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\r\n\t\t\t\t\ttype==='cell' ? opts : undefined\r\n\t\t\t\t),\r\n\t\t\t\targ1, arg2, arg3, arg4\r\n\t\t\t);\r\n\t\t} );\r\n\t} );\r\n} );\r\n\r\n\r\n// i18n method for extensions to be able to use the language object from the\r\n// DataTable\r\n_api_register( 'i18n()', function ( token, def, plural ) {\r\n\tvar ctx = this.context[0];\r\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\r\n\r\n\tif ( resolved === undefined ) {\r\n\t\tresolved = def;\r\n\t}\r\n\r\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\r\n\t\tresolved = resolved[ plural ] !== undefined ?\r\n\t\t\tresolved[ plural ] :\r\n\t\t\tresolved._;\r\n\t}\r\n\r\n\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\r\n} );\r\n/**\r\n * Version string for plug-ins to check compatibility. Allowed format is\r\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\r\n * only for non-release builds. See http://semver.org/ for more information.\r\n *  @member\r\n *  @type string\r\n *  @default Version number\r\n */\r\nDataTable.version = \"1.13.4\";\r\n\r\n/**\r\n * Private data store, containing all of the settings objects that are\r\n * created for the tables on a given page.\r\n *\r\n * Note that the `DataTable.settings` object is aliased to\r\n * `jQuery.fn.dataTableExt` through which it may be accessed and\r\n * manipulated, or `jQuery.fn.dataTable.settings`.\r\n *  @member\r\n *  @type array\r\n *  @default []\r\n *  @private\r\n */\r\nDataTable.settings = [];\r\n\r\n/**\r\n * Object models container, for the various models that DataTables has\r\n * available to it. These models define the objects that are used to hold\r\n * the active state and configuration of the table.\r\n *  @namespace\r\n */\r\nDataTable.models = {};\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * search information for the global filter and individual column filters.\r\n *  @namespace\r\n */\r\nDataTable.models.oSearch = {\r\n\t/**\r\n\t * Flag to indicate if the filtering should be case insensitive or not\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t */\r\n\t\"bCaseInsensitive\": true,\r\n\r\n\t/**\r\n\t * Applied search term\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t */\r\n\t\"sSearch\": \"\",\r\n\r\n\t/**\r\n\t * Flag to indicate if the search term should be interpreted as a\r\n\t * regular expression (true) or not (false) and therefore and special\r\n\t * regex characters escaped.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bRegex\": false,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t */\r\n\t\"bSmart\": true,\r\n\r\n\t/**\r\n\t * Flag to indicate if DataTables should only trigger a search when\r\n\t * the return key is pressed.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"return\": false\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Template object for the way in which DataTables holds information about\r\n * each individual row. This is the object format used for the settings\r\n * aoData array.\r\n *  @namespace\r\n */\r\nDataTable.models.oRow = {\r\n\t/**\r\n\t * TR element for the row\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTr\": null,\r\n\r\n\t/**\r\n\t * Array of TD elements for each row. This is null until the row has been\r\n\t * created.\r\n\t *  @type array nodes\r\n\t *  @default []\r\n\t */\r\n\t\"anCells\": null,\r\n\r\n\t/**\r\n\t * Data object from the original data source for the row. This is either\r\n\t * an array if using the traditional form of DataTables, or an object if\r\n\t * using mData options. The exact type will depend on the passed in\r\n\t * data from the data source, or will be an array if using DOM a data\r\n\t * source.\r\n\t *  @type array|object\r\n\t *  @default []\r\n\t */\r\n\t\"_aData\": [],\r\n\r\n\t/**\r\n\t * Sorting data cache - this array is ostensibly the same length as the\r\n\t * number of columns (although each index is generated only as it is\r\n\t * needed), and holds the data that is used for sorting each column in the\r\n\t * row. We do this cache generation at the start of the sort in order that\r\n\t * the formatting of the sort data need be done only once for each cell\r\n\t * per sort. This array should not be read from or written to by anything\r\n\t * other than the master sorting methods.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_aSortData\": null,\r\n\r\n\t/**\r\n\t * Per cell filtering data cache. As per the sort data cache, used to\r\n\t * increase the performance of the filtering in DataTables\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_aFilterData\": null,\r\n\r\n\t/**\r\n\t * Filtering data cache. This is the same as the cell filtering cache, but\r\n\t * in this case a string rather than an array. This is easily computed with\r\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\r\n\t * needed on every search (memory traded for performance)\r\n\t *  @type array\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_sFilterRow\": null,\r\n\r\n\t/**\r\n\t * Cache of the class name that DataTables has applied to the row, so we\r\n\t * can quickly look at this variable rather than needing to do a DOM check\r\n\t * on className for the nTr property.\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *  @private\r\n\t */\r\n\t\"_sRowStripe\": \"\",\r\n\r\n\t/**\r\n\t * Denote if the original data source was from the DOM, or the data source\r\n\t * object. This is used for invalidating data, so DataTables can\r\n\t * automatically read data from the original source, unless uninstructed\r\n\t * otherwise.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"src\": null,\r\n\r\n\t/**\r\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\r\n\t * object, but want to know the index\r\n\t *  @type integer\r\n\t *  @default -1\r\n\t *  @private\r\n\t */\r\n\t\"idx\": -1\r\n};\r\n\r\n\r\n/**\r\n * Template object for the column information object in DataTables. This object\r\n * is held in the settings aoColumns array and contains all the information that\r\n * DataTables needs about each individual column.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults.column}\r\n * but this one is the internal data store for DataTables's cache of columns.\r\n * It should NOT be manipulated outside of DataTables. Any configuration should\r\n * be done through the initialisation options.\r\n *  @namespace\r\n */\r\nDataTable.models.oColumn = {\r\n\t/**\r\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\r\n\t * is faster to just hold it as a variable\r\n\t *  @type integer\r\n\t *  @default null\r\n\t */\r\n\t\"idx\": null,\r\n\r\n\t/**\r\n\t * A list of the columns that sorting should occur on when this column\r\n\t * is sorted. That this property is an array allows multi-column sorting\r\n\t * to be defined for a column (for example first name / last name columns\r\n\t * would benefit from this). The values are integers pointing to the\r\n\t * columns to be sorted on (typically it will be a single integer pointing\r\n\t * at itself, but that doesn't need to be the case).\r\n\t *  @type array\r\n\t */\r\n\t\"aDataSort\": null,\r\n\r\n\t/**\r\n\t * Define the sorting directions that are applied to the column, in sequence\r\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\r\n\t * as the sorting direction when the column if first sorted (clicked on).\r\n\t * Sort it again (click again) and it will move on to the next index.\r\n\t * Repeat until loop.\r\n\t *  @type array\r\n\t */\r\n\t\"asSorting\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is searchable, and thus should be included\r\n\t * in the filtering or not.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSearchable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is sortable or not.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSortable\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if the column is currently visible in the table or not\r\n\t *  @type boolean\r\n\t */\r\n\t\"bVisible\": null,\r\n\r\n\t/**\r\n\t * Store for manual type assignment using the `column.type` option. This\r\n\t * is held in store so we can manipulate the column's `sType` property.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *  @private\r\n\t */\r\n\t\"_sManualType\": null,\r\n\r\n\t/**\r\n\t * Flag to indicate if HTML5 data attributes should be used as the data\r\n\t * source for filtering or sorting. True is either are.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @private\r\n\t */\r\n\t\"_bAttrSrc\": false,\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t *  @type function\r\n\t *  @param {element} nTd The TD node that has been created\r\n\t *  @param {*} sData The Data for the cell\r\n\t *  @param {array|object} oData The data for the whole row\r\n\t *  @param {int} iRow The row index for the aoData data store\r\n\t *  @default null\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\t/**\r\n\t * Function to get data from a cell in a column. You should <b>never</b>\r\n\t * access data directly through _aData internally in DataTables - always use\r\n\t * the method attached to this property. It allows mData to function as\r\n\t * required. This function is automatically assigned by the column\r\n\t * initialisation method\r\n\t *  @type function\r\n\t *  @param {array|object} oData The data array/object for the array\r\n\t *    (i.e. aoData[]._aData)\r\n\t *  @param {string} sSpecific The specific data type you want to get -\r\n\t *    'display', 'type' 'filter' 'sort'\r\n\t *  @returns {*} The data for the cell from the given row's data\r\n\t *  @default null\r\n\t */\r\n\t\"fnGetData\": null,\r\n\r\n\t/**\r\n\t * Function to set data for a cell in the column. You should <b>never</b>\r\n\t * set the data directly to _aData internally in DataTables - always use\r\n\t * this method. It allows mData to function as required. This function\r\n\t * is automatically assigned by the column initialisation method\r\n\t *  @type function\r\n\t *  @param {array|object} oData The data array/object for the array\r\n\t *    (i.e. aoData[]._aData)\r\n\t *  @param {*} sValue Value to set\r\n\t *  @default null\r\n\t */\r\n\t\"fnSetData\": null,\r\n\r\n\t/**\r\n\t * Property to read the value for the cells in the column from the data\r\n\t * source array / object. If null, then the default content is used, if a\r\n\t * function is given then the return from the function is used.\r\n\t *  @type function|int|string|null\r\n\t *  @default null\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\t/**\r\n\t * Partner property to mData which is used (only when defined) to get\r\n\t * the data - i.e. it is basically the same as mData, but without the\r\n\t * 'set' option, and also the data fed to it is the result from mData.\r\n\t * This is the rendering method to match the data method of mData.\r\n\t *  @type function|int|string|null\r\n\t *  @default null\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\t/**\r\n\t * Unique header TH/TD element for this column - this is what the sorting\r\n\t * listener is attached to (if sorting is enabled.)\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTh\": null,\r\n\r\n\t/**\r\n\t * Unique footer TH/TD element for this column (if there is one). Not used\r\n\t * in DataTables as such, but can be used for plug-ins to reference the\r\n\t * footer for each column.\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTf\": null,\r\n\r\n\t/**\r\n\t * The class to apply to all TD elements in the table's TBODY for the column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sClass\": null,\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t *  @type string\r\n\t */\r\n\t\"sContentPadding\": null,\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because mData\r\n\t * is set to null, or because the data source itself is null).\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\t/**\r\n\t * Name for the column, allowing reference to the column by name as well as\r\n\t * by index (needs a lookup to work by name).\r\n\t *  @type string\r\n\t */\r\n\t\"sName\": null,\r\n\r\n\t/**\r\n\t * Custom sorting data type - defines which of the available plug-ins in\r\n\t * afnSortData the custom sorting will use - if any is defined.\r\n\t *  @type string\r\n\t *  @default std\r\n\t */\r\n\t\"sSortDataType\": 'std',\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sSortingClass\": null,\r\n\r\n\t/**\r\n\t * Class to be applied to the header element when sorting on this column -\r\n\t * when jQuery UI theming is used.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sSortingClassJUI\": null,\r\n\r\n\t/**\r\n\t * Title of the column - what is seen in the TH element (nTh).\r\n\t *  @type string\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\t/**\r\n\t * Column sorting and filtering type\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\t/**\r\n\t * Width of the column\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sWidth\": null,\r\n\r\n\t/**\r\n\t * Width of the column when it was first \"encountered\"\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sWidthOrig\": null\r\n};\r\n\r\n\r\n/*\r\n * Developer note: The properties of the object below are given in Hungarian\r\n * notation, that was used as the interface for DataTables prior to v1.10, however\r\n * from v1.10 onwards the primary interface is camel case. In order to avoid\r\n * breaking backwards compatibility utterly with this change, the Hungarian\r\n * version is still, internally the primary interface, but is is not documented\r\n * - hence the @name tags in each doc comment. This allows a Javascript function\r\n * to create a map from Hungarian notation to camel case (going the other direction\r\n * would require each property to be listed, which would add around 3K to the size\r\n * of DataTables, while this method is about a 0.5K hit).\r\n *\r\n * Ultimately this does pave the way for Hungarian notation to be dropped\r\n * completely, but that is a massive amount of work and will break current\r\n * installs (therefore is on-hold until v2).\r\n */\r\n\r\n/**\r\n * Initialisation options that can be given to DataTables at initialisation\r\n * time.\r\n *  @namespace\r\n */\r\nDataTable.defaults = {\r\n\t/**\r\n\t * An array of data to use for the table, passed in at initialisation which\r\n\t * will be used in preference to any data which is already in the DOM. This is\r\n\t * particularly useful for constructing tables purely in Javascript, for\r\n\t * example with a custom Ajax call.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.data\r\n\t *\r\n\t *  @example\r\n\t *    // Using a 2D array data source\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"data\": [\r\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\r\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\r\n\t *        ],\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"Engine\" },\r\n\t *          { \"title\": \"Browser\" },\r\n\t *          { \"title\": \"Platform\" },\r\n\t *          { \"title\": \"Version\" },\r\n\t *          { \"title\": \"Grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using an array of objects as a data source (`data`)\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"data\": [\r\n\t *          {\r\n\t *            \"engine\":   \"Trident\",\r\n\t *            \"browser\":  \"Internet Explorer 4.0\",\r\n\t *            \"platform\": \"Win 95+\",\r\n\t *            \"version\":  4,\r\n\t *            \"grade\":    \"X\"\r\n\t *          },\r\n\t *          {\r\n\t *            \"engine\":   \"Trident\",\r\n\t *            \"browser\":  \"Internet Explorer 5.0\",\r\n\t *            \"platform\": \"Win 95+\",\r\n\t *            \"version\":  5,\r\n\t *            \"grade\":    \"C\"\r\n\t *          }\r\n\t *        ],\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\r\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\r\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\r\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\r\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aaData\": null,\r\n\r\n\r\n\t/**\r\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\r\n\t * initialisation. You can define which column(s) the sort is performed\r\n\t * upon, and the sorting direction, with this variable. The `sorting` array\r\n\t * should contain an array for each column to be sorted initially containing\r\n\t * the column's index and a direction string ('asc' or 'desc').\r\n\t *  @type array\r\n\t *  @default [[0,'asc']]\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.order\r\n\t *\r\n\t *  @example\r\n\t *    // Sort by 3rd column first, and then 4th column\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"order\": [[2,'asc'], [3,'desc']]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *    // No initial sorting\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"order\": []\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aaSorting\": [[0,'asc']],\r\n\r\n\r\n\t/**\r\n\t * This parameter is basically identical to the `sorting` parameter, but\r\n\t * cannot be overridden by user interaction with the table. What this means\r\n\t * is that you could have a column (visible or hidden) which the sorting\r\n\t * will always be forced on first - any sorting after that (from the user)\r\n\t * will then be performed as required. This can be useful for grouping rows\r\n\t * together.\r\n\t *  @type array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.orderFixed\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderFixed\": [[0,'asc']]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\r\n\t/**\r\n\t * DataTables can be instructed to load data to display in the table from a\r\n\t * Ajax source. This option defines how that Ajax call is made and where to.\r\n\t *\r\n\t * The `ajax` property has three different modes of operation, depending on\r\n\t * how it is defined. These are:\r\n\t *\r\n\t * * `string` - Set the URL from where the data should be loaded from.\r\n\t * * `object` - Define properties for `jQuery.ajax`.\r\n\t * * `function` - Custom data get function\r\n\t *\r\n\t * `string`\r\n\t * --------\r\n\t *\r\n\t * As a string, the `ajax` property simply defines the URL from which\r\n\t * DataTables will load data.\r\n\t *\r\n\t * `object`\r\n\t * --------\r\n\t *\r\n\t * As an object, the parameters in the object are passed to\r\n\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\r\n\t * of the Ajax request. DataTables has a number of default parameters which\r\n\t * you can override using this option. Please refer to the jQuery\r\n\t * documentation for a full description of the options available, although\r\n\t * the following parameters provide additional options in DataTables or\r\n\t * require special consideration:\r\n\t *\r\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\r\n\t *   can also be used as a function to manipulate the data DataTables sends\r\n\t *   to the server. The function takes a single parameter, an object of\r\n\t *   parameters with the values that DataTables has readied for sending. An\r\n\t *   object may be returned which will be merged into the DataTables\r\n\t *   defaults, or you can add the items to the object that was passed in and\r\n\t *   not return anything from the function. This supersedes `fnServerParams`\r\n\t *   from DataTables 1.9-.\r\n\t *\r\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\r\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\r\n\t *   from an Ajax source or for server-side processing - this parameter\r\n\t *   allows that property to be changed. You can use Javascript dotted\r\n\t *   object notation to get a data source for multiple levels of nesting, or\r\n\t *   it my be used as a function. As a function it takes a single parameter,\r\n\t *   the JSON returned from the server, which can be manipulated as\r\n\t *   required, with the returned value being that used by DataTables as the\r\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\r\n\t *   DataTables 1.9-.\r\n\t *\r\n\t * * `success` - Should not be overridden it is used internally in\r\n\t *   DataTables. To manipulate / transform the data returned by the server\r\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\r\n\t *\r\n\t * `function`\r\n\t * ----------\r\n\t *\r\n\t * As a function, making the Ajax call is left up to yourself allowing\r\n\t * complete control of the Ajax request. Indeed, if desired, a method other\r\n\t * than Ajax could be used to obtain the required data, such as Web storage\r\n\t * or an AIR database.\r\n\t *\r\n\t * The function is given four parameters and no return is required. The\r\n\t * parameters are:\r\n\t *\r\n\t * 1. _object_ - Data to send to the server\r\n\t * 2. _function_ - Callback function that must be executed when the required\r\n\t *    data has been obtained. That data should be passed into the callback\r\n\t *    as the only parameter\r\n\t * 3. _object_ - DataTables settings object for the table\r\n\t *\r\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\r\n\t *\r\n\t *  @type string|object|function\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.ajax\r\n\t *  @since 1.10.0\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax.\r\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": \"data.json\"\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\r\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": \"tableData\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\r\n\t *   // from a plain array rather than an array in an object\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": \"\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Manipulate the data returned from the server - add a link to data\r\n\t *   // (note this can, should, be done using `render` for the column - this\r\n\t *   // is just a simple example of how the data can be manipulated).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"dataSrc\": function ( json ) {\r\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\r\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\r\n\t *         }\r\n\t *         return json;\r\n\t *       }\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Add data to the request\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"data\": function ( d ) {\r\n\t *         return {\r\n\t *           \"extra_search\": $('#extra').val()\r\n\t *         };\r\n\t *       }\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Send request as POST\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": {\r\n\t *       \"url\": \"data.json\",\r\n\t *       \"type\": \"POST\"\r\n\t *     }\r\n\t *   } );\r\n\t *\r\n\t * @example\r\n\t *   // Get the data from localStorage (could interface with a form for\r\n\t *   // adding, editing and removing rows).\r\n\t *   $('#example').dataTable( {\r\n\t *     \"ajax\": function (data, callback, settings) {\r\n\t *       callback(\r\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\r\n\t *       );\r\n\t *     }\r\n\t *   } );\r\n\t */\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to readily specify the entries in the length drop\r\n\t * down menu that DataTables shows when pagination is enabled. It can be\r\n\t * either a 1D array of options which will be used for both the displayed\r\n\t * option and the value, or a 2D array which will use the array in the first\r\n\t * position as the value, and the array in the second position as the\r\n\t * displayed options (useful for language strings such as 'All').\r\n\t *\r\n\t * Note that the `pageLength` property will be automatically set to the\r\n\t * first value given in this array, unless `pageLength` is also provided.\r\n\t *  @type array\r\n\t *  @default [ 10, 25, 50, 100 ]\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.lengthMenu\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\r\n\r\n\r\n\t/**\r\n\t * The `columns` option in the initialisation parameter allows you to define\r\n\t * details about the way individual columns behave. For a full list of\r\n\t * column options that can be set, please see\r\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\r\n\t * define your columns, you must have an entry in the array for every single\r\n\t * column that you have in your table (these can be null if you don't which\r\n\t * to specify any options).\r\n\t *  @member\r\n\t *\r\n\t *  @name DataTable.defaults.column\r\n\t */\r\n\t\"aoColumns\": null,\r\n\r\n\t/**\r\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\r\n\t * column, multiple columns, or all columns, using the `targets` property of\r\n\t * each object in the array. This allows great flexibility when creating\r\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\r\n\t * columns you specifically want. `columnDefs` may use any of the column\r\n\t * options available: {@link DataTable.defaults.column}, but it _must_\r\n\t * have `targets` defined in each object in the array. Values in the `targets`\r\n\t * array may be:\r\n\t *   <ul>\r\n\t *     <li>a string - class name will be matched on the TH for the column</li>\r\n\t *     <li>0 or a positive integer - column index counting from the left</li>\r\n\t *     <li>a negative integer - column index counting from the right</li>\r\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\r\n\t *   </ul>\r\n\t *  @member\r\n\t *\r\n\t *  @name DataTable.defaults.columnDefs\r\n\t */\r\n\t\"aoColumnDefs\": null,\r\n\r\n\r\n\t/**\r\n\t * Basically the same as `search`, this parameter defines the individual column\r\n\t * filtering state at initialisation time. The array must be of the same size\r\n\t * as the number of columns, and each element be an object with the parameters\r\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\r\n\t * accepted and the default will be used.\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.searchCols\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searchCols\": [\r\n\t *          null,\r\n\t *          { \"search\": \"My filter\" },\r\n\t *          null,\r\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"aoSearchCols\": [],\r\n\r\n\r\n\t/**\r\n\t * An array of CSS classes that should be applied to displayed rows. This\r\n\t * array may be of any length, and DataTables will apply each class\r\n\t * sequentially, looping when required.\r\n\t *  @type array\r\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\r\n\t *    options</i>\r\n\t *\r\n\t *  @dtopt Option\r\n\t *  @name DataTable.defaults.stripeClasses\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"asStripeClasses\": null,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable automatic column width calculation. This can be disabled\r\n\t * as an optimisation (it takes some time to calculate the widths) if the\r\n\t * tables widths are passed in using `columns`.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.autoWidth\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"autoWidth\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bAutoWidth\": true,\r\n\r\n\r\n\t/**\r\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\r\n\t * are using an Ajax or JS data source for the table. This option, when set to\r\n\t * true, will cause DataTables to defer the creation of the table elements for\r\n\t * each row until they are needed for a draw - saving a significant amount of\r\n\t * time.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.deferRender\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajax\": \"sources/arrays.txt\",\r\n\t *        \"deferRender\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bDeferRender\": false,\r\n\r\n\r\n\t/**\r\n\t * Replace a DataTable which matches the given selector and replace it with\r\n\t * one which has the properties of the new initialisation object passed. If no\r\n\t * table matches the selector, then the new DataTable will be constructed as\r\n\t * per normal.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.destroy\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"srollY\": \"200px\",\r\n\t *        \"paginate\": false\r\n\t *      } );\r\n\t *\r\n\t *      // Some time later....\r\n\t *      $('#example').dataTable( {\r\n\t *        \"filter\": false,\r\n\t *        \"destroy\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bDestroy\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\r\n\t * that it allows the end user to input multiple words (space separated) and\r\n\t * will match a row containing those words, even if not in the order that was\r\n\t * specified (this allow matching across multiple columns). Note that if you\r\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\r\n\t * default filtering input box and retain filtering abilities, please use\r\n\t * {@link DataTable.defaults.dom}.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.searching\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searching\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bFilter\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the table information display. This shows information\r\n\t * about the data that is currently visible on the page, including information\r\n\t * about filtered data if that action is being performed.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.info\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"info\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bInfo\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows the end user to select the size of a formatted page from a select\r\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.lengthChange\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"lengthChange\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bLengthChange\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable pagination.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.paging\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"paging\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bPaginate\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of a 'processing' indicator when the table is\r\n\t * being processed (e.g. a sort). This is particularly useful for tables with\r\n\t * large amounts of data where it can take a noticeable amount of time to sort\r\n\t * the entries.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.processing\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"processing\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bProcessing\": false,\r\n\r\n\r\n\t/**\r\n\t * Retrieve the DataTables object for the given selector. Note that if the\r\n\t * table has already been initialised, this parameter will cause DataTables\r\n\t * to simply return the object that has already been set up - it will not take\r\n\t * account of any changes you might have made to the initialisation object\r\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\r\n\t * that you understand this). `destroy` can be used to reinitialise a table if\r\n\t * you need.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.retrieve\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      initTable();\r\n\t *      tableActions();\r\n\t *    } );\r\n\t *\r\n\t *    function initTable ()\r\n\t *    {\r\n\t *      return $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200px\",\r\n\t *        \"paginate\": false,\r\n\t *        \"retrieve\": true\r\n\t *      } );\r\n\t *    }\r\n\t *\r\n\t *    function tableActions ()\r\n\t *    {\r\n\t *      var table = initTable();\r\n\t *      // perform API operations with oTable\r\n\t *    }\r\n\t */\r\n\t\"bRetrieve\": false,\r\n\r\n\r\n\t/**\r\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\r\n\t * the table's viewport to the given height at all times (useful for layout).\r\n\t * However, this can look odd when filtering data down to a small data set,\r\n\t * and the footer is left \"floating\" further down. This parameter (when\r\n\t * enabled) will cause DataTables to collapse the table's viewport down when\r\n\t * the result set will fit within the given Y height.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.scrollCollapse\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200\",\r\n\t *        \"scrollCollapse\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bScrollCollapse\": false,\r\n\r\n\r\n\t/**\r\n\t * Configure DataTables to use server-side processing. Note that the\r\n\t * `ajax` parameter must also be given in order to give DataTables a\r\n\t * source to obtain the required data for each draw.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverSide\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"xhr.php\"\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bServerSide\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\r\n\t * disabled by the `sortable` option for each column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.ordering\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ordering\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSort\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or display DataTables' ability to sort multiple columns at the\r\n\t * same time (activated by shift-click by the user).\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.orderMulti\r\n\t *\r\n\t *  @example\r\n\t *    // Disable multiple column sorting ability\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderMulti\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortMulti\": true,\r\n\r\n\r\n\t/**\r\n\t * Allows control over whether DataTables should use the top (true) unique\r\n\t * cell that is found for a single column, or the bottom (false - default).\r\n\t * This is useful when using complex headers.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.orderCellsTop\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderCellsTop\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortCellsTop\": false,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\r\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\r\n\t * presented as a feature switch as it can increase processing time (while\r\n\t * classes are removed and added) so for large data sets you might want to\r\n\t * turn this off.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.orderClasses\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"orderClasses\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortClasses\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\r\n\t * used to save table display information such as pagination information,\r\n\t * display length, filtering and sorting. As such when the end user reloads\r\n\t * the page the display display will match what thy had previously set up.\r\n\t *\r\n\t * Due to the use of `localStorage` the default state saving is not supported\r\n\t * in IE6 or 7. If state saving is required in those browsers, use\r\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.stateSave\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function () {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"bStateSave\": false,\r\n\r\n\r\n\t/**\r\n\t * This function is called when a TR element is created (and all TD child\r\n\t * elements have been inserted), or registered if using a DOM source, allowing\r\n\t * manipulation of the TR element (adding classes etc).\r\n\t *  @type function\r\n\t *  @param {node} row \"TR\" element for the current row\r\n\t *  @param {array} data Raw data array for this row\r\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.createdRow\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"createdRow\": function( row, data, dataIndex ) {\r\n\t *          // Bold the grade for all 'A' grade browsers\r\n\t *          if ( data[4] == \"A\" )\r\n\t *          {\r\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnCreatedRow\": null,\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify any aspect you want about the created DOM.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.drawCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"drawCallback\": function( settings ) {\r\n\t *          alert( 'DataTables has redrawn the table' );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Identical to fnHeaderCallback() but for the table footer this function\r\n\t * allows you to modify the table footer on every 'draw' event.\r\n\t *  @type function\r\n\t *  @param {node} foot \"TR\" element for the footer\r\n\t *  @param {array} data Full table data (as derived from the original HTML)\r\n\t *  @param {int} start Index for the current display starting point in the\r\n\t *    display array\r\n\t *  @param {int} end Index for the current display ending point in the\r\n\t *    display array\r\n\t *  @param {array int} display Index array to translate the visual position\r\n\t *    to the full data array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.footerCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\r\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnFooterCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * When rendering large numbers in the information element for the table\r\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\r\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\r\n\t * rendered as \"1,000,000\") to help readability for the end user. This\r\n\t * function will override the default method DataTables uses.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {int} toFormat number to be formatted\r\n\t *  @returns {string} formatted string for DataTables to show the number\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.formatNumber\r\n\t *\r\n\t *  @example\r\n\t *    // Format a number using a single quote for the separator (note that\r\n\t *    // this can also be done with the language.thousands option)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"formatNumber\": function ( toFormat ) {\r\n\t *          return toFormat.toString().replace(\r\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\r\n\t *          );\r\n\t *        };\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnFormatNumber\": function ( toFormat ) {\r\n\t\treturn toFormat.toString().replace(\r\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\r\n\t\t\tthis.oLanguage.sThousands\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This function is called on every 'draw' event, and allows you to\r\n\t * dynamically modify the header row. This can be used to calculate and\r\n\t * display useful information about the table.\r\n\t *  @type function\r\n\t *  @param {node} head \"TR\" element for the header\r\n\t *  @param {array} data Full table data (as derived from the original HTML)\r\n\t *  @param {int} start Index for the current display starting point in the\r\n\t *    display array\r\n\t *  @param {int} end Index for the current display ending point in the\r\n\t *    display array\r\n\t *  @param {array int} display Index array to translate the visual position\r\n\t *    to the full data array\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.headerCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\r\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnHeaderCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * The information element can be used to convey information about the current\r\n\t * state of the table. Although the internationalisation options presented by\r\n\t * DataTables are quite capable of dealing with most customisations, there may\r\n\t * be times where you wish to customise the string further. This callback\r\n\t * allows you to do exactly that.\r\n\t *  @type function\r\n\t *  @param {object} oSettings DataTables settings object\r\n\t *  @param {int} start Starting position in data for the draw\r\n\t *  @param {int} end End position in data for the draw\r\n\t *  @param {int} max Total number of rows in the table (regardless of\r\n\t *    filtering)\r\n\t *  @param {int} total Total number of rows in the data set, after filtering\r\n\t *  @param {string} pre The string that DataTables has formatted using it's\r\n\t *    own rules\r\n\t *  @returns {string} The string to be displayed in the information element.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.infoCallback\r\n\t *\r\n\t *  @example\r\n\t *    $('#example').dataTable( {\r\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\r\n\t *        return start +\" to \"+ end;\r\n\t *      }\r\n\t *    } );\r\n\t */\r\n\t\"fnInfoCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * Called when the table has been initialised. Normally DataTables will\r\n\t * initialise sequentially and there will be no need for this function,\r\n\t * however, this does not hold true when using external language information\r\n\t * since that is obtained using an async XHR call.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} json The JSON object request from the server - only\r\n\t *    present if client-side Ajax sourced data is used\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.initComplete\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"initComplete\": function(settings, json) {\r\n\t *          alert( 'DataTables has finished its initialisation.' );\r\n\t *        }\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"fnInitComplete\": null,\r\n\r\n\r\n\t/**\r\n\t * Called at the very start of each table draw and can be used to cancel the\r\n\t * draw by returning false, any other return (including undefined) results in\r\n\t * the full draw occurring).\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\r\n\t *    return) will allow it to complete.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.preDrawCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"preDrawCallback\": function( settings ) {\r\n\t *          if ( $('#test').val() == 1 ) {\r\n\t *            return false;\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnPreDrawCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * This function allows you to 'post process' each row after it have been\r\n\t * generated for each table draw, but before it is rendered on screen. This\r\n\t * function might be used for setting the row class name etc.\r\n\t *  @type function\r\n\t *  @param {node} row \"TR\" element for the current row\r\n\t *  @param {array} data Raw data array for this row\r\n\t *  @param {int} displayIndex The display index for the current table draw\r\n\t *  @param {int} displayIndexFull The index of the data in the full list of\r\n\t *    rows (after filtering)\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.rowCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\r\n\t *          // Bold the grade for all 'A' grade browsers\r\n\t *          if ( data[4] == \"A\" ) {\r\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\r\n\t *          }\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnRowCallback\": null,\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * This parameter allows you to override the default function which obtains\r\n\t * the data from the server so something more suitable for your application.\r\n\t * For example you could use POST data, or pull information from a Gears or\r\n\t * AIR database.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\r\n\t *  @param {array} data A key/value pair object containing the data to send\r\n\t *    to the server\r\n\t *  @param {function} callback to be called on completion of the data get\r\n\t *    process that will draw the data on the page.\r\n\t *  @param {object} settings DataTables settings object\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverData\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"fnServerData\": null,\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t *  It is often useful to send extra data to the server when making an Ajax\r\n\t * request - for example custom filtering information, and this callback\r\n\t * function makes it trivial to send extra information to the server. The\r\n\t * passed in parameter is the data set that has been constructed by\r\n\t * DataTables, and you can add to this or modify it as you require.\r\n\t *  @type function\r\n\t *  @param {array} data Data array (array of objects which are name/value\r\n\t *    pairs) that has been constructed by DataTables and will be sent to the\r\n\t *    server. In the case of Ajax sourced data with server-side processing\r\n\t *    this will be an empty array, for server-side processing there will be a\r\n\t *    significant number of parameters!\r\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\r\n\t *    as this is passed by reference.\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverParams\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"fnServerParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Load the table state. With this function you can define from where, and how, the\r\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} callback Callback that can be executed when done. It\r\n\t *    should be passed the loaded state object.\r\n\t *  @return {object} The DataTables state object to be loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoadCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadCallback\": function (settings, callback) {\r\n\t *          $.ajax( {\r\n\t *            \"url\": \"/state_load\",\r\n\t *            \"dataType\": \"json\",\r\n\t *            \"success\": function (json) {\r\n\t *              callback( json );\r\n\t *            }\r\n\t *          } );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoadCallback\": function ( settings ) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(\r\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\r\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the saved state prior to loading that state.\r\n\t * This callback is called when the table is loading state from the stored data, but\r\n\t * prior to the settings object being modified by the saved state. Note that for\r\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\r\n\t * a plug-in.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object that is to be loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoadParams\r\n\t *\r\n\t *  @example\r\n\t *    // Remove a saved filter, so filtering is never loaded\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadParams\": function (settings, data) {\r\n\t *          data.oSearch.sSearch = \"\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Disallow state loading by returning false\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoadParams\": function (settings, data) {\r\n\t *          return false;\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoadParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Callback that is called when the state has been loaded from the state saving method\r\n\t * and the DataTables settings object has been modified as a result of the loaded state.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object that was loaded\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateLoaded\r\n\t *\r\n\t *  @example\r\n\t *    // Show an alert with the filtering value that was saved\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateLoaded\": function (settings, data) {\r\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateLoaded\": null,\r\n\r\n\r\n\t/**\r\n\t * Save the table state. This function allows you to define where and how the state\r\n\t * information for the table is stored By default DataTables will use `localStorage`\r\n\t * but you might wish to use a server-side database or cookies.\r\n\t *  @type function\r\n\t *  @member\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object to be saved\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateSaveCallback\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateSaveCallback\": function (settings, data) {\r\n\t *          // Send an Ajax request to the server with the state object\r\n\t *          $.ajax( {\r\n\t *            \"url\": \"/state_save\",\r\n\t *            \"data\": data,\r\n\t *            \"dataType\": \"json\",\r\n\t *            \"method\": \"POST\"\r\n\t *            \"success\": function () {}\r\n\t *          } );\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateSaveCallback\": function ( settings, data ) {\r\n\t\ttry {\r\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\r\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\r\n\t\t\t\tJSON.stringify( data )\r\n\t\t\t);\r\n\t\t} catch (e) {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Callback which allows modification of the state to be saved. Called when the table\r\n\t * has changed state a new state save is required. This method allows modification of\r\n\t * the state saving object prior to actually doing the save, including addition or\r\n\t * other state properties or modification. Note that for plug-in authors, you should\r\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\r\n\t *  @type function\r\n\t *  @param {object} settings DataTables settings object\r\n\t *  @param {object} data The state object to be saved\r\n\t *\r\n\t *  @dtopt Callbacks\r\n\t *  @name DataTable.defaults.stateSaveParams\r\n\t *\r\n\t *  @example\r\n\t *    // Remove a saved filter, so filtering is never saved\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateSave\": true,\r\n\t *        \"stateSaveParams\": function (settings, data) {\r\n\t *          data.oSearch.sSearch = \"\";\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"fnStateSaveParams\": null,\r\n\r\n\r\n\t/**\r\n\t * Duration for which the saved state information is considered valid. After this period\r\n\t * has elapsed the state will be returned to the default.\r\n\t * Value is given in seconds.\r\n\t *  @type int\r\n\t *  @default 7200 <i>(2 hours)</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.stateDuration\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"stateDuration\": 60*60*24; // 1 day\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iStateDuration\": 7200,\r\n\r\n\r\n\t/**\r\n\t * When enabled DataTables will not make a request to the server for the first\r\n\t * page draw - rather it will use the data already on the page (no sorting etc\r\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\r\n\t * is used to indicate that deferred loading is required, but it is also used\r\n\t * to tell DataTables how many records there are in the full table (allowing\r\n\t * the information element and pagination to be displayed correctly). In the case\r\n\t * where a filtering is applied to the table on initial load, this can be\r\n\t * indicated by giving the parameter as an array, where the first element is\r\n\t * the number of records available after filtering and the second element is the\r\n\t * number of records without filtering (allowing the table information element\r\n\t * to be shown correctly).\r\n\t *  @type int | array\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.deferLoading\r\n\t *\r\n\t *  @example\r\n\t *    // 57 records available in the table, no filtering applied\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t *        \"deferLoading\": 57\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"serverSide\": true,\r\n\t *        \"ajax\": \"scripts/server_processing.php\",\r\n\t *        \"deferLoading\": [ 57, 100 ],\r\n\t *        \"search\": {\r\n\t *          \"search\": \"my_filter\"\r\n\t *        }\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"iDeferLoading\": null,\r\n\r\n\r\n\t/**\r\n\t * Number of rows to display on a single page when using pagination. If\r\n\t * feature enabled (`lengthChange`) then the end user will be able to override\r\n\t * this to a custom setting using a pop-up menu.\r\n\t *  @type int\r\n\t *  @default 10\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.pageLength\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"pageLength\": 50\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iDisplayLength\": 10,\r\n\r\n\r\n\t/**\r\n\t * Define the starting point for data display when using DataTables with\r\n\t * pagination. Note that this parameter is the number of records, rather than\r\n\t * the page number, so if you have 10 records per page and want to start on\r\n\t * the third page, it should be \"20\".\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.displayStart\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"displayStart\": 20\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"iDisplayStart\": 0,\r\n\r\n\r\n\t/**\r\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\r\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\r\n\t * allows you to tab through the controls and press the enter key to activate them.\r\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\r\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\r\n\t * disable built-in keyboard navigation.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.tabIndex\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"tabIndex\": 1\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\r\n\t/**\r\n\t * Classes that DataTables assigns to the various components and features\r\n\t * that it adds to the HTML table. This allows classes to be configured\r\n\t * during initialisation in addition to through the static\r\n\t * {@link DataTable.ext.oStdClasses} object).\r\n\t *  @namespace\r\n\t *  @name DataTable.defaults.classes\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\r\n\t/**\r\n\t * All strings that DataTables uses in the user interface that it creates\r\n\t * are defined in this object, allowing you to modified them individually or\r\n\t * completely replace them all as required.\r\n\t *  @namespace\r\n\t *  @name DataTable.defaults.language\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\r\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\r\n\t\t * must be internationalised as well).\r\n\t\t *  @namespace\r\n\t\t *  @name DataTable.defaults.language.aria\r\n\t\t */\r\n\t\t\"oAria\": {\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be\r\n\t\t\t * sorted ascending by activing the column (click or return when focused).\r\n\t\t\t * Note that the column header is prefixed to this string.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default : activate to sort column ascending\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"aria\": {\r\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\r\n\r\n\t\t\t/**\r\n\t\t\t * ARIA label that is added to the table headers when the column may be\r\n\t\t\t * sorted descending by activing the column (click or return when focused).\r\n\t\t\t * Note that the column header is prefixed to this string.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default : activate to sort column ascending\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"aria\": {\r\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Pagination string used by DataTables for the built-in pagination\r\n\t\t * control types.\r\n\t\t *  @namespace\r\n\t\t *  @name DataTable.defaults.language.paginate\r\n\t\t */\r\n\t\t\"oPaginate\": {\r\n\t\t\t/**\r\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\r\n\t\t\t * button to take the user to the first page.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default First\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.first\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"first\": \"First page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sFirst\": \"First\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\r\n\t\t\t * button to take the user to the last page.\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Last\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.last\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"last\": \"Last page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sLast\": \"Last\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\r\n\t\t\t * next page).\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Next\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.next\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"next\": \"Next page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sNext\": \"Next\",\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\r\n\t\t\t * the previous page).\r\n\t\t\t *  @type string\r\n\t\t\t *  @default Previous\r\n\t\t\t *\r\n\t\t\t *  @dtopt Language\r\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\r\n\t\t\t *\r\n\t\t\t *  @example\r\n\t\t\t *    $(document).ready( function() {\r\n\t\t\t *      $('#example').dataTable( {\r\n\t\t\t *        \"language\": {\r\n\t\t\t *          \"paginate\": {\r\n\t\t\t *            \"previous\": \"Previous page\"\r\n\t\t\t *          }\r\n\t\t\t *        }\r\n\t\t\t *      } );\r\n\t\t\t *    } );\r\n\t\t\t */\r\n\t\t\t\"sPrevious\": \"Previous\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This string is shown in preference to `zeroRecords` when the table is\r\n\t\t * empty of data (regardless of filtering). Note that this is an optional\r\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\r\n\t\t * instead (either the default or given value).\r\n\t\t *  @type string\r\n\t\t *  @default No data available in table\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.emptyTable\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"emptyTable\": \"No data available in table\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sEmptyTable\": \"No data available in table\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This string gives information to the end user about the information\r\n\t\t * that is current on display on the page. The following tokens can be\r\n\t\t * used in the string and will be dynamically replaced as the table\r\n\t\t * display updates. This tokens can be placed anywhere in the string, or\r\n\t\t * removed as needed by the language requires:\r\n\t\t *\r\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\r\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\r\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\r\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\r\n\t\t * * `\\_PAGE\\_` - Current page number\r\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\r\n\t\t *\r\n\t\t *  @type string\r\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.info\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Display information string for when the table is empty. Typically the\r\n\t\t * format of this string should match `info`.\r\n\t\t *  @type string\r\n\t\t *  @default Showing 0 to 0 of 0 entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoEmpty\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoEmpty\": \"No entries to show\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When a user filters the information in a table, this string is appended\r\n\t\t * to the information (`info`) to give an idea of how strong the filtering\r\n\t\t * is. The variable _MAX_ is dynamically updated.\r\n\t\t *  @type string\r\n\t\t *  @default (filtered from _MAX_ total entries)\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoFiltered\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\r\n\r\n\r\n\t\t/**\r\n\t\t * If can be useful to append extra information to the info string at times,\r\n\t\t * and this variable does exactly that. This information will be appended to\r\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\r\n\t\t * being used) at all times.\r\n\t\t *  @type string\r\n\t\t *  @default <i>Empty string</i>\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.infoPostFix\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sInfoPostFix\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * This decimal place operator is a little different from the other\r\n\t\t * language options since DataTables doesn't output floating point\r\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\r\n\t\t * what this parameter does is modify the sort methods of the table so\r\n\t\t * that numbers which are in a format which has a character other than\r\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\r\n\t\t *\r\n\t\t * Note that numbers with different decimal places cannot be shown in\r\n\t\t * the same table and still be sortable, the table must be consistent.\r\n\t\t * However, multiple different tables on the page can use different\r\n\t\t * decimal place characters.\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.decimal\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"decimal\": \",\"\r\n\t\t *          \"thousands\": \".\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sDecimal\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\r\n\t\t * used to format large numbers that are used in the table information.\r\n\t\t * By default a comma is used, but this can be trivially changed to any\r\n\t\t * character you wish with this parameter.\r\n\t\t *  @type string\r\n\t\t *  @default ,\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.thousands\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"thousands\": \"'\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sThousands\": \",\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Detail the action that will be taken when the drop down menu for the\r\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\r\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\r\n\t\t * with a custom select box if required.\r\n\t\t *  @type string\r\n\t\t *  @default Show _MENU_ entries\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.lengthMenu\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Language change only\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Language and options change\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"lengthMenu\": 'Display <select>'+\r\n\t\t *            '<option value=\"10\">10</option>'+\r\n\t\t *            '<option value=\"20\">20</option>'+\r\n\t\t *            '<option value=\"30\">30</option>'+\r\n\t\t *            '<option value=\"40\">40</option>'+\r\n\t\t *            '<option value=\"50\">50</option>'+\r\n\t\t *            '<option value=\"-1\">All</option>'+\r\n\t\t *            '</select> records'\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\r\n\r\n\r\n\t\t/**\r\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\r\n\t\t * gathering the data, this message is shown in an empty row in the table to\r\n\t\t * indicate to the end user the the data is being loaded. Note that this\r\n\t\t * parameter is not used when loading data by server-side processing, just\r\n\t\t * Ajax sourced data with client-side processing.\r\n\t\t *  @type string\r\n\t\t *  @default Loading...\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.loadingRecords\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sLoadingRecords\": \"Loading...\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text which is displayed when the table is processing a user action\r\n\t\t * (usually a sort command or similar).\r\n\t\t *  @type string\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.processing\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"processing\": \"DataTables is currently busy\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sProcessing\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Details the actions that will be taken when the user types into the\r\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\r\n\t\t * is replaced with the HTML text box for the filtering input allowing\r\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\r\n\t\t * then the input box is appended to the string automatically.\r\n\t\t *  @type string\r\n\t\t *  @default Search:\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.search\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Input text box will be appended at the end automatically\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"search\": \"Filter records:\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Specify where the filter should appear\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sSearch\": \"Search:\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Assign a `placeholder` attribute to the search `input` element\r\n\t\t *  @type string\r\n\t\t *  @default \r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\r\n\t\t */\r\n\t\t\"sSearchPlaceholder\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * All of the language information can be stored in a file on the\r\n\t\t * server-side, which DataTables will look up if this parameter is passed.\r\n\t\t * It must store the URL of the language file, which is in a JSON format,\r\n\t\t * and the object has the same properties as the oLanguage object in the\r\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\r\n\t\t * the example language files to see how this works in action.\r\n\t\t *  @type string\r\n\t\t *  @default <i>Empty string - i.e. disabled</i>\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.url\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sUrl\": \"\",\r\n\r\n\r\n\t\t/**\r\n\t\t * Text shown inside the table records when the is no information to be\r\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\r\n\t\t * information in the table at all (regardless of filtering).\r\n\t\t *  @type string\r\n\t\t *  @default No matching records found\r\n\t\t *\r\n\t\t *  @dtopt Language\r\n\t\t *  @name DataTable.defaults.language.zeroRecords\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $(document).ready( function() {\r\n\t\t *      $('#example').dataTable( {\r\n\t\t *        \"language\": {\r\n\t\t *          \"zeroRecords\": \"No records to display\"\r\n\t\t *        }\r\n\t\t *      } );\r\n\t\t *    } );\r\n\t\t */\r\n\t\t\"sZeroRecords\": \"No matching records found\"\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * This parameter allows you to have define the global filtering state at\r\n\t * initialisation time. As an object the `search` parameter must be\r\n\t * defined, but all other parameters are optional. When `regex` is true,\r\n\t * the search string will be treated as a regular expression, when false\r\n\t * (default) it will be treated as a straight string. When `smart`\r\n\t * DataTables will use it's smart filtering methods (to word match at\r\n\t * any point in the data), when false this will not be done.\r\n\t *  @namespace\r\n\t *  @extends DataTable.models.oSearch\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.search\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"search\": {\"search\": \"Initial search\"}\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * By default DataTables will look for the property `data` (or `aaData` for\r\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\r\n\t * source or for server-side processing - this parameter allows that\r\n\t * property to be changed. You can use Javascript dotted object notation to\r\n\t * get a data source for multiple levels of nesting.\r\n\t *  @type string\r\n\t *  @default data\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.ajaxDataProp\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sAjaxDataProp\": \"data\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * You can instruct DataTables to load data from an external\r\n\t * source using this parameter (use aData if you want to pass data in you\r\n\t * already have). Simply provide a url a JSON object can be obtained from.\r\n\t *  @type string\r\n\t *  @default null\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.ajaxSource\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sAjaxSource\": null,\r\n\r\n\r\n\t/**\r\n\t * This initialisation variable allows you to specify exactly where in the\r\n\t * DOM you want DataTables to inject the various controls it adds to the page\r\n\t * (for example you might want the pagination controls at the top of the\r\n\t * table). DIV elements (with or without a custom class) can also be added to\r\n\t * aid styling. The follow syntax is used:\r\n\t *   <ul>\r\n\t *     <li>The following options are allowed:\r\n\t *       <ul>\r\n\t *         <li>'l' - Length changing</li>\r\n\t *         <li>'f' - Filtering input</li>\r\n\t *         <li>'t' - The table!</li>\r\n\t *         <li>'i' - Information</li>\r\n\t *         <li>'p' - Pagination</li>\r\n\t *         <li>'r' - pRocessing</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>The following constants are allowed:\r\n\t *       <ul>\r\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\r\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>The following syntax is expected:\r\n\t *       <ul>\r\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\r\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\r\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *     <li>Examples:\r\n\t *       <ul>\r\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\r\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\r\n\t *       </ul>\r\n\t *     </li>\r\n\t *   </ul>\r\n\t *  @type string\r\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\r\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.dom\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sDom\": \"lfrtip\",\r\n\r\n\r\n\t/**\r\n\t * Search delay option. This will throttle full table searches that use the\r\n\t * DataTables provided search input element (it does not effect calls to\r\n\t * `dt-api search()`, providing a delay before the search is made.\r\n\t *  @type integer\r\n\t *  @default 0\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.searchDelay\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"searchDelay\": 200\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\r\n\t/**\r\n\t * DataTables features six different built-in options for the buttons to\r\n\t * display for pagination control:\r\n\t *\r\n\t * * `numbers` - Page number buttons only\r\n\t * * `simple` - 'Previous' and 'Next' buttons only\r\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\r\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\r\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\r\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\r\n\t *  \r\n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\r\n\t *  @type string\r\n\t *  @default simple_numbers\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.pagingType\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"pagingType\": \"full_numbers\"\r\n\t *      } );\r\n\t *    } )\r\n\t */\r\n\t\"sPaginationType\": \"simple_numbers\",\r\n\r\n\r\n\t/**\r\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\r\n\t * certain layout, or you have a large number of columns in the table, you\r\n\t * can enable x-scrolling to show the table in a viewport, which can be\r\n\t * scrolled. This property can be `true` which will allow the table to\r\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\r\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\r\n\t * is recommended.\r\n\t *  @type boolean|string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.scrollX\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollX\": true,\r\n\t *        \"scrollCollapse\": true\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollX\": \"\",\r\n\r\n\r\n\t/**\r\n\t * This property can be used to force a DataTable to use more width than it\r\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\r\n\t * table which requires to be well spaced, this parameter is useful for\r\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\r\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\r\n\t * measurement).\r\n\t *  @type string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @name DataTable.defaults.scrollXInner\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollX\": \"100%\",\r\n\t *        \"scrollXInner\": \"110%\"\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollXInner\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\r\n\t * to the given height, and enable scrolling for any data which overflows the\r\n\t * current viewport. This can be used as an alternative to paging to display\r\n\t * a lot of data in a small area (although paging and scrolling can both be\r\n\t * enabled at the same time). This property can be any CSS unit, or a number\r\n\t * (in which case it will be treated as a pixel measurement).\r\n\t *  @type string\r\n\t *  @default <i>blank string - i.e. disabled</i>\r\n\t *\r\n\t *  @dtopt Features\r\n\t *  @name DataTable.defaults.scrollY\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"scrollY\": \"200px\",\r\n\t *        \"paginate\": false\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sScrollY\": \"\",\r\n\r\n\r\n\t/**\r\n\t * __Deprecated__ The functionality provided by this parameter has now been\r\n\t * superseded by that provided through `ajax`, which should be used instead.\r\n\t *\r\n\t * Set the HTTP method that is used to make the Ajax call for server-side\r\n\t * processing or Ajax sourced data.\r\n\t *  @type string\r\n\t *  @default GET\r\n\t *\r\n\t *  @dtopt Options\r\n\t *  @dtopt Server-side\r\n\t *  @name DataTable.defaults.serverMethod\r\n\t *\r\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\r\n\t */\r\n\t\"sServerMethod\": \"GET\",\r\n\r\n\r\n\t/**\r\n\t * DataTables makes use of renderers when displaying HTML elements for\r\n\t * a table. These renderers can be added or modified by plug-ins to\r\n\t * generate suitable mark-up for a site. For example the Bootstrap\r\n\t * integration plug-in for DataTables uses a paging button renderer to\r\n\t * display pagination buttons in the mark-up required by Bootstrap.\r\n\t *\r\n\t * For further information about the renderers available see\r\n\t * DataTable.ext.renderer\r\n\t *  @type string|object\r\n\t *  @default null\r\n\t *\r\n\t *  @name DataTable.defaults.renderer\r\n\t *\r\n\t */\r\n\t\"renderer\": null,\r\n\r\n\r\n\t/**\r\n\t * Set the data property name that DataTables should use to get a row's id\r\n\t * to set as the `id` property in the node.\r\n\t *  @type string\r\n\t *  @default DT_RowId\r\n\t *\r\n\t *  @name DataTable.defaults.rowId\r\n\t */\r\n\t\"rowId\": \"DT_RowId\"\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults );\r\n\r\n\r\n\r\n/*\r\n * Developer note - See note in model.defaults.js about the use of Hungarian\r\n * notation and camel case.\r\n */\r\n\r\n/**\r\n * Column options that can be given to DataTables at initialisation time.\r\n *  @namespace\r\n */\r\nDataTable.defaults.column = {\r\n\t/**\r\n\t * Define which column(s) an order will occur on for this column. This\r\n\t * allows a column's ordering to take multiple columns into account when\r\n\t * doing a sort or use the data from a different column. For example first\r\n\t * name / last name columns make sense to do a multi-column sort over the\r\n\t * two columns.\r\n\t *  @type array|int\r\n\t *  @default null <i>Takes the value of the column index automatically</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderData\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\r\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\r\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"orderData\": [ 0, 1 ] },\r\n\t *          { \"orderData\": [ 1, 0 ] },\r\n\t *          { \"orderData\": 2 },\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"aDataSort\": null,\r\n\t\"iDataSort\": -1,\r\n\r\n\r\n\t/**\r\n\t * You can control the default ordering direction, and even alter the\r\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\r\n\t * using this parameter.\r\n\t *  @type array\r\n\t *  @default [ 'asc', 'desc' ]\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderSequence\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\r\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\r\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          { \"orderSequence\": [ \"asc\" ] },\r\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\r\n\t *          { \"orderSequence\": [ \"desc\" ] },\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"asSorting\": [ 'asc', 'desc' ],\r\n\r\n\r\n\t/**\r\n\t * Enable or disable filtering on the data in this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.searchable\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"searchable\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bSearchable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable ordering on this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderable\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"orderable\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bSortable\": true,\r\n\r\n\r\n\t/**\r\n\t * Enable or disable the display of this column.\r\n\t *  @type boolean\r\n\t *  @default true\r\n\t *\r\n\t *  @name DataTable.defaults.column.visible\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\r\n\t *        ] } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"visible\": false },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ] } );\r\n\t *    } );\r\n\t */\r\n\t\"bVisible\": true,\r\n\r\n\r\n\t/**\r\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\r\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\r\n\t * allowing you to modify the DOM element (add background colour for example) when the\r\n\t * element is available.\r\n\t *  @type function\r\n\t *  @param {element} td The TD node that has been created\r\n\t *  @param {*} cellData The Data for the cell\r\n\t *  @param {array|object} rowData The data for the whole row\r\n\t *  @param {int} row The row index for the aoData data store\r\n\t *  @param {int} col The column index for aoColumns\r\n\t *\r\n\t *  @name DataTable.defaults.column.createdCell\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [3],\r\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\r\n\t *            if ( cellData == \"1.7\" ) {\r\n\t *              $(td).css('color', 'blue')\r\n\t *            }\r\n\t *          }\r\n\t *        } ]\r\n\t *      });\r\n\t *    } );\r\n\t */\r\n\t\"fnCreatedCell\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\r\n\t * consistency. `dataProp` can still be used, as there is backwards\r\n\t * compatibility in DataTables for this option, but it is strongly\r\n\t * recommended that you use `data` in preference to `dataProp`.\r\n\t *  @name DataTable.defaults.column.dataProp\r\n\t */\r\n\r\n\r\n\t/**\r\n\t * This property can be used to read data from any data source property,\r\n\t * including deeply nested objects / properties. `data` can be given in a\r\n\t * number of different ways which effect its behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object. Note that\r\n\t *      function notation is recommended for use in `render` rather than\r\n\t *      `data` as it is much simpler to use as a renderer.\r\n\t * * `null` - use the original data source for the row rather than plucking\r\n\t *   data directly from it. This action has effects on two other\r\n\t *   initialisation options:\r\n\t *    * `defaultContent` - When null is given as the `data` option and\r\n\t *      `defaultContent` is specified for the column, the value defined by\r\n\t *      `defaultContent` will be used for the cell.\r\n\t *    * `render` - When null is used for the `data` option and the `render`\r\n\t *      option is specified for the column, the whole data source for the\r\n\t *      row is used for the renderer.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * `{array|object}` The data source for the row\r\n\t *      * `{string}` The type call data requested - this will be 'set' when\r\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\r\n\t *        when gathering data. Note that when `undefined` is given for the\r\n\t *        type DataTables expects to get the raw data for the object back<\r\n\t *      * `{*}` Data to set when the second parameter is 'set'.\r\n\t *    * Return:\r\n\t *      * The return value from the function is not required when 'set' is\r\n\t *        the type of call, but otherwise the return is what will be used\r\n\t *        for the data requested.\r\n\t *\r\n\t * Note that `data` is a getter and setter option. If you just require\r\n\t * formatting of data for output, you will likely want to use `render` which\r\n\t * is simply a getter and thus simpler to use.\r\n\t *\r\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\r\n\t * name change reflects the flexibility of this property and is consistent\r\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\r\n\t * be used by DataTables, as it automatically maps the old name to the new\r\n\t * if required.\r\n\t *\r\n\t *  @type string|int|function|null\r\n\t *  @default null <i>Use automatically calculated column index</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.data\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Read table data from objects\r\n\t *    // JSON structure for each row:\r\n\t *    //   {\r\n\t *    //      \"engine\": {value},\r\n\t *    //      \"browser\": {value},\r\n\t *    //      \"platform\": {value},\r\n\t *    //      \"version\": {value},\r\n\t *    //      \"grade\": {value}\r\n\t *    //   }\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/objects.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          { \"data\": \"platform\" },\r\n\t *          { \"data\": \"version\" },\r\n\t *          { \"data\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Read information from deeply nested objects\r\n\t *    // JSON structure for each row:\r\n\t *    //   {\r\n\t *    //      \"engine\": {value},\r\n\t *    //      \"browser\": {value},\r\n\t *    //      \"platform\": {\r\n\t *    //         \"inner\": {value}\r\n\t *    //      },\r\n\t *    //      \"details\": [\r\n\t *    //         {value}, {value}\r\n\t *    //      ]\r\n\t *    //   }\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          { \"data\": \"platform.inner\" },\r\n\t *          { \"data\": \"details.0\" },\r\n\t *          { \"data\": \"details.1\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `data` as a function to provide different information for\r\n\t *    // sorting, filtering and display. In this case, currency (price)\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": function ( source, type, val ) {\r\n\t *            if (type === 'set') {\r\n\t *              source.price = val;\r\n\t *              // Store the computed display and filter values for efficiency\r\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\r\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\r\n\t *              return;\r\n\t *            }\r\n\t *            else if (type === 'display') {\r\n\t *              return source.price_display;\r\n\t *            }\r\n\t *            else if (type === 'filter') {\r\n\t *              return source.price_filter;\r\n\t *            }\r\n\t *            // 'sort', 'type' and undefined all just use the integer\r\n\t *            return source.price;\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using default content\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null,\r\n\t *          \"defaultContent\": \"Click to edit\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using array notation - outputting a list from an array\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": \"name[, ]\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t */\r\n\t\"mData\": null,\r\n\r\n\r\n\t/**\r\n\t * This property is the rendering partner to `data` and it is suggested that\r\n\t * when you want to manipulate data for display (including filtering,\r\n\t * sorting etc) without altering the underlying data for the table, use this\r\n\t * property. `render` can be considered to be the the read only companion to\r\n\t * `data` which is read / write (then as such more complex). Like `data`\r\n\t * this option can be given in a number of different ways to effect its\r\n\t * behaviour:\r\n\t *\r\n\t * * `integer` - treated as an array index for the data source. This is the\r\n\t *   default that DataTables uses (incrementally increased for each column).\r\n\t * * `string` - read an object property from the data source. There are\r\n\t *   three 'special' options that can be used in the string to alter how\r\n\t *   DataTables reads the data from the source object:\r\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\r\n\t *      Javascript to read from nested objects, so to can the options\r\n\t *      specified in `data`. For example: `browser.version` or\r\n\t *      `browser.name`. If your object parameter name contains a period, use\r\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\r\n\t *    * `[]` - Array notation. DataTables can automatically combine data\r\n\t *      from and array source, joining the data with the characters provided\r\n\t *      between the two brackets. For example: `name[, ]` would provide a\r\n\t *      comma-space separated list from the source array. If no characters\r\n\t *      are provided between the brackets, the original array source is\r\n\t *      returned.\r\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\r\n\t *      execute a function of the name given. For example: `browser()` for a\r\n\t *      simple function on the data source, `browser.version()` for a\r\n\t *      function in a nested property or even `browser().version` to get an\r\n\t *      object property if the function called returns an object.\r\n\t * * `object` - use different data for the different data types requested by\r\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\r\n\t *   of the object is the data type the property refers to and the value can\r\n\t *   defined using an integer, string or function using the same rules as\r\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\r\n\t *   This is the default value to use if you haven't specified a value for\r\n\t *   the data type requested by DataTables.\r\n\t * * `function` - the function given will be executed whenever DataTables\r\n\t *   needs to set or get the data for a cell in the column. The function\r\n\t *   takes three parameters:\r\n\t *    * Parameters:\r\n\t *      * {array|object} The data source for the row (based on `data`)\r\n\t *      * {string} The type call data requested - this will be 'filter',\r\n\t *        'display', 'type' or 'sort'.\r\n\t *      * {array|object} The full data source for the row (not based on\r\n\t *        `data`)\r\n\t *    * Return:\r\n\t *      * The return value from the function is what will be used for the\r\n\t *        data requested.\r\n\t *\r\n\t *  @type string|int|function|object|null\r\n\t *  @default null Use the data source value.\r\n\t *\r\n\t *  @name DataTable.defaults.column.render\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Create a comma separated list from an array of objects\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"ajaxSource\": \"sources/deep.txt\",\r\n\t *        \"columns\": [\r\n\t *          { \"data\": \"engine\" },\r\n\t *          { \"data\": \"browser\" },\r\n\t *          {\r\n\t *            \"data\": \"platform\",\r\n\t *            \"render\": \"[, ].name\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Execute a function to obtain data\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t *          \"render\": \"browserName()\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // As an object, extracting different data for the different types\r\n\t *    // This would be used with a data source such as:\r\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\r\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\r\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\r\n\t *    // the formatted phone number is the one that is shown in the table.\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": null, // Use the full data source object for the renderer's source\r\n\t *          \"render\": {\r\n\t *            \"_\": \"phone\",\r\n\t *            \"filter\": \"phone_filter\",\r\n\t *            \"display\": \"phone_display\"\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Use as a function to create a link from the data source\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"data\": \"download_link\",\r\n\t *          \"render\": function ( data, type, full ) {\r\n\t *            return '<a href=\"'+data+'\">Download</a>';\r\n\t *          }\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"mRender\": null,\r\n\r\n\r\n\t/**\r\n\t * Change the cell type created for the column - either TD cells or TH cells. This\r\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\r\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\r\n\t *  @type string\r\n\t *  @default td\r\n\t *\r\n\t *  @name DataTable.defaults.column.cellType\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Make the first column use TH cells\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [ {\r\n\t *          \"targets\": [ 0 ],\r\n\t *          \"cellType\": \"th\"\r\n\t *        } ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sCellType\": \"td\",\r\n\r\n\r\n\t/**\r\n\t * Class to give to each cell in this column.\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.class\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"class\": \"my_class\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sClass\": \"\",\r\n\r\n\t/**\r\n\t * When DataTables calculates the column widths to assign to each column,\r\n\t * it finds the longest string in each column and then constructs a\r\n\t * temporary table and reads the widths from that. The problem with this\r\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\r\n\t * string - thus the calculation can go wrong (doing it properly and putting\r\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\r\n\t * a \"work around\" we provide this option. It will append its value to the\r\n\t * text that is found to be the longest string for the column - i.e. padding.\r\n\t * Generally you shouldn't need this!\r\n\t *  @type string\r\n\t *  @default <i>Empty string<i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.contentPadding\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          {\r\n\t *            \"contentPadding\": \"mmm\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sContentPadding\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Allows a default value to be given for a column's data, and will be used\r\n\t * whenever a null data source is encountered (this can be because `data`\r\n\t * is set to null, or because the data source itself is null).\r\n\t *  @type string\r\n\t *  @default null\r\n\t *\r\n\t *  @name DataTable.defaults.column.defaultContent\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          {\r\n\t *            \"data\": null,\r\n\t *            \"defaultContent\": \"Edit\",\r\n\t *            \"targets\": [ -1 ]\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          {\r\n\t *            \"data\": null,\r\n\t *            \"defaultContent\": \"Edit\"\r\n\t *          }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sDefaultContent\": null,\r\n\r\n\r\n\t/**\r\n\t * This parameter is only used in DataTables' server-side processing. It can\r\n\t * be exceptionally useful to know what columns are being displayed on the\r\n\t * client side, and to map these to database fields. When defined, the names\r\n\t * also allow DataTables to reorder information from the server if it comes\r\n\t * back in an unexpected order (i.e. if you switch your columns around on the\r\n\t * client-side, your server-side code does not also need updating).\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.name\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\r\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\r\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\r\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\r\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"name\": \"engine\" },\r\n\t *          { \"name\": \"browser\" },\r\n\t *          { \"name\": \"platform\" },\r\n\t *          { \"name\": \"version\" },\r\n\t *          { \"name\": \"grade\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sName\": \"\",\r\n\r\n\r\n\t/**\r\n\t * Defines a data source type for the ordering which can be used to read\r\n\t * real-time information from the table (updating the internally cached\r\n\t * version) prior to ordering. This allows ordering to occur on user\r\n\t * editable elements such as form inputs.\r\n\t *  @type string\r\n\t *  @default std\r\n\t *\r\n\t *  @name DataTable.defaults.column.orderDataType\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\r\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\r\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\r\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          null,\r\n\t *          null,\r\n\t *          { \"orderDataType\": \"dom-text\" },\r\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\r\n\t *          { \"orderDataType\": \"dom-select\" },\r\n\t *          { \"orderDataType\": \"dom-checkbox\" }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sSortDataType\": \"std\",\r\n\r\n\r\n\t/**\r\n\t * The title of this column.\r\n\t *  @type string\r\n\t *  @default null <i>Derived from the 'TH' value for this column in the\r\n\t *    original HTML table.</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.title\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"title\": \"My column title\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sTitle\": null,\r\n\r\n\r\n\t/**\r\n\t * The type allows you to specify how the data for this column will be\r\n\t * ordered. Four types (string, numeric, date and html (which will strip\r\n\t * HTML tags before ordering)) are currently available. Note that only date\r\n\t * formats understood by Javascript's Date() object will be accepted as type\r\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\r\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\r\n\t * through plug-ins.\r\n\t *  @type string\r\n\t *  @default null <i>Auto-detected from raw data</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.type\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"type\": \"html\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sType\": null,\r\n\r\n\r\n\t/**\r\n\t * Defining the width of the column, this parameter may take any CSS value\r\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\r\n\t * been given a specific width through this interface ensuring that the table\r\n\t * remains readable.\r\n\t *  @type string\r\n\t *  @default null <i>Automatic</i>\r\n\t *\r\n\t *  @name DataTable.defaults.column.width\r\n\t *  @dtopt Columns\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columnDefs`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columnDefs\": [\r\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t *\r\n\t *  @example\r\n\t *    // Using `columns`\r\n\t *    $(document).ready( function() {\r\n\t *      $('#example').dataTable( {\r\n\t *        \"columns\": [\r\n\t *          { \"width\": \"20%\" },\r\n\t *          null,\r\n\t *          null,\r\n\t *          null,\r\n\t *          null\r\n\t *        ]\r\n\t *      } );\r\n\t *    } );\r\n\t */\r\n\t\"sWidth\": null\r\n};\r\n\r\n_fnHungarianMap( DataTable.defaults.column );\r\n\r\n\r\n\r\n/**\r\n * DataTables settings object - this holds all the information needed for a\r\n * given table, including configuration, data and current application of the\r\n * table options. DataTables does not have a single instance for each DataTable\r\n * with the settings attached to that instance, but rather instances of the\r\n * DataTable \"class\" are created on-the-fly as needed (typically by a\r\n * $().dataTable() call) and the settings object is then applied to that\r\n * instance.\r\n *\r\n * Note that this object is related to {@link DataTable.defaults} but this\r\n * one is the internal data store for DataTables's cache of columns. It should\r\n * NOT be manipulated outside of DataTables. Any configuration should be done\r\n * through the initialisation options.\r\n *  @namespace\r\n *  @todo Really should attach the settings object to individual instances so we\r\n *    don't need to create new instances on each $().dataTable() call (if the\r\n *    table already exists). It would also save passing oSettings around and\r\n *    into every single function. However, this is a very significant\r\n *    architecture change for DataTables and will almost certainly break\r\n *    backwards compatibility with older installations. This is something that\r\n *    will be done in 2.0.\r\n */\r\nDataTable.models.oSettings = {\r\n\t/**\r\n\t * Primary features of DataTables and their enablement state.\r\n\t *  @namespace\r\n\t */\r\n\t\"oFeatures\": {\r\n\r\n\t\t/**\r\n\t\t * Flag to say if DataTables should automatically try to calculate the\r\n\t\t * optimum table and columns widths (true) or not (false).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bAutoWidth\": null,\r\n\r\n\t\t/**\r\n\t\t * Delay the creation of TR and TD elements until they are actually\r\n\t\t * needed by a driven page draw. This can give a significant speed\r\n\t\t * increase for Ajax source and Javascript source data, but makes no\r\n\t\t * difference at all for DOM and server-side processing tables.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bDeferRender\": null,\r\n\r\n\t\t/**\r\n\t\t * Enable filtering on the table or not. Note that if this is disabled\r\n\t\t * then there is no filtering at all on the table, including fnFilter.\r\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bFilter\": null,\r\n\r\n\t\t/**\r\n\t\t * Table information element (the 'Showing x of y records' div) enable\r\n\t\t * flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bInfo\": null,\r\n\r\n\t\t/**\r\n\t\t * Present a user control allowing the end user to change the page size\r\n\t\t * when pagination is enabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bLengthChange\": null,\r\n\r\n\t\t/**\r\n\t\t * Pagination enabled or not. Note that if this is disabled then length\r\n\t\t * changing must also be disabled.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bPaginate\": null,\r\n\r\n\t\t/**\r\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\r\n\t\t * user request - typically an Ajax request for server-side processing.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bProcessing\": null,\r\n\r\n\t\t/**\r\n\t\t * Server-side processing enabled flag - when enabled DataTables will\r\n\t\t * get all data from the server for every draw - there is no filtering,\r\n\t\t * sorting or paging done on the client-side.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bServerSide\": null,\r\n\r\n\t\t/**\r\n\t\t * Sorting enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSort\": null,\r\n\r\n\t\t/**\r\n\t\t * Multi-column sorting\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSortMulti\": null,\r\n\r\n\t\t/**\r\n\t\t * Apply a class to the columns which are being sorted to provide a\r\n\t\t * visual highlight or not. This can slow things down when enabled since\r\n\t\t * there is a lot of DOM interaction.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bSortClasses\": null,\r\n\r\n\t\t/**\r\n\t\t * State saving enablement flag.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bStateSave\": null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Scrolling settings for a table.\r\n\t *  @namespace\r\n\t */\r\n\t\"oScroll\": {\r\n\t\t/**\r\n\t\t * When the table is shorter in height than sScrollY, collapse the\r\n\t\t * table container down to the height of the table (when true).\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type boolean\r\n\t\t */\r\n\t\t\"bCollapse\": null,\r\n\r\n\t\t/**\r\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\r\n\t\t * during table initialisation.\r\n\t\t *  @type int\r\n\t\t *  @default 0\r\n\t\t */\r\n\t\t\"iBarWidth\": 0,\r\n\r\n\t\t/**\r\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\r\n\t\t * disabled if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t */\r\n\t\t\"sX\": null,\r\n\r\n\t\t/**\r\n\t\t * Width to expand the table to when using x-scrolling. Typically you\r\n\t\t * should not need to use this.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t *  @deprecated\r\n\t\t */\r\n\t\t\"sXInner\": null,\r\n\r\n\t\t/**\r\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\r\n\t\t * if an empty string.\r\n\t\t * Note that this parameter will be set by the initialisation routine. To\r\n\t\t * set a default use {@link DataTable.defaults}.\r\n\t\t *  @type string\r\n\t\t */\r\n\t\t\"sY\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Language information for the table.\r\n\t *  @namespace\r\n\t *  @extends DataTable.defaults.oLanguage\r\n\t */\r\n\t\"oLanguage\": {\r\n\t\t/**\r\n\t\t * Information callback function. See\r\n\t\t * {@link DataTable.defaults.fnInfoCallback}\r\n\t\t *  @type function\r\n\t\t *  @default null\r\n\t\t */\r\n\t\t\"fnInfoCallback\": null\r\n\t},\r\n\r\n\t/**\r\n\t * Browser support parameters\r\n\t *  @namespace\r\n\t */\r\n\t\"oBrowser\": {\r\n\t\t/**\r\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\r\n\t\t * scrolling element (IE6/7)\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bScrollOversize\": false,\r\n\r\n\t\t/**\r\n\t\t * Determine if the vertical scrollbar is on the right or left of the\r\n\t\t * scrolling container - needed for rtl language layout, although not\r\n\t\t * all browsers move the scrollbar (Safari).\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bScrollbarLeft\": false,\r\n\r\n\t\t/**\r\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\r\n\t\t *  @type boolean\r\n\t\t *  @default false\r\n\t\t */\r\n\t\t\"bBounding\": false,\r\n\r\n\t\t/**\r\n\t\t * Browser scrollbar width\r\n\t\t *  @type integer\r\n\t\t *  @default 0\r\n\t\t */\r\n\t\t\"barWidth\": 0\r\n\t},\r\n\r\n\r\n\t\"ajax\": null,\r\n\r\n\r\n\t/**\r\n\t * Array referencing the nodes which are used for the features. The\r\n\t * parameters of this object match what is allowed by sDom - i.e.\r\n\t *   <ul>\r\n\t *     <li>'l' - Length changing</li>\r\n\t *     <li>'f' - Filtering input</li>\r\n\t *     <li>'t' - The table!</li>\r\n\t *     <li>'i' - Information</li>\r\n\t *     <li>'p' - Pagination</li>\r\n\t *     <li>'r' - pRocessing</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aanFeatures\": [],\r\n\r\n\t/**\r\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\r\n\t * information.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoData\": [],\r\n\r\n\t/**\r\n\t * Array of indexes which are in the current display (after filtering etc)\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aiDisplay\": [],\r\n\r\n\t/**\r\n\t * Array of indexes for display - no filtering\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aiDisplayMaster\": [],\r\n\r\n\t/**\r\n\t * Map of row ids to data indexes\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"aIds\": {},\r\n\r\n\t/**\r\n\t * Store information about each column that is in use\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoColumns\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's header\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoHeader\": [],\r\n\r\n\t/**\r\n\t * Store information about the table's footer\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoFooter\": [],\r\n\r\n\t/**\r\n\t * Store the applied global search information in case we want to force a\r\n\t * research or compare the old search to a new one.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @namespace\r\n\t *  @extends DataTable.models.oSearch\r\n\t */\r\n\t\"oPreviousSearch\": {},\r\n\r\n\t/**\r\n\t * Store the applied search for each column - see\r\n\t * {@link DataTable.models.oSearch} for the format that is used for the\r\n\t * filtering information for each column.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoPreSearchCols\": [],\r\n\r\n\t/**\r\n\t * Sorting that is applied to the table. Note that the inner arrays are\r\n\t * used in the following manner:\r\n\t * <ul>\r\n\t *   <li>Index 0 - column number</li>\r\n\t *   <li>Index 1 - current sorting direction</li>\r\n\t * </ul>\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @todo These inner arrays should really be objects\r\n\t */\r\n\t\"aaSorting\": null,\r\n\r\n\t/**\r\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\r\n\t * aaSorting).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aaSortingFixed\": [],\r\n\r\n\t/**\r\n\t * Classes to use for the striping of a table.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"asStripeClasses\": null,\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its striping classes as well\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"asDestroyStripes\": [],\r\n\r\n\t/**\r\n\t * If restoring a table - we should restore its width\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"sDestroyWidth\": 0,\r\n\r\n\t/**\r\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoRowCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for the header on each draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoHeaderCallback\": [],\r\n\r\n\t/**\r\n\t * Callback function for the footer on each draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoFooterCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for draw callback functions\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for row created function\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoRowCreatedCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for just before the table is redrawn. A return of\r\n\t * false will be used to cancel the draw.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoPreDrawCallback\": [],\r\n\r\n\t/**\r\n\t * Callback functions for when the table has been initialised.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoInitComplete\": [],\r\n\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\r\n\t * saving state.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateSaveParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for modifying the settings that have been stored for state saving\r\n\t * prior to using the stored values to restore the state.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoadParams\": [],\r\n\r\n\t/**\r\n\t * Callbacks for operating on the settings object once the saved state has been\r\n\t * loaded\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoaded\": [],\r\n\r\n\t/**\r\n\t * Cache the table ID for quick access\r\n\t *  @type string\r\n\t *  @default <i>Empty string</i>\r\n\t */\r\n\t\"sTableId\": \"\",\r\n\r\n\t/**\r\n\t * The TABLE node for the main table\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTable\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the thead element\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTHead\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tfoot element - if it exists\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTFoot\": null,\r\n\r\n\t/**\r\n\t * Permanent ref to the tbody element\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTBody\": null,\r\n\r\n\t/**\r\n\t * Cache the wrapper node (contains all DataTables controlled elements)\r\n\t *  @type node\r\n\t *  @default null\r\n\t */\r\n\t\"nTableWrapper\": null,\r\n\r\n\t/**\r\n\t * Indicate if when using server-side processing the loading of data\r\n\t * should be deferred until the second draw.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bDeferLoading\": false,\r\n\r\n\t/**\r\n\t * Indicate if all required information has been read in\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bInitialised\": false,\r\n\r\n\t/**\r\n\t * Information about open rows. Each object in the array has the parameters\r\n\t * 'nTr' and 'nParent'\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoOpenRows\": [],\r\n\r\n\t/**\r\n\t * Dictate the positioning of DataTables' control elements - see\r\n\t * {@link DataTable.model.oInit.sDom}.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sDom\": null,\r\n\r\n\t/**\r\n\t * Search delay (in mS)\r\n\t *  @type integer\r\n\t *  @default null\r\n\t */\r\n\t\"searchDelay\": null,\r\n\r\n\t/**\r\n\t * Which type of pagination should be used.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default two_button\r\n\t */\r\n\t\"sPaginationType\": \"two_button\",\r\n\r\n\t/**\r\n\t * The state duration (for `stateSave`) in seconds.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"iStateDuration\": 0,\r\n\r\n\t/**\r\n\t * Array of callback functions for state saving. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the JSON string to save that has been thus far created. Returns\r\n\t *       a JSON string to be inserted into a json object\r\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateSave\": [],\r\n\r\n\t/**\r\n\t * Array of callback functions for state loading. Each array element is an\r\n\t * object with the following parameters:\r\n\t *   <ul>\r\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\r\n\t *       and the object stored. May return false to cancel state loading</li>\r\n\t *     <li>string:sName - name of callback</li>\r\n\t *   </ul>\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoStateLoad\": [],\r\n\r\n\t/**\r\n\t * State that was saved. Useful for back reference\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oSavedState\": null,\r\n\r\n\t/**\r\n\t * State that was loaded. Useful for back reference\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oLoadedState\": null,\r\n\r\n\t/**\r\n\t * Source url for AJAX data for the table.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sAjaxSource\": null,\r\n\r\n\t/**\r\n\t * Property from a given object from which to read the table data from. This\r\n\t * can be an empty string (when not server-side processing), in which case\r\n\t * it is  assumed an an array is given directly.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t */\r\n\t\"sAjaxDataProp\": null,\r\n\r\n\t/**\r\n\t * The last jQuery XHR object that was used for server-side data gathering.\r\n\t * This can be used for working with the XHR information in one of the\r\n\t * callbacks\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"jqXHR\": null,\r\n\r\n\t/**\r\n\t * JSON returned from the server in the last Ajax request\r\n\t *  @type object\r\n\t *  @default undefined\r\n\t */\r\n\t\"json\": undefined,\r\n\r\n\t/**\r\n\t * Data submitted as part of the last Ajax request\r\n\t *  @type object\r\n\t *  @default undefined\r\n\t */\r\n\t\"oAjaxData\": undefined,\r\n\r\n\t/**\r\n\t * Function to get the server-side data.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type function\r\n\t */\r\n\t\"fnServerData\": null,\r\n\r\n\t/**\r\n\t * Functions which are called prior to sending an Ajax request so extra\r\n\t * parameters can easily be sent to the server\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoServerParams\": [],\r\n\r\n\t/**\r\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\r\n\t * required).\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type string\r\n\t */\r\n\t\"sServerMethod\": null,\r\n\r\n\t/**\r\n\t * Format numbers for display.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type function\r\n\t */\r\n\t\"fnFormatNumber\": null,\r\n\r\n\t/**\r\n\t * List of options that can be used for the user selectable length menu.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aLengthMenu\": null,\r\n\r\n\t/**\r\n\t * Counter for the draws that the table does. Also used as a tracker for\r\n\t * server-side processing\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"iDraw\": 0,\r\n\r\n\t/**\r\n\t * Indicate if a redraw is being done - useful for Ajax\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t */\r\n\t\"bDrawing\": false,\r\n\r\n\t/**\r\n\t * Draw index (iDraw) of the last error when parsing the returned data\r\n\t *  @type int\r\n\t *  @default -1\r\n\t */\r\n\t\"iDrawError\": -1,\r\n\r\n\t/**\r\n\t * Paging display length\r\n\t *  @type int\r\n\t *  @default 10\r\n\t */\r\n\t\"_iDisplayLength\": 10,\r\n\r\n\t/**\r\n\t * Paging start point - aiDisplay index\r\n\t *  @type int\r\n\t *  @default 0\r\n\t */\r\n\t\"_iDisplayStart\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the result set\r\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t *  @type int\r\n\t *  @default 0\r\n\t *  @private\r\n\t */\r\n\t\"_iRecordsTotal\": 0,\r\n\r\n\t/**\r\n\t * Server-side processing - number of records in the current display set\r\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\r\n\t * this property to get the value of the number of records, regardless of\r\n\t * the server-side processing setting.\r\n\t *  @type boolean\r\n\t *  @default 0\r\n\t *  @private\r\n\t */\r\n\t\"_iRecordsDisplay\": 0,\r\n\r\n\t/**\r\n\t * The classes to use for the table\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"oClasses\": {},\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if filtering has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @deprecated\r\n\t */\r\n\t\"bFiltered\": false,\r\n\r\n\t/**\r\n\t * Flag attached to the settings object so you can check in the draw\r\n\t * callback if sorting has been done in the draw. Deprecated in favour of\r\n\t * events.\r\n\t *  @type boolean\r\n\t *  @default false\r\n\t *  @deprecated\r\n\t */\r\n\t\"bSorted\": false,\r\n\r\n\t/**\r\n\t * Indicate that if multiple rows are in the header and there is more than\r\n\t * one unique cell per column, if the top one (true) or bottom one (false)\r\n\t * should be used for sorting / title by DataTables.\r\n\t * Note that this parameter will be set by the initialisation routine. To\r\n\t * set a default use {@link DataTable.defaults}.\r\n\t *  @type boolean\r\n\t */\r\n\t\"bSortCellsTop\": null,\r\n\r\n\t/**\r\n\t * Initialisation object that is used for the table\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oInit\": null,\r\n\r\n\t/**\r\n\t * Destroy callback functions - for plug-ins to attach themselves to the\r\n\t * destroy so they can clean up markup and events.\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aoDestroyCallback\": [],\r\n\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, before filtering\r\n\t *  @type function\r\n\t */\r\n\t\"fnRecordsTotal\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsTotal * 1 :\r\n\t\t\tthis.aiDisplayMaster.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the number of records in the current record set, after filtering\r\n\t *  @type function\r\n\t */\r\n\t\"fnRecordsDisplay\": function ()\r\n\t{\r\n\t\treturn _fnDataSource( this ) == 'ssp' ?\r\n\t\t\tthis._iRecordsDisplay * 1 :\r\n\t\t\tthis.aiDisplay.length;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the display end point - aiDisplay index\r\n\t *  @type function\r\n\t */\r\n\t\"fnDisplayEnd\": function ()\r\n\t{\r\n\t\tvar\r\n\t\t\tlen      = this._iDisplayLength,\r\n\t\t\tstart    = this._iDisplayStart,\r\n\t\t\tcalc     = start + len,\r\n\t\t\trecords  = this.aiDisplay.length,\r\n\t\t\tfeatures = this.oFeatures,\r\n\t\t\tpaginate = features.bPaginate;\r\n\r\n\t\tif ( features.bServerSide ) {\r\n\t\t\treturn paginate === false || len === -1 ?\r\n\t\t\t\tstart + records :\r\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ! paginate || calc>records || len===-1 ?\r\n\t\t\t\trecords :\r\n\t\t\t\tcalc;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * The DataTables object for this table\r\n\t *  @type object\r\n\t *  @default null\r\n\t */\r\n\t\"oInstance\": null,\r\n\r\n\t/**\r\n\t * Unique identifier for each instance of the DataTables object. If there\r\n\t * is an ID on the table node, then it takes that value, otherwise an\r\n\t * incrementing internal counter is used.\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"sInstance\": null,\r\n\r\n\t/**\r\n\t * tabindex attribute value that is added to DataTables control elements, allowing\r\n\t * keyboard navigation of the table and its controls.\r\n\t */\r\n\t\"iTabIndex\": 0,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollHead\": null,\r\n\r\n\t/**\r\n\t * DIV container for the footer scrolling table if scrolling\r\n\t */\r\n\t\"nScrollFoot\": null,\r\n\r\n\t/**\r\n\t * Last applied sort\r\n\t *  @type array\r\n\t *  @default []\r\n\t */\r\n\t\"aLastSort\": [],\r\n\r\n\t/**\r\n\t * Stored plug-in instances\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\t\"oPlugins\": {},\r\n\r\n\t/**\r\n\t * Function used to get a row's id from the row's data\r\n\t *  @type function\r\n\t *  @default null\r\n\t */\r\n\t\"rowIdFn\": null,\r\n\r\n\t/**\r\n\t * Data location where to store a row's id\r\n\t *  @type string\r\n\t *  @default null\r\n\t */\r\n\t\"rowId\": null\r\n};\r\n\r\n/**\r\n * Extension object for DataTables that is used to provide all extension\r\n * options.\r\n *\r\n * Note that the `DataTable.ext` object is available through\r\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\r\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\r\n *  @namespace\r\n *  @extends DataTable.models.ext\r\n */\r\n\r\n\r\n/**\r\n * DataTables extensions\r\n * \r\n * This namespace acts as a collection area for plug-ins that can be used to\r\n * extend DataTables capabilities. Indeed many of the build in methods\r\n * use this method to provide their own capabilities (sorting methods for\r\n * example).\r\n *\r\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\r\n * reasons\r\n *\r\n *  @namespace\r\n */\r\nDataTable.ext = _ext = {\r\n\t/**\r\n\t * Buttons. For use with the Buttons extension for DataTables. This is\r\n\t * defined here so other extensions can define buttons regardless of load\r\n\t * order. It is _not_ used by DataTables core.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tbuttons: {},\r\n\r\n\r\n\t/**\r\n\t * Element class names\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tclasses: {},\r\n\r\n\r\n\t/**\r\n\t * DataTables build type (expanded by the download builder)\r\n\t *\r\n\t *  @type string\r\n\t */\r\n\tbuilder: \"-source-\",\r\n\r\n\r\n\t/**\r\n\t * Error reporting.\r\n\t * \r\n\t * How should DataTables report an error. Can take the value 'alert',\r\n\t * 'throw', 'none' or a function.\r\n\t *\r\n\t *  @type string|function\r\n\t *  @default alert\r\n\t */\r\n\terrMode: \"alert\",\r\n\r\n\r\n\t/**\r\n\t * Feature plug-ins.\r\n\t * \r\n\t * This is an array of objects which describe the feature plug-ins that are\r\n\t * available to DataTables. These feature plug-ins are then available for\r\n\t * use through the `dom` initialisation option.\r\n\t * \r\n\t * Each feature plug-in is described by an object which must have the\r\n\t * following properties:\r\n\t * \r\n\t * * `fnInit` - function that is used to initialise the plug-in,\r\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\r\n\t *   instillation option. This is case sensitive.\r\n\t *\r\n\t * The `fnInit` function has the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t *\r\n\t * And the following return is expected:\r\n\t * \r\n\t * * {node|null} The element which contains your feature. Note that the\r\n\t *   return may also be void if your plug-in does not require to inject any\r\n\t *   DOM elements into DataTables control (`dom`) - for example this might\r\n\t *   be useful when developing a plug-in which allows table control via\r\n\t *   keyboard entry\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    $.fn.dataTable.ext.features.push( {\r\n\t *      \"fnInit\": function( oSettings ) {\r\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\r\n\t *      },\r\n\t *      \"cFeature\": \"T\"\r\n\t *    } );\r\n\t */\r\n\tfeature: [],\r\n\r\n\r\n\t/**\r\n\t * Row searching.\r\n\t * \r\n\t * This method of searching is complimentary to the default type based\r\n\t * searching, and a lot more comprehensive as it allows you complete control\r\n\t * over the searching logic. Each element in this array is a function\r\n\t * (parameters described below) that is called for every row in the table,\r\n\t * and your logic decides if it should be included in the searching data set\r\n\t * or not.\r\n\t *\r\n\t * Searching functions have the following input parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{array|object}` Data for the row to be processed (same as the\r\n\t *    original format that was passed in as the data source, or an array\r\n\t *    from a DOM data source\r\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\r\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\r\n\t *\r\n\t * And the following return is expected:\r\n\t *\r\n\t * * {boolean} Include the row in the searched result set (true) or not\r\n\t *   (false)\r\n\t *\r\n\t * Note that as with the main search ability in DataTables, technically this\r\n\t * is \"filtering\", since it is subtractive. However, for consistency in\r\n\t * naming we call it searching here.\r\n\t *\r\n\t *  @type array\r\n\t *  @default []\r\n\t *\r\n\t *  @example\r\n\t *    // The following example shows custom search being applied to the\r\n\t *    // fourth column (i.e. the data[3] index) based on two input values\r\n\t *    // from the end-user, matching the data in a certain range.\r\n\t *    $.fn.dataTable.ext.search.push(\r\n\t *      function( settings, data, dataIndex ) {\r\n\t *        var min = document.getElementById('min').value * 1;\r\n\t *        var max = document.getElementById('max').value * 1;\r\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\r\n\t *\r\n\t *        if ( min == \"\" && max == \"\" ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min == \"\" && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && \"\" == max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        else if ( min < version && version < max ) {\r\n\t *          return true;\r\n\t *        }\r\n\t *        return false;\r\n\t *      }\r\n\t *    );\r\n\t */\r\n\tsearch: [],\r\n\r\n\r\n\t/**\r\n\t * Selector extensions\r\n\t *\r\n\t * The `selector` option can be used to extend the options available for the\r\n\t * selector modifier options (`selector-modifier` object data type) that\r\n\t * each of the three built in selector types offer (row, column and cell +\r\n\t * their plural counterparts). For example the Select extension uses this\r\n\t * mechanism to provide an option to select only rows, columns and cells\r\n\t * that have been marked as selected by the end user (`{selected: true}`),\r\n\t * which can be used in conjunction with the existing built in selector\r\n\t * options.\r\n\t *\r\n\t * Each property is an array to which functions can be pushed. The functions\r\n\t * take three attributes:\r\n\t *\r\n\t * * Settings object for the host table\r\n\t * * Options object (`selector-modifier` object type)\r\n\t * * Array of selected item indexes\r\n\t *\r\n\t * The return is an array of the resulting item indexes after the custom\r\n\t * selector has been applied.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tselector: {\r\n\t\tcell: [],\r\n\t\tcolumn: [],\r\n\t\trow: []\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Internal functions, exposed for used in plug-ins.\r\n\t * \r\n\t * Please note that you should not need to use the internal methods for\r\n\t * anything other than a plug-in (and even then, try to avoid if possible).\r\n\t * The internal function may change between releases.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t */\r\n\tinternal: {},\r\n\r\n\r\n\t/**\r\n\t * Legacy configuration options. Enable and disable legacy options that\r\n\t * are available in DataTables.\r\n\t *\r\n\t *  @type object\r\n\t */\r\n\tlegacy: {\r\n\t\t/**\r\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\r\n\t\t * requests\r\n\t\t *\r\n\t\t *  @type boolean\r\n\t\t *  @default null\r\n\t\t */\r\n\t\tajax: null\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Pagination plug-in methods.\r\n\t * \r\n\t * Each entry in this object is a function and defines which buttons should\r\n\t * be shown by the pagination rendering method that is used for the table:\r\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\r\n\t * buttons are displayed in the document, while the functions here tell it\r\n\t * what buttons to display. This is done by returning an array of button\r\n\t * descriptions (what each button will do).\r\n\t *\r\n\t * Pagination types (the four built in options and any additional plug-in\r\n\t * options defined here) can be used through the `paginationType`\r\n\t * initialisation parameter.\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{int} page` The current page index\r\n\t * 2. `{int} pages` The number of pages in the table\r\n\t *\r\n\t * Each function is expected to return an array where each element of the\r\n\t * array can be one of:\r\n\t *\r\n\t * * `first` - Jump to first page when activated\r\n\t * * `last` - Jump to last page when activated\r\n\t * * `previous` - Show previous page when activated\r\n\t * * `next` - Show next page when activated\r\n\t * * `{int}` - Show page of the index given\r\n\t * * `{array}` - A nested array containing the above elements to add a\r\n\t *   containing 'DIV' element (might be useful for styling).\r\n\t *\r\n\t * Note that DataTables v1.9- used this object slightly differently whereby\r\n\t * an object with two functions would be defined for each plug-in. That\r\n\t * ability is still supported by DataTables 1.10+ to provide backwards\r\n\t * compatibility, but this option of use is now decremented and no longer\r\n\t * documented in DataTables 1.10+.\r\n\t *\r\n\t *  @type object\r\n\t *  @default {}\r\n\t *\r\n\t *  @example\r\n\t *    // Show previous, next and current page buttons only\r\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\r\n\t *      return [ 'previous', page, 'next' ];\r\n\t *    };\r\n\t */\r\n\tpager: {},\r\n\r\n\r\n\trenderer: {\r\n\t\tpageButton: {},\r\n\t\theader: {}\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Ordering plug-ins - custom data source\r\n\t * \r\n\t * The extension options for ordering of data available here is complimentary\r\n\t * to the default type based ordering that DataTables typically uses. It\r\n\t * allows much greater control over the the data that is being used to\r\n\t * order a column, but is necessarily therefore more complex.\r\n\t * \r\n\t * This type of ordering is useful if you want to do ordering based on data\r\n\t * live from the DOM (for example the contents of an 'input' element) rather\r\n\t * than just the static string that DataTables knows of.\r\n\t * \r\n\t * The way these plug-ins work is that you create an array of the values you\r\n\t * wish to be ordering for the column in question and then return that\r\n\t * array. The data in the array much be in the index order of the rows in\r\n\t * the table (not the currently ordering order!). Which order data gathering\r\n\t * function is run here depends on the `dt-init columns.orderDataType`\r\n\t * parameter that is used for the column (if any).\r\n\t *\r\n\t * The functions defined take two parameters:\r\n\t *\r\n\t * 1. `{object}` DataTables settings object: see\r\n\t *    {@link DataTable.models.oSettings}\r\n\t * 2. `{int}` Target column index\r\n\t *\r\n\t * Each function is expected to return an array:\r\n\t *\r\n\t * * `{array}` Data for the column to be ordering upon\r\n\t *\r\n\t *  @type array\r\n\t *\r\n\t *  @example\r\n\t *    // Ordering using `input` node values\r\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\r\n\t *    {\r\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\r\n\t *        return $('input', td).val();\r\n\t *      } );\r\n\t *    }\r\n\t */\r\n\torder: {},\r\n\r\n\r\n\t/**\r\n\t * Type based plug-ins.\r\n\t *\r\n\t * Each column in DataTables has a type assigned to it, either by automatic\r\n\t * detection or by direct assignment using the `type` option for the column.\r\n\t * The type of a column will effect how it is ordering and search (plug-ins\r\n\t * can also make use of the column type if required).\r\n\t *\r\n\t * @namespace\r\n\t */\r\n\ttype: {\r\n\t\t/**\r\n\t\t * Type detection functions.\r\n\t\t *\r\n\t\t * The functions defined in this object are used to automatically detect\r\n\t\t * a column's type, making initialisation of DataTables super easy, even\r\n\t\t * when complex data is in the table.\r\n\t\t *\r\n\t\t * The functions defined take two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be analysed\r\n\t     *  2. `{settings}` DataTables settings object. This can be used to\r\n\t     *     perform context specific type detection - for example detection\r\n\t     *     based on language settings such as using a comma for a decimal\r\n\t     *     place. Generally speaking the options from the settings will not\r\n\t     *     be required\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\r\n\t\t *   pass it on to the other type detection functions.\r\n\t\t *\r\n\t\t *  @type array\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Currency type detection plug-in:\r\n\t\t *    $.fn.dataTable.ext.type.detect.push(\r\n\t\t *      function ( data, settings ) {\r\n\t\t *        // Check the numeric part\r\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\r\n\t\t *          return null;\r\n\t\t *        }\r\n\t\t *\r\n\t\t *        // Check prefixed by currency\r\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\r\n\t\t *          return 'currency';\r\n\t\t *        }\r\n\t\t *        return null;\r\n\t\t *      }\r\n\t\t *    );\r\n\t\t */\r\n\t\tdetect: [],\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based search formatting.\r\n\t\t *\r\n\t\t * The type based searching functions can be used to pre-format the\r\n\t\t * data to be search on. For example, it can be used to strip HTML\r\n\t\t * tags or to de-format telephone numbers for numeric only searching.\r\n\t\t *\r\n\t\t * Note that is a search is not defined for a column of a given type,\r\n\t\t * no search formatting will be performed.\r\n\t\t * \r\n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\r\n\t\t * for a column (or have it automatically detected for you by DataTables\r\n\t\t * or a type detection plug-in), you will typically be using this for\r\n\t\t * custom sorting, but it can also be used to provide custom searching\r\n\t\t * by allowing you to pre-processing the data and returning the data in\r\n\t\t * the format that should be searched upon. This is done by adding\r\n\t\t * functions this object with a parameter name which matches the sType\r\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\r\n\t\t * for searching data.\r\n\t\t *\r\n\t\t * The functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\r\n\t\t *\r\n\t\t * Each function is expected to return:\r\n\t\t *\r\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\r\n\t\t *\r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\r\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\r\n\t\t *    }\r\n\t\t */\r\n\t\tsearch: {},\r\n\r\n\r\n\t\t/**\r\n\t\t * Type based ordering.\r\n\t\t *\r\n\t\t * The column type tells DataTables what ordering to apply to the table\r\n\t\t * when a column is sorted upon. The order for each type that is defined,\r\n\t\t * is defined by the functions available in this object.\r\n\t\t *\r\n\t\t * Each ordering option can be described by three properties added to\r\n\t\t * this object:\r\n\t\t *\r\n\t\t * * `{type}-pre` - Pre-formatting function\r\n\t\t * * `{type}-asc` - Ascending order function\r\n\t\t * * `{type}-desc` - Descending order function\r\n\t\t *\r\n\t\t * All three can be used together, only `{type}-pre` or only\r\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\r\n\t\t * that only `{type}-pre` is used, as this provides the optimal\r\n\t\t * implementation in terms of speed, although the others are provided\r\n\t\t * for compatibility with existing Javascript sort functions.\r\n\t\t *\r\n\t\t * `{type}-pre`: Functions defined take a single parameter:\r\n\t\t *\r\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\r\n\t\t *\r\n\t\t * And return:\r\n\t\t *\r\n\t\t * * `{*}` Data to be sorted upon\r\n\t\t *\r\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\r\n\t\t * functions, taking two parameters:\r\n\t\t *\r\n\t     *  1. `{*}` Data to compare to the second parameter\r\n\t     *  2. `{*}` Data to compare to the first parameter\r\n\t\t *\r\n\t\t * And returning:\r\n\t\t *\r\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\r\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\r\n\t\t *   >0 if the first parameter should be sorted height than the second\r\n\t\t *   parameter.\r\n\t\t * \r\n\t\t *  @type object\r\n\t\t *  @default {}\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\r\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\r\n\t\t *      \"string-pre\": function(x) {\r\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\r\n\t\t *        return parseFloat( a );\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t *\r\n\t\t *  @example\r\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\r\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\r\n\t\t *      \"string-case-asc\": function(x,y) {\r\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t\t *      },\r\n\t\t *      \"string-case-desc\": function(x,y) {\r\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t\t *      }\r\n\t\t *    } );\r\n\t\t */\r\n\t\torder: {}\r\n\t},\r\n\r\n\t/**\r\n\t * Unique DataTables instance counter\r\n\t *\r\n\t * @type int\r\n\t * @private\r\n\t */\r\n\t_unique: 0,\r\n\r\n\r\n\t//\r\n\t// Depreciated\r\n\t// The following properties are retained for backwards compatibility only.\r\n\t// The should not be used in new projects and will be removed in a future\r\n\t// version\r\n\t//\r\n\r\n\t/**\r\n\t * Version check function.\r\n\t *  @type function\r\n\t *  @depreciated Since 1.10\r\n\t */\r\n\tfnVersionCheck: DataTable.fnVersionCheck,\r\n\r\n\r\n\t/**\r\n\t * Index for what 'this' index API functions should use\r\n\t *  @type int\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tiApiIndex: 0,\r\n\r\n\r\n\t/**\r\n\t * jQuery UI class container\r\n\t *  @type object\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\toJUIClasses: {},\r\n\r\n\r\n\t/**\r\n\t * Software version\r\n\t *  @type string\r\n\t *  @deprecated Since v1.10\r\n\t */\r\n\tsVersion: DataTable.version\r\n};\r\n\r\n\r\n//\r\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\r\n//\r\n$.extend( _ext, {\r\n\tafnFiltering: _ext.search,\r\n\taTypes:       _ext.type.detect,\r\n\tofnSearch:    _ext.type.search,\r\n\toSort:        _ext.type.order,\r\n\tafnSortData:  _ext.order,\r\n\taoFeatures:   _ext.feature,\r\n\toApi:         _ext.internal,\r\n\toStdClasses:  _ext.classes,\r\n\toPagination:  _ext.pager\r\n} );\r\n\r\n\r\n$.extend( DataTable.ext.classes, {\r\n\t\"sTable\": \"dataTable\",\r\n\t\"sNoFooter\": \"no-footer\",\r\n\r\n\t/* Paging buttons */\r\n\t\"sPageButton\": \"paginate_button\",\r\n\t\"sPageButtonActive\": \"current\",\r\n\t\"sPageButtonDisabled\": \"disabled\",\r\n\r\n\t/* Striping classes */\r\n\t\"sStripeOdd\": \"odd\",\r\n\t\"sStripeEven\": \"even\",\r\n\r\n\t/* Empty row */\r\n\t\"sRowEmpty\": \"dataTables_empty\",\r\n\r\n\t/* Features */\r\n\t\"sWrapper\": \"dataTables_wrapper\",\r\n\t\"sFilter\": \"dataTables_filter\",\r\n\t\"sInfo\": \"dataTables_info\",\r\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\r\n\t\"sLength\": \"dataTables_length\",\r\n\t\"sProcessing\": \"dataTables_processing\",\r\n\r\n\t/* Sorting */\r\n\t\"sSortAsc\": \"sorting_asc\",\r\n\t\"sSortDesc\": \"sorting_desc\",\r\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\r\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\r\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\r\n\t\"sSortableNone\": \"sorting_disabled\",\r\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\r\n\r\n\t/* Filtering */\r\n\t\"sFilterInput\": \"\",\r\n\r\n\t/* Page length */\r\n\t\"sLengthSelect\": \"\",\r\n\r\n\t/* Scrolling */\r\n\t\"sScrollWrapper\": \"dataTables_scroll\",\r\n\t\"sScrollHead\": \"dataTables_scrollHead\",\r\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\r\n\t\"sScrollBody\": \"dataTables_scrollBody\",\r\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\r\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\r\n\r\n\t/* Misc */\r\n\t\"sHeaderTH\": \"\",\r\n\t\"sFooterTH\": \"\",\r\n\r\n\t// Deprecated\r\n\t\"sSortJUIAsc\": \"\",\r\n\t\"sSortJUIDesc\": \"\",\r\n\t\"sSortJUI\": \"\",\r\n\t\"sSortJUIAscAllowed\": \"\",\r\n\t\"sSortJUIDescAllowed\": \"\",\r\n\t\"sSortJUIWrapper\": \"\",\r\n\t\"sSortIcon\": \"\",\r\n\t\"sJUIHeader\": \"\",\r\n\t\"sJUIFooter\": \"\"\r\n} );\r\n\r\n\r\nvar extPagination = DataTable.ext.pager;\r\n\r\nfunction _numbers ( page, pages ) {\r\n\tvar\r\n\t\tnumbers = [],\r\n\t\tbuttons = extPagination.numbers_length,\r\n\t\thalf = Math.floor( buttons / 2 ),\r\n\t\ti = 1;\r\n\r\n\tif ( pages <= buttons ) {\r\n\t\tnumbers = _range( 0, pages );\r\n\t}\r\n\telse if ( page <= half ) {\r\n\t\tnumbers = _range( 0, buttons-2 );\r\n\t\tnumbers.push( 'ellipsis' );\r\n\t\tnumbers.push( pages-1 );\r\n\t}\r\n\telse if ( page >= pages - 1 - half ) {\r\n\t\tnumbers = _range( pages-(buttons-2), pages );\r\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\r\n\t\tnumbers.splice( 0, 0, 0 );\r\n\t}\r\n\telse {\r\n\t\tnumbers = _range( page-half+2, page+half-1 );\r\n\t\tnumbers.push( 'ellipsis' );\r\n\t\tnumbers.push( pages-1 );\r\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\r\n\t\tnumbers.splice( 0, 0, 0 );\r\n\t}\r\n\r\n\tnumbers.DT_el = 'span';\r\n\treturn numbers;\r\n}\r\n\r\n\r\n$.extend( extPagination, {\r\n\tsimple: function ( page, pages ) {\r\n\t\treturn [ 'previous', 'next' ];\r\n\t},\r\n\r\n\tfull: function ( page, pages ) {\r\n\t\treturn [  'first', 'previous', 'next', 'last' ];\r\n\t},\r\n\r\n\tnumbers: function ( page, pages ) {\r\n\t\treturn [ _numbers(page, pages) ];\r\n\t},\r\n\r\n\tsimple_numbers: function ( page, pages ) {\r\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\r\n\t},\r\n\r\n\tfull_numbers: function ( page, pages ) {\r\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\r\n\t},\r\n\t\r\n\tfirst_last_numbers: function (page, pages) {\r\n \t\treturn ['first', _numbers(page, pages), 'last'];\r\n \t},\r\n\r\n\t// For testing and plug-ins to use\r\n\t_numbers: _numbers,\r\n\r\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\r\n\tnumbers_length: 7\r\n} );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\tpageButton: {\r\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\r\n\t\t\tvar classes = settings.oClasses;\r\n\t\t\tvar lang = settings.oLanguage.oPaginate;\r\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\r\n\t\t\tvar btnDisplay, btnClass;\r\n\r\n\t\t\tvar attach = function( container, buttons ) {\r\n\t\t\t\tvar i, ien, node, button, tabIndex;\r\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\r\n\t\t\t\tvar clickHandler = function ( e ) {\r\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\r\n\t\t\t\t\tbutton = buttons[i];\r\n\r\n\t\t\t\t\tif ( Array.isArray( button ) ) {\r\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\r\n\t\t\t\t\t\t\t.appendTo( container );\r\n\t\t\t\t\t\tattach( inner, button );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbtnDisplay = null;\r\n\t\t\t\t\t\tbtnClass = button;\r\n\t\t\t\t\t\ttabIndex = settings.iTabIndex;\r\n\r\n\t\t\t\t\t\tswitch ( button ) {\r\n\t\t\t\t\t\t\tcase 'ellipsis':\r\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'first':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\r\n\r\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'previous':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\r\n\r\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'next':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\r\n\r\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 'last':\r\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\r\n\r\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\r\n\t\t\t\t\t\t\t\t\ttabIndex = -1;\r\n\t\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\r\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\r\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\r\n\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\r\n\t\t\t\t\t\t\tvar disabled = btnClass.indexOf(disabledClass) !== -1;\r\n\t\t\r\n\r\n\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\r\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\r\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\r\n\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\r\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\r\n\t\t\t\t\t\t\t\t\t'aria-role': 'link',\r\n\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\r\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\r\n\t\t\t\t\t\t\t\t\t'tabindex': tabIndex,\r\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\r\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\t\t.html( btnDisplay )\r\n\t\t\t\t\t\t\t\t.appendTo( container );\r\n\r\n\t\t\t\t\t\t\t_fnBindAction(\r\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\r\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\r\n\t\t\t// accessibility, but neither are frames.\r\n\t\t\tvar activeEl;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t// Because this approach is destroying and recreating the paging\r\n\t\t\t\t// elements, focus is lost on the select button which is bad for\r\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\r\n\t\t\t\t// completed\r\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\r\n\t\t\t}\r\n\t\t\tcatch (e) {}\r\n\r\n\t\t\tattach( $(host).empty(), buttons );\r\n\r\n\t\t\tif ( activeEl !== undefined ) {\r\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\n\r\n// Built in type detection. See model.ext.aTypes for information about\r\n// what is required from this methods.\r\n$.extend( DataTable.ext.type.detect, [\r\n\t// Plain numbers - first since V8 detects some plain numbers as dates\r\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\r\n\t},\r\n\r\n\t// Dates (only those recognised by the browser's Date.parse)\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\r\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\r\n\t\t// plug-in for anything other than ISO8601 style strings\r\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar parsed = Date.parse(d);\r\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\r\n\t},\r\n\r\n\t// Formatted numbers\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\r\n\t},\r\n\r\n\t// HTML numeric\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\r\n\t},\r\n\r\n\t// HTML numeric, formatted\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\tvar decimal = settings.oLanguage.sDecimal;\r\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\r\n\t},\r\n\r\n\t// HTML (this is strict checking - there must be html)\r\n\tfunction ( d, settings )\r\n\t{\r\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\r\n\t\t\t'html' : null;\r\n\t}\r\n] );\r\n\r\n\r\n\r\n// Filter formatting functions. See model.ext.ofnSearch for information about\r\n// what is required from these methods.\r\n// \r\n// Note that additional search methods are added for the html numbers and\r\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\r\n// place is\r\n\r\n\r\n$.extend( DataTable.ext.type.search, {\r\n\thtml: function ( data ) {\r\n\t\treturn _empty(data) ?\r\n\t\t\tdata :\r\n\t\t\ttypeof data === 'string' ?\r\n\t\t\t\tdata\r\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\r\n\t\t\t\t\t.replace( _re_html, \"\" ) :\r\n\t\t\t\t'';\r\n\t},\r\n\r\n\tstring: function ( data ) {\r\n\t\treturn _empty(data) ?\r\n\t\t\tdata :\r\n\t\t\ttypeof data === 'string' ?\r\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\r\n\t\t\t\tdata;\r\n\t}\r\n} );\r\n\r\n\r\n\r\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\r\n\tif ( d !== 0 && (!d || d === '-') ) {\r\n\t\treturn -Infinity;\r\n\t}\r\n\t\r\n\tlet type = typeof d;\r\n\r\n\tif (type === 'number' || type === 'bigint') {\r\n\t\treturn d;\r\n\t}\r\n\r\n\t// If a decimal place other than `.` is used, it needs to be given to the\r\n\t// function so we can detect it and replace with a `.` which is the only\r\n\t// decimal place Javascript recognises - it is not locale aware.\r\n\tif ( decimalPlace ) {\r\n\t\td = _numToDecimal( d, decimalPlace );\r\n\t}\r\n\r\n\tif ( d.replace ) {\r\n\t\tif ( re1 ) {\r\n\t\t\td = d.replace( re1, '' );\r\n\t\t}\r\n\r\n\t\tif ( re2 ) {\r\n\t\t\td = d.replace( re2, '' );\r\n\t\t}\r\n\t}\r\n\r\n\treturn d * 1;\r\n};\r\n\r\n\r\n// Add the numeric 'deformatting' functions for sorting and search. This is done\r\n// in a function to provide an easy ability for the language options to add\r\n// additional methods if a non-period decimal place is used.\r\nfunction _addNumericSort ( decimalPlace ) {\r\n\t$.each(\r\n\t\t{\r\n\t\t\t// Plain numbers\r\n\t\t\t\"num\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace );\r\n\t\t\t},\r\n\r\n\t\t\t// Formatted numbers\r\n\t\t\t\"num-fmt\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\r\n\t\t\t},\r\n\r\n\t\t\t// HTML numeric\r\n\t\t\t\"html-num\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\r\n\t\t\t},\r\n\r\n\t\t\t// HTML numeric, formatted\r\n\t\t\t\"html-num-fmt\": function ( d ) {\r\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\r\n\t\t\t}\r\n\t\t},\r\n\t\tfunction ( key, fn ) {\r\n\t\t\t// Add the ordering method\r\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\r\n\r\n\t\t\t// For HTML types add a search formatter that will strip the HTML\r\n\t\t\tif ( key.match(/^html\\-/) ) {\r\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n}\r\n\r\n\r\n// Default sort methods\r\n$.extend( _ext.type.order, {\r\n\t// Dates\r\n\t\"date-pre\": function ( d ) {\r\n\t\tvar ts = Date.parse( d );\r\n\t\treturn isNaN(ts) ? -Infinity : ts;\r\n\t},\r\n\r\n\t// html\r\n\t\"html-pre\": function ( a ) {\r\n\t\treturn _empty(a) ?\r\n\t\t\t'' :\r\n\t\t\ta.replace ?\r\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\r\n\t\t\t\ta+'';\r\n\t},\r\n\r\n\t// string\r\n\t\"string-pre\": function ( a ) {\r\n\t\t// This is a little complex, but faster than always calling toString,\r\n\t\t// http://jsperf.com/tostring-v-check\r\n\t\treturn _empty(a) ?\r\n\t\t\t'' :\r\n\t\t\ttypeof a === 'string' ?\r\n\t\t\t\ta.toLowerCase() :\r\n\t\t\t\t! a.toString ?\r\n\t\t\t\t\t'' :\r\n\t\t\t\t\ta.toString();\r\n\t},\r\n\r\n\t// string-asc and -desc are retained only for compatibility with the old\r\n\t// sort methods\r\n\t\"string-asc\": function ( x, y ) {\r\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n\t},\r\n\r\n\t\"string-desc\": function ( x, y ) {\r\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n\t}\r\n} );\r\n\r\n\r\n// Numeric sorting types - order doesn't matter here\r\n_addNumericSort( '' );\r\n\r\n\r\n$.extend( true, DataTable.ext.renderer, {\r\n\theader: {\r\n\t\t_: function ( settings, cell, column, classes ) {\r\n\t\t\t// No additional mark-up required\r\n\t\t\t// Attach a sort listener to update on sort - note that using the\r\n\t\t\t// `DT` namespace will allow the event to be removed automatically\r\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\r\n\t\t\t// listening for\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\r\n\t\t\t\t\treturn;               // table, not a nested one\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colIdx = column.idx;\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\tclasses.sSortAsc +' '+\r\n\t\t\t\t\t\tclasses.sSortDesc\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClass\r\n\t\t\t\t\t);\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\tjqueryui: function ( settings, cell, column, classes ) {\r\n\t\t\t$('<div/>')\r\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\r\n\t\t\t\t.append( cell.contents() )\r\n\t\t\t\t.append( $('<span/>')\r\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\r\n\t\t\t\t)\r\n\t\t\t\t.appendTo( cell );\r\n\r\n\t\t\t// Attach a sort listener to update on sort\r\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\r\n\t\t\t\tif ( settings !== ctx ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar colIdx = column.idx;\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClass\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tcell\r\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\r\n\t\t\t\t\t.removeClass(\r\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\r\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\r\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\r\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\r\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\r\n\t\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/*\r\n * Public helper functions. These aren't used internally by DataTables, or\r\n * called by any of the options passed into DataTables, but they can be used\r\n * externally by developers working with DataTables. They are helper functions\r\n * to make working with DataTables a little bit easier.\r\n */\r\n\r\nvar __htmlEscapeEntities = function ( d ) {\r\n\tif (Array.isArray(d)) {\r\n\t\td = d.join(',');\r\n\t}\r\n\r\n\treturn typeof d === 'string' ?\r\n\t\td\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;') :\r\n\t\td;\r\n};\r\n\r\n// Common logic for moment, luxon or a date action\r\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\r\n\tif (window.moment) {\r\n\t\treturn dt[momentFn]( arg1 );\r\n\t}\r\n\telse if (window.luxon) {\r\n\t\treturn dt[luxonFn]( arg1 );\r\n\t}\r\n\t\r\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\r\n}\r\n\r\n\r\nvar __mlWarning = false;\r\nfunction __mldObj (d, format, locale) {\r\n\tvar dt;\r\n\r\n\tif (window.moment) {\r\n\t\tdt = window.moment.utc( d, format, locale, true );\r\n\r\n\t\tif (! dt.isValid()) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\telse if (window.luxon) {\r\n\t\tdt = format && typeof d === 'string'\r\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\r\n\t\t\t: window.luxon.DateTime.fromISO( d );\r\n\r\n\t\tif (! dt.isValid) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tdt.setLocale(locale);\r\n\t}\r\n\telse if (! format) {\r\n\t\t// No format given, must be ISO\r\n\t\tdt = new Date(d);\r\n\t}\r\n\telse {\r\n\t\tif (! __mlWarning) {\r\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\r\n\t\t}\r\n\r\n\t\t__mlWarning = true;\r\n\t}\r\n\r\n\treturn dt;\r\n}\r\n\r\n// Wrapper for date, datetime and time which all operate the same way with the exception of\r\n// the output string for auto locale support\r\nfunction __mlHelper (localeString) {\r\n\treturn function ( from, to, locale, def ) {\r\n\t\t// Luxon and Moment support\r\n\t\t// Argument shifting\r\n\t\tif ( arguments.length === 0 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = null; // means toLocaleString\r\n\t\t\tfrom = null; // means iso8601\r\n\t\t}\r\n\t\telse if ( arguments.length === 1 ) {\r\n\t\t\tlocale = 'en';\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\t\telse if ( arguments.length === 2 ) {\r\n\t\t\tlocale = to;\r\n\t\t\tto = from;\r\n\t\t\tfrom = null;\r\n\t\t}\r\n\r\n\t\tvar typeName = 'datetime-' + to;\r\n\r\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\r\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\r\n\t\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\t\t// The renderer will give the value to type detect as the type!\r\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\r\n\t\t\t\treturn d === typeName ? typeName : false;\r\n\t\t\t});\r\n\r\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\r\n\t\t\t// `valueOf` which gives milliseconds epoch\r\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\r\n\t\t\t\tvar x = a.valueOf();\r\n\t\t\t\tvar y = b.valueOf();\r\n\r\n\t\t\t\treturn x === y\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: x < y\r\n\t\t\t\t\t\t? -1\r\n\t\t\t\t\t\t: 1;\r\n\t\t\t}\r\n\r\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\r\n\t\t\t\tvar x = a.valueOf();\r\n\t\t\t\tvar y = b.valueOf();\r\n\r\n\t\t\t\treturn x === y\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: x > y\r\n\t\t\t\t\t\t? -1\r\n\t\t\t\t\t\t: 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn function ( d, type ) {\r\n\t\t\t// Allow for a default value\r\n\t\t\tif (d === null || d === undefined) {\r\n\t\t\t\tif (def === '--now') {\r\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\r\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\r\n\t\t\t\t\t// UTC\r\n\t\t\t\t\tvar local = new Date();\r\n\t\t\t\t\td = new Date( Date.UTC(\r\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\r\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\r\n\t\t\t\t\t) );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'type') {\r\n\t\t\t\t// Typing uses the type name for fast matching\r\n\t\t\t\treturn typeName;\r\n\t\t\t}\r\n\r\n\t\t\tif (d === '') {\r\n\t\t\t\treturn type !== 'sort'\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\r\n\t\t\t}\r\n\r\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\r\n\t\t\t// format for ordering, not display - its already in the display format.\r\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tvar dt = __mldObj(d, from, locale);\r\n\r\n\t\t\tif (dt === null) {\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tif (type === 'sort') {\r\n\t\t\t\treturn dt;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar formatted = to === null\r\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\r\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\r\n\r\n\t\t\t// XSS protection\r\n\t\t\treturn type === 'display' ?\r\n\t\t\t\t__htmlEscapeEntities( formatted ) :\r\n\t\t\t\tformatted;\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// Based on locale, determine standard number formatting\r\n// Fallback for legacy browsers is US English\r\nvar __thousands = ',';\r\nvar __decimal = '.';\r\n\r\nif (Intl) {\r\n\ttry {\r\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\r\n\t\r\n\t\tfor (var i=0 ; i<num.length ; i++) {\r\n\t\t\tif (num[i].type === 'group') {\r\n\t\t\t\t__thousands = num[i].value;\r\n\t\t\t}\r\n\t\t\telse if (num[i].type === 'decimal') {\r\n\t\t\t\t__decimal = num[i].value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcatch (e) {\r\n\t\t// noop\r\n\t}\r\n}\r\n\r\n// Formatted date time detection - use by declaring the formats you are going to use\r\nDataTable.datetime = function ( format, locale ) {\r\n\tvar typeName = 'datetime-detect-' + format;\r\n\r\n\tif (! locale) {\r\n\t\tlocale = 'en';\r\n\t}\r\n\r\n\tif (! DataTable.ext.type.order[typeName]) {\r\n\t\tDataTable.ext.type.detect.unshift(function (d) {\r\n\t\t\tvar dt = __mldObj(d, format, locale);\r\n\t\t\treturn d === '' || dt ? typeName : false;\r\n\t\t});\r\n\r\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\r\n\t\t\treturn __mldObj(d, format, locale) || 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Helpers for `columns.render`.\r\n *\r\n * The options defined here can be used with the `columns.render` initialisation\r\n * option to provide a display renderer. The following functions are defined:\r\n *\r\n * * `number` - Will format numeric data (defined by `columns.data`) for\r\n *   display, retaining the original unformatted data for sorting and filtering.\r\n *   It takes 5 parameters:\r\n *   * `string` - Thousands grouping separator\r\n *   * `string` - Decimal point indicator\r\n *   * `integer` - Number of decimal points to show\r\n *   * `string` (optional) - Prefix.\r\n *   * `string` (optional) - Postfix (/suffix).\r\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\r\n *   parameters.\r\n *\r\n * @example\r\n *   // Column definition using the number renderer\r\n *   {\r\n *     data: \"salary\",\r\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\r\n *   }\r\n *\r\n * @namespace\r\n */\r\nDataTable.render = {\r\n\tdate: __mlHelper('toLocaleDateString'),\r\n\tdatetime: __mlHelper('toLocaleString'),\r\n\ttime: __mlHelper('toLocaleTimeString'),\r\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\r\n\t\t// Auto locale detection\r\n\t\tif (thousands === null || thousands === undefined) {\r\n\t\t\tthousands = __thousands;\r\n\t\t}\r\n\r\n\t\tif (decimal === null || decimal === undefined) {\r\n\t\t\tdecimal = __decimal;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdisplay: function ( d ) {\r\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (d === '' || d === null) {\r\n\t\t\t\t\treturn d;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar negative = d < 0 ? '-' : '';\r\n\t\t\t\tvar flo = parseFloat( d );\r\n\r\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\r\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\r\n\t\t\t\t// be a number after all)\r\n\t\t\t\tif ( isNaN( flo ) ) {\r\n\t\t\t\t\treturn __htmlEscapeEntities( d );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tflo = flo.toFixed( precision );\r\n\t\t\t\td = Math.abs( flo );\r\n\r\n\t\t\t\tvar intPart = parseInt( d, 10 );\r\n\t\t\t\tvar floatPart = precision ?\r\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\r\n\t\t\t\t\t'';\r\n\r\n\t\t\t\t// If zero, then can't have a negative prefix\r\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\r\n\t\t\t\t\tnegative = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn negative + (prefix||'') +\r\n\t\t\t\t\tintPart.toString().replace(\r\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\r\n\t\t\t\t\t) +\r\n\t\t\t\t\tfloatPart +\r\n\t\t\t\t\t(postfix||'');\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\ttext: function () {\r\n\t\treturn {\r\n\t\t\tdisplay: __htmlEscapeEntities,\r\n\t\t\tfilter: __htmlEscapeEntities\r\n\t\t};\r\n\t}\r\n};\r\n\r\n\r\n/*\r\n * This is really a good bit rubbish this method of exposing the internal methods\r\n * publicly... - To be fixed in 2.0 using methods on the prototype\r\n */\r\n\r\n\r\n/**\r\n * Create a wrapper function for exporting an internal functions to an external API.\r\n *  @param {string} fn API function name\r\n *  @returns {function} wrapped function\r\n *  @memberof DataTable#internal\r\n */\r\nfunction _fnExternApiFunc (fn)\r\n{\r\n\treturn function() {\r\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\r\n\t\t\tArray.prototype.slice.call(arguments)\r\n\t\t);\r\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\r\n\t};\r\n}\r\n\r\n\r\n/**\r\n * Reference to internal functions for use by plug-in developers. Note that\r\n * these methods are references to internal functions and are considered to be\r\n * private. If you use these methods, be aware that they are liable to change\r\n * between versions.\r\n *  @namespace\r\n */\r\n$.extend( DataTable.ext.internal, {\r\n\t_fnExternApiFunc: _fnExternApiFunc,\r\n\t_fnBuildAjax: _fnBuildAjax,\r\n\t_fnAjaxUpdate: _fnAjaxUpdate,\r\n\t_fnAjaxParameters: _fnAjaxParameters,\r\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\r\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\r\n\t_fnAddColumn: _fnAddColumn,\r\n\t_fnColumnOptions: _fnColumnOptions,\r\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\r\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\r\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\r\n\t_fnVisbleColumns: _fnVisbleColumns,\r\n\t_fnGetColumns: _fnGetColumns,\r\n\t_fnColumnTypes: _fnColumnTypes,\r\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\r\n\t_fnHungarianMap: _fnHungarianMap,\r\n\t_fnCamelToHungarian: _fnCamelToHungarian,\r\n\t_fnLanguageCompat: _fnLanguageCompat,\r\n\t_fnBrowserDetect: _fnBrowserDetect,\r\n\t_fnAddData: _fnAddData,\r\n\t_fnAddTr: _fnAddTr,\r\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\r\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\r\n\t_fnGetCellData: _fnGetCellData,\r\n\t_fnSetCellData: _fnSetCellData,\r\n\t_fnSplitObjNotation: _fnSplitObjNotation,\r\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\r\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\r\n\t_fnGetDataMaster: _fnGetDataMaster,\r\n\t_fnClearTable: _fnClearTable,\r\n\t_fnDeleteIndex: _fnDeleteIndex,\r\n\t_fnInvalidate: _fnInvalidate,\r\n\t_fnGetRowElements: _fnGetRowElements,\r\n\t_fnCreateTr: _fnCreateTr,\r\n\t_fnBuildHead: _fnBuildHead,\r\n\t_fnDrawHead: _fnDrawHead,\r\n\t_fnDraw: _fnDraw,\r\n\t_fnReDraw: _fnReDraw,\r\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\r\n\t_fnDetectHeader: _fnDetectHeader,\r\n\t_fnGetUniqueThs: _fnGetUniqueThs,\r\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\r\n\t_fnFilterComplete: _fnFilterComplete,\r\n\t_fnFilterCustom: _fnFilterCustom,\r\n\t_fnFilterColumn: _fnFilterColumn,\r\n\t_fnFilter: _fnFilter,\r\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\r\n\t_fnEscapeRegex: _fnEscapeRegex,\r\n\t_fnFilterData: _fnFilterData,\r\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\r\n\t_fnUpdateInfo: _fnUpdateInfo,\r\n\t_fnInfoMacros: _fnInfoMacros,\r\n\t_fnInitialise: _fnInitialise,\r\n\t_fnInitComplete: _fnInitComplete,\r\n\t_fnLengthChange: _fnLengthChange,\r\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\r\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\r\n\t_fnPageChange: _fnPageChange,\r\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\r\n\t_fnProcessingDisplay: _fnProcessingDisplay,\r\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\r\n\t_fnScrollDraw: _fnScrollDraw,\r\n\t_fnApplyToChildren: _fnApplyToChildren,\r\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\r\n\t_fnThrottle: _fnThrottle,\r\n\t_fnConvertToWidth: _fnConvertToWidth,\r\n\t_fnGetWidestNode: _fnGetWidestNode,\r\n\t_fnGetMaxLenString: _fnGetMaxLenString,\r\n\t_fnStringToCss: _fnStringToCss,\r\n\t_fnSortFlatten: _fnSortFlatten,\r\n\t_fnSort: _fnSort,\r\n\t_fnSortAria: _fnSortAria,\r\n\t_fnSortListener: _fnSortListener,\r\n\t_fnSortAttachListener: _fnSortAttachListener,\r\n\t_fnSortingClasses: _fnSortingClasses,\r\n\t_fnSortData: _fnSortData,\r\n\t_fnSaveState: _fnSaveState,\r\n\t_fnLoadState: _fnLoadState,\r\n\t_fnImplementState: _fnImplementState,\r\n\t_fnSettingsFromNode: _fnSettingsFromNode,\r\n\t_fnLog: _fnLog,\r\n\t_fnMap: _fnMap,\r\n\t_fnBindAction: _fnBindAction,\r\n\t_fnCallbackReg: _fnCallbackReg,\r\n\t_fnCallbackFire: _fnCallbackFire,\r\n\t_fnLengthOverflow: _fnLengthOverflow,\r\n\t_fnRenderer: _fnRenderer,\r\n\t_fnDataSource: _fnDataSource,\r\n\t_fnRowAttributes: _fnRowAttributes,\r\n\t_fnExtend: _fnExtend,\r\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\r\n\t                                // in 1.10, so this dead-end function is\r\n\t                                // added to prevent errors\r\n} );\r\n\r\n\r\n// jQuery access\r\n$.fn.dataTable = DataTable;\r\n\r\n// Provide access to the host jQuery object (circular reference)\r\nDataTable.$ = $;\r\n\r\n// Legacy aliases\r\n$.fn.dataTableSettings = DataTable.settings;\r\n$.fn.dataTableExt = DataTable.ext;\r\n\r\n// With a capital `D` we return a DataTables API instance rather than a\r\n// jQuery object\r\n$.fn.DataTable = function ( opts ) {\r\n\treturn $(this).dataTable( opts ).api();\r\n};\r\n\r\n// All properties that are available to $.fn.dataTable should also be\r\n// available on $.fn.DataTable\r\n$.each( DataTable, function ( prop, val ) {\r\n\t$.fn.DataTable[ prop ] = val;\r\n} );\r\n\r\nexport default DataTable;\r\n"],
  "mappings": "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",
  "names": ["jQuery", "i", "td", "attr", "k", "settings", "state", "col", "scope", "src", "name", "i", "ien", "e", "idx", "settings", "buttons"]
}
